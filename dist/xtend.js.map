{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/xtend-utils.js","src/scripts/xtend.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_xtend","XtUtil","currents","initAll","container","arguments","undefined","document","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","querySelectorAll","Symbol","iterator","next","done","el","value","XtToggle","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_el","XtDrop","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_el2","XtOverlay","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_el3","XtFade","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_el4","XtSticky","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","id","checkInside","targets","result","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","target","contains","checkOutside","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","scrollbarWidth","outer","createElement","style","visibility","width","msOverflowStyle","body","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","parentNode","removeChild","getUniqueID","uid","getUniqueNum","unumber","merge","arr","final","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","obj","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","Object","entries","_step9$value","_slicedToArray","key","arrSingle","element","Array","str","div","innerHTML","trim","firstChild","parents","query","parentElement","closest","push","xtUtilOn","event","cb","opts","this","namespaces","options","addEventListener","split","xtUtilOff","removeEventListener","Element","prototype","doc","proto","querySelector","_arr","_loop","method","_i","nativ","selectors","test","_id","Date","now","replace","_xtendUtils","Xt","object","jsOptions","attr","_classCallCheck","defaults","constructor","markupOptions","getAttribute","JSON","parse","class","classes","concat","_toConsumableArray","initSetup","initScope","initEvents","indexOf","mode","max","Infinity","namespace","toString","getCurrents","setCurrents","self","elements","namespaceQuery","from","filter","x","appendTo","appendToTarget","forEach","setAttribute","_el$classList","classList","apply","eventOn","todo","min","on","xtOnHandler","eventOnHandler","bind","events","off","xtOffHandler","eventOffHandler","_events","_event","eventLimit","eventOff","all","single","group","groupElements","_final","groupTargets","findIndex","additional","_element$classList","_element$classList2","checkOn","fElements","getElements","addCurrent","_targets","getTargets","_additional","getAdditional","activationDelay","activationOn","toggle","checkOff","removeCurrent","activationOff","els","type","activate","_el$classList2","add","remove","activationOnAnimate","specialClassHtmlOn","specialBackdrop","specialCenterOn","specialMiddleOn","specialCollapseOn","specialCloseOn","specialScrollbarOn","dispatchEvent","Event","dataset","xtDelayTimeout","xtAnimTimeout","delay","xtOnDelay","parseFloat","deactivate","_el$classList3","activationOffAnimate","instant","specialClassHtmlOff","specialCollapseOff","specialCloseOff","xtOffDelay","onDone","height","timing","activationTiming","specialScrollbarOff","getComputedStyle","transition","transitionDuration","transitionDelay","animation","animationDuration","animationDelay","Math","_container$classList","classHtml","documentElement","_container$classList2","backdrop","append","clientWidth","left","clientHeight","top","paddingTop","paddingBottom","h","pt","pb","paddingLeft","paddingRight","w","pl","pr","closeInside","closeElements","closeElement","placespecialCloseOnHandler","specialCloseOnHandler","closeOutside","_closeElements","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","placespecialCloseOffHandler","specialCloseOffHandler","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_closeElements2","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_closeElement","checkEl","console","log","scrollbar","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","position","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","normalizeWidth","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","right","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_loop2","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","innerWidth","_possibleConstructorReturn","__proto__","getPrototypeOf","fadeOffHandler","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","eventScroll","current","scrollInverse","windowHeight","innerHeight","scrollTop","scrollTopOld","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_loop3","offsetParent","rectElTop","getBoundingClientRect","offsetTop","heightEl","changed","bottom","dist","distance","eventFrame","delayOn","func","Function","delayOff","_iterator19","_get","before","cloneNode","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","elId","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","elName","hide","unique","zIndex","stickyOffHandler","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","anim","addHide","scrollHeight","rectContainerTop","eventScrollPos","limit","abs","addTop","addBottom","contain","addTopObj","eventScrollHeight","val","foundHide","xtAddSticky","checkTop","checkBottom","addOld","option","isNaN","isArray","found","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","display","addSticky","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24"],"mappings":"CAAA,WAAA,OAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,GAAA,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ;;;;ACIA,qfAEAK,EAAAX,EAAA,WAMMY,GAQNC,YASAC,QAAiB,WAAgC,IAAtBC,EAAsBC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAVE,SAAUC,GAAA,EAAAC,GAAA,EAAAC,OAAAJ,EAAA,IAE/C,IAAA,IAAAK,EAAAC,EAAeR,EAAUS,iBAAiB,oBAA1CC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA+D,CAAA,IAAtDU,EAAsDP,EAAAQ,MAC7D,IAAAnB,EAAAoB,SAAaF,IAHgC,MAAAG,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,QAAA,KAAAb,GAAAI,EAAAU,QAAAV,EAAAU,SAAA,QAAA,GAAAb,EAAA,MAAAC,GAAA,IAAAa,GAAA,EAAAC,GAAA,EAAAC,OAAAnB,EAAA,IAM/C,IAAA,IAAAoB,EAAAC,EAAevB,EAAUS,iBAAiB,kBAA1CC,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAX,QAAAC,MAAAM,GAAA,EAA6D,CAAA,IAApDK,EAAoDF,EAAAP,MAC3D,IAAAnB,EAAA6B,OAAWD,IAPkC,MAAAP,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,QAAA,KAAAE,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAAA,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAA1B,EAAA,IAU/C,IAAA,IAAA2B,EAAAC,EAAe9B,EAAUS,iBAAiB,qBAA1CC,OAAAC,cAAAe,GAAAG,EAAAC,EAAAlB,QAAAC,MAAAa,GAAA,EAAgE,CAAA,IAAvDK,EAAuDF,EAAAd,MAC9D,IAAAnB,EAAAoC,UAAcD,IAX+B,MAAAd,GAAAU,GAAA,EAAAC,EAAAX,EAAA,QAAA,KAAAS,GAAAI,EAAAZ,QAAAY,EAAAZ,SAAA,QAAA,GAAAS,EAAA,MAAAC,GAAA,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAc/C,IAAA,IAAAkC,EAAAC,EAAerC,EAAUS,iBAAiB,kBAA1CC,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAA6D,CAAA,IAApDK,EAAoDF,EAAArB,MAC3D,IAAAnB,EAAA2C,OAAWD,IAfkC,MAAArB,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,QAAA,KAAAgB,GAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,QAAA,GAAAgB,EAAA,MAAAC,GAAA,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAAxC,EAAA,IAkB/C,IAAA,IAAAyC,EAAAC,EAAe5C,EAAUS,iBAAiB,oBAA1CC,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAA+D,CAAA,IAAtDK,EAAsDF,EAAA5B,MAC7D,IAAAnB,EAAAkD,SAAaD,IAnBgC,MAAA5B,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,QAAA,KAAAuB,GAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,QAAA,GAAAuB,EAAA,MAAAC,MA4BjD7C,EAAOkD,sBACEC,OAAOD,uBAAyBC,OAAOC,6BAA+BD,OAAOE,0BAA4B,SAAUC,GACxHH,OAAOI,WAAWD,EAAU,IAAO,KAQvCtD,EAAOwD,qBACEL,OAAOK,sBAAwBL,OAAOM,4BAA8BN,OAAOO,yBAA2B,SAAUJ,GACrHH,OAAOQ,aAAaC,KAUxB5D,EAAO6D,YAAc,SAAUhF,EAAGiF,GAChC,IAAIC,GAAS,EAD4BC,GAAA,EAAAC,GAAA,EAAAC,OAAA7D,EAAA,IAEzC,IAAA,IAAA8D,EAAAC,EAAcN,EAAdjD,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAuB,CAAA,IAAdjF,EAAcoF,EAAAjD,OACjBrC,EAAEwF,SAAWtF,GAAKA,EAAEuF,SAASzF,EAAEwF,WACjCN,GAAS,IAJ4B,MAAA3C,GAAA6C,GAAA,EAAAC,EAAA9C,EAAA,QAAA,KAAA4C,GAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,QAAA,GAAA4C,EAAA,MAAAC,GAOzC,OAAOH,GAST/D,EAAOuE,aAAe,SAAU1F,EAAGiF,GACjC,IAAIC,GAAS,EAD6BS,GAAA,EAAAC,GAAA,EAAAC,OAAArE,EAAA,IAE1C,IAAA,IAAAsE,EAAAC,EAAcd,EAAdjD,OAAAC,cAAA0D,GAAAG,EAAAC,EAAA7D,QAAAC,MAAAwD,GAAA,EAAuB,CAAA,IAAdzF,EAAc4F,EAAAzD,OACjBrC,EAAEwF,SAAWtF,GAAKA,EAAEuF,SAASzF,EAAEwF,WACjCN,GAAS,IAJ6B,MAAA3C,GAAAqD,GAAA,EAAAC,EAAAtD,EAAA,QAAA,KAAAoD,GAAAI,EAAAvD,QAAAuD,EAAAvD,SAAA,QAAA,GAAAoD,EAAA,MAAAC,GAO1C,OAAOX,GAOT/D,EAAO6E,eAAiB,WAEtB,IAAIC,EAAQxE,SAASyE,cAAc,OACnCD,EAAME,MAAMC,WAAa,SACzBH,EAAME,MAAME,MAAQ,QACpBJ,EAAME,MAAMG,gBAAkB,YAC9B7E,SAAS8E,KAAKC,YAAYP,GAC1B,IAAIQ,EAAgBR,EAAMS,YAE1BT,EAAME,MAAMQ,SAAW,SAEvB,IAAIC,EAAQnF,SAASyE,cAAc,OACnCU,EAAMT,MAAME,MAAQ,OACpBJ,EAAMO,YAAYI,GAClB,IAAIC,EAAkBD,EAAMF,YAG5B,OADAT,EAAMa,WAAWC,YAAYd,GACtBQ,EAAgBI,GAOzB1F,EAAO6F,YAAc,WAEnB,OADA7F,EAAO8F,SAAqBzF,IAAfL,EAAO8F,IAAoB9F,EAAO8F,IAAM,EAC9C,aAAgB9F,EAAO8F,OAOhC9F,EAAO+F,aAAe,WAEpB,OADA/F,EAAOgG,aAA6B3F,IAAnBL,EAAOgG,QAAwBhG,EAAOgG,QAAU,EAC1DhG,EAAOgG,WAQhBhG,EAAOiG,MAAQ,SAAUC,GACvB,IAAIC,KADwBC,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IAE5B,IAAA,IAAAkG,EAAAC,EAAgBN,EAAhBrF,OAAAC,cAAAsF,GAAAG,EAAAC,EAAAzF,QAAAC,MAAAoF,GAAA,EAAqB,CAAA,IAAZK,EAAYF,EAAArF,MAAAwF,GAAA,EAAAC,GAAA,EAAAC,OAAAvG,EAAA,IACnB,IAAA,IAAAwG,EAAAC,EAAyBC,OAAOC,QAAQP,GAAxC5F,OAAAC,cAAA4F,GAAAG,EAAAC,EAAA/F,QAAAC,MAAA0F,GAAA,EAA8C,CAAA,IAAAO,EAAAC,EAAAL,EAAA3F,MAAA,GAApCiG,EAAoCF,EAAA,GAA/B/F,EAA+B+F,EAAA,GAC5Cd,EAAMgB,GAAOjG,GAFI,MAAAE,GAAAuF,GAAA,EAAAC,EAAAxF,EAAA,QAAA,KAAAsF,GAAAI,EAAAzF,QAAAyF,EAAAzF,SAAA,QAAA,GAAAsF,EAAA,MAAAC,KAFO,MAAAxF,GAAAiF,GAAA,EAAAC,EAAAlF,EAAA,QAAA,KAAAgF,GAAAI,EAAAnF,QAAAmF,EAAAnF,SAAA,QAAA,GAAAgF,EAAA,MAAAC,GAO5B,OAAOH,GAQTnG,EAAOoH,UAAY,SAAUC,GAC3B,QAAuBhH,IAAnBgH,EAAQzH,OAAsB,CAChC,IAAIsG,EAAM,IAAIoB,MAAM,GAEpB,OADApB,EAAI,GAAKmB,EACFnB,EAEP,OAAOmB,GASXrH,EAAO+E,cAAgB,SAAUwC,GAC/B,IAAIC,EAAMlH,SAASyE,cAAc,OAEjC,OADAyC,EAAIC,UAAYF,EAAIG,OACbF,EAAIG,YASb3H,EAAO4H,QAAU,SAAUP,EAASQ,GAElC,IADA,IAAID,KACGP,EAAUA,EAAQS,cAAcC,QAAQF,IAC7CD,EAAQI,KAAKX,GAEf,OAAOO,GAwBT5H,EAAOiI,SAAW,SAAUC,EAAOC,EAAIC,GAChCC,KAAKC,aACRD,KAAKC,eAEPD,KAAKC,WAAWJ,GAASC,EACzB,IAAII,EAAUH,IAAQ,EAEtB,OADAC,KAAKG,iBAAiBN,EAAMO,MAAM,KAAK,GAAIN,EAAII,GACxCF,MAETrI,EAAO0I,UAAY,SAAUR,GAK3B,OAJIG,KAAKC,aACPD,KAAKM,oBAAoBT,EAAMO,MAAM,KAAK,GAAIJ,KAAKC,WAAWJ,WACvDG,KAAKC,WAAWJ,IAElBG,MAGTlF,OAAO8E,SAAWW,QAAQC,UAAUZ,SAAWjI,EAAOiI,SACtD9E,OAAOuF,UAAYE,QAAQC,UAAUH,UAAY1I,EAAO0I,UAMxDvF,OAAOnD,OAASA,IACRA,OAAAA,EAOR,SAAW8I,EAAKC,GACd,IACED,EAAIE,cAAc,eAClB,MAAO5H,GACP,IADY,IAAA6H,GACQ,gBAAiB,oBADzBC,EAAA,WACP,IAAIC,EAAAF,EAAAG,GACHC,EAAQN,EAAMI,GAClBJ,EAAMI,GAAU,SAAUG,GACxB,GAAI,iBAAiBC,KAAKD,GAAY,CACpC,IAAIE,EAAKnB,KAAKzE,GACdyE,KAAKzE,GAAK,MAAQ6F,KAAKC,MACvBJ,EAAYA,EAAUK,QAAQ,oBAAqB,MAAQtB,KAAKzE,IAChE,IAAIG,EAAS+E,EAAIK,GAAQG,GAEzB,OADAjB,KAAKzE,GAAK4F,EACHzF,EAEP,OAAOsF,EAAM1J,KAAK0I,KAAMiB,KAX9BF,EAAA,EAAAA,EAAAH,EAAArJ,OAAAwJ,IAA0DF,KAJ9D,CAoBG/F,OAAO7C,SAAUsI,QAAQC,8CC/Q5B,uXAEAe,EAAAxK,EAAA,ysBAMMyK,aASJ,SAAAA,EAAYC,GAA8B,IAAtBC,EAAsB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAN4J,EAAM5J,UAAA,GAExC,GAFwC6J,EAAA5B,KAAAwB,GACxCxB,KAAKyB,OAASA,EACVzB,KAAKyB,OAAQ,CACfzB,KAAK6B,SAAW7B,KAAK8B,YAAYD,SAEjC7B,KAAKE,QAAUqB,EAAA5J,OAAOiG,OAAOoC,KAAK6B,SAAUH,IAE5C,IAAIK,EAAgB/B,KAAKyB,OAAOO,aAAaL,GAC7C3B,KAAKE,QAAUqB,EAAA5J,OAAOiG,OAAOoC,KAAKE,QAAS6B,EAAgBE,KAAKC,MAAMH,QAElE/B,KAAKE,QAAQiC,QACfnC,KAAKE,QAAQkC,WAAbC,OAAAC,EAA2BtC,KAAKE,QAAQiC,MAAM/B,MAAM,QAGtDJ,KAAKuC,YACLvC,KAAKwC,YACLxC,KAAKyC,4DAYP,IACIvC,EADOF,KACQE,QAEfA,EAAQzE,UAA6C,IAAlCyE,EAAQzE,QAAQiH,QAAQ,MAE7C1C,KAAK2C,KAAO,MACZ3C,KAAKlI,UAAYG,SACjBiI,EAAQ0C,IAAMC,EAAAA,EACd7C,KAAK8C,UAAY5C,EAAQzE,QAAQsH,WAAa,IAAM7C,EAAQkC,QAAQW,aAGpE/C,KAAK2C,KAAO,SACZ3C,KAAKlI,UAAYkI,KAAKyB,OACtBzB,KAAK8C,UAAYvB,EAAA5J,OAAO6F,eAG1BwC,KAAK8C,UAAY9C,KAAK8C,UAAUxB,QAAQ,OAAQ,IAE3CtB,KAAKgD,eACRhD,KAAKiD,oDAQP,IAAIC,EAAOlD,KACPE,EAAUgD,EAAKhD,QAenB,GAbAF,KAAKmD,YACDjD,EAAQiD,WACVnD,KAAKmD,SAAW5B,EAAA5J,OAAOoH,UAAUiB,KAAKlI,UAAUS,iBAAiB2H,EAAQiD,YAEtEnD,KAAKmD,SAAS5L,SACjByI,KAAKmD,SAAW5B,EAAA5J,OAAOoH,UAAUiB,KAAKyB,QAEtCF,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxC,IAAIsI,EAAiB,eAAiBF,EAAKJ,UAAY,IACvDI,EAAKC,SAAW5B,EAAA5J,OAAOoH,UAAU9G,SAASM,iBAAiB6K,OAI3DlD,EAAQzE,QAAS,CACnB,IAAIoC,EAAMoB,MAAMoE,KAAKrD,KAAKlI,UAAUS,iBAAiB2H,EAAQzE,UAC7DoC,EAAMA,EAAIyF,OAAO,SAAAC,GAAA,OAAMhC,EAAA5J,OAAO4H,QAAQgE,EAAGrD,EAAQzE,SAASlE,SAC1DyI,KAAKvE,QAAU8F,EAAA5J,OAAOoH,UAAUlB,GAGlC,GAAIqC,EAAQsD,SAAU,CACpB,IAAIC,EAAiBxL,SAASM,iBAAiB2H,EAAQsD,UACnDC,EAAelM,QACjByI,KAAKvE,QAAQiI,QAAQ,SAAU9K,GAC7B6K,EAAe,GAAGzG,YAAYpE,KA3B1B,IAAAV,GAAA,EAAAC,GAAA,EAAAC,OAAAJ,EAAA,IAgCV,IAAA,IAAAK,EAAAC,EAAe0H,KAAKmD,SAApB3K,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA8B,CAAAG,EAAAQ,MACzB8K,aAAa,aAAcT,EAAKJ,YAjC3B,MAAA/J,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,QAAA,KAAAb,GAAAI,EAAAU,QAAAV,EAAAU,SAAA,QAAA,GAAAb,EAAA,MAAAC,GAoCVmJ,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxC,GAAIoI,EAAKC,SAAS5L,OAAQ,CAExB,IAAI6K,EAAUc,EAAKhD,QAAQkC,QAFHnJ,GAAA,EAAAC,GAAA,EAAAC,OAAAnB,EAAA,IAGxB,IAAA,IAAAoB,EAAAC,EAAe6J,EAAKC,SAApB3K,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAX,QAAAC,MAAAM,GAAA,EAA8B,CAAA,IAAA2K,EAArBhL,EAAqBQ,EAAAP,OACxB+K,EAAAhL,EAAGiL,WAAU5H,SAAb6H,MAAAF,EAAAtB,EAAyBF,KAC3Bc,EAAKa,QAAQnL,IALO,MAAAG,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,QAAA,KAAAE,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GASxB,IAAI6K,EAAO9D,EAAQ+D,IAAMf,EAAKF,cAAczL,OAC5C,GAAIyM,EACF,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAMpN,IACxBsM,EAAKa,QAAQb,EAAKC,SAASvM,4CAWnC,IACIsJ,EADOF,KACQE,QAFR1G,GAAA,EAAAC,GAAA,EAAAC,OAAA1B,EAAA,IAIX,IAAA,IAAA2B,EAAAC,EAAeoG,KAAKmD,SAApB3K,OAAAC,cAAAe,GAAAG,EAAAC,EAAAlB,QAAAC,MAAAa,GAAA,EAA8B,CAAA,IAArBZ,EAAqBe,EAAAd,MAC5B,GAAIqH,EAAQgE,GAAI,CAEdtL,EAAGuL,YANInE,KAMeoE,eAAeC,KAN9BrE,MAMyCqE,KANzCrE,KAMoDpH,GAE3D,IAAI0L,KAAAjC,OAAAC,EAAapC,EAAQgE,GAAG9D,MAAM,OAJpBrG,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAKd,IAAA,IAAAkC,EAAAC,EAAkBmK,EAAlB9L,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAA0B,CAAA,IAAjB8F,EAAiB3F,EAAArB,MACxBD,EAAG0H,oBAAoBT,EAAOjH,EAAGuL,aACjCvL,EAAGuH,iBAAiBN,EAAOjH,EAAGuL,cAPlB,MAAApL,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,QAAA,KAAAgB,GAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,QAAA,GAAAgB,EAAA,MAAAC,GASdrB,EAAGuH,iBAAiB,aAAcvH,EAAGuL,aAEvC,GAAIjE,EAAQqE,IAAK,CAEf3L,EAAG4L,aAjBIxE,KAiBgByE,gBAAgBJ,KAjBhCrE,MAiB2CqE,KAjB3CrE,KAiBsDpH,GAE7D,IAAI8L,KAAArC,OAAAC,EAAapC,EAAQqE,IAAInE,MAAM,OAJpB9F,GAAA,EAAAC,GAAA,EAAAC,OAAAxC,EAAA,IAKf,IAAA,IAAAyC,EAAAC,EAAkBgK,EAAlBlM,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAA0B,CAAA,IAAjBqK,EAAiBlK,EAAA5B,MACxBD,EAAG0H,oBAAoBqE,EAAO/L,EAAG4L,cACjC5L,EAAGuH,iBAAiBwE,EAAO/L,EAAG4L,eAPjB,MAAAzL,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,QAAA,KAAAuB,GAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,QAAA,GAAAuB,EAAA,MAAAC,GASf5B,EAAGuH,iBAAiB,cAAevH,EAAG4L,gBAzB/B,MAAAzL,GAAAU,GAAA,EAAAC,EAAAX,EAAA,QAAA,KAAAS,GAAAI,EAAAZ,QAAAY,EAAAZ,SAAA,QAAA,GAAAS,EAAA,MAAAC,2CAkCEsF,EAASxI,GACtB,IAAIoO,EAAa5E,KAAKlI,UAAUS,iBAAiB,gBAC7CqM,EAAWrN,OACTgK,EAAA5J,OAAOuE,aAAa1F,EAAGoO,IACzB5E,KAAK+D,QAAQ/E,GAGfgB,KAAK+D,QAAQ/E,2CAQDA,EAASxI,GACvB,IAAIoO,EAAa5E,KAAKlI,UAAUS,iBAAiB,gBAC7CqM,EAAWrN,OACTgK,EAAA5J,OAAOuE,aAAa1F,EAAGoO,IACzB5E,KAAK6E,SAAS7F,GAGhBgB,KAAK6E,SAAS7F,uCAaNA,GACV,IAAKgB,KAAKmD,WAAanD,KAAKmD,SAAS5L,OACnC,OAAQuN,OAASC,OAAQ,MAE3B,GAAkB,QAAd/E,KAAK2C,KAEP,OAAQmC,IAAK9E,KAAKmD,SAAU4B,OAAQ/E,KAAKmD,SAAS,IAC7C,GAAkB,WAAdnD,KAAK2C,KAAmB,CAEjC,IAAIqC,EAAQhG,EAAQgD,aAAa,cACjC,GAAIgD,EAAO,CAET,IAAIC,EAAgBhG,MAAMoE,KAAKrD,KAAKmD,UAAUG,OAAO,SAAAC,GAAA,OAAKA,EAAEvB,aAAa,gBAAkBgD,IACvFlH,EAAQyD,EAAA5J,OAAOoH,UAAUkG,GAC7B,OAAQH,IAAKhH,EAAOiH,OAAQjH,EAAM,IAGlC,IAAIoH,EAAQlG,EACZ,OAAQ8F,IAAKvD,EAAA5J,OAAOoH,UAAUmG,GAAQH,OAAQG,uCAUzClG,GACT,IAAKgB,KAAKvE,UAAYuE,KAAKvE,QAAQlE,OACjC,SAEF,GAAkB,QAAdyI,KAAK2C,KAEP,OAAO3C,KAAKvE,QACP,GAAkB,WAAduE,KAAK2C,KAAmB,CAEjC,IAAIqC,EAAQhG,EAAQgD,aAAa,cAC7BiD,EAAgBhG,MAAMoE,KAAKrD,KAAKmD,UAAUG,OAAO,SAAAC,GAAA,OAAKA,EAAEvB,aAAa,gBAAkBgD,IACvFG,EAAelG,MAAMoE,KAAKrD,KAAKvE,SAAS6H,OAAO,SAAAC,GAAA,OAAKA,EAAEvB,aAAa,gBAAkBgD,IACrFlH,OAAA,EACJ,OAAIkH,GAEFlH,EAAQqH,EACD5D,EAAA5J,OAAOoH,UAAUjB,KAIxBA,EAAQqH,EADIF,EAAcG,UAAU,SAAA7B,GAAA,OAAKA,IAAMvE,KAExCuC,EAAA5J,OAAOoH,UAAUjB,6CAU5B,OAAOkC,KAAKyB,OAAOlJ,iBAAiByH,KAAKE,QAAQmF,kDAQjD,OAAO9D,EAAA5J,OAAOC,SAASoI,KAAK8C,+CAOlBjF,GACV0D,EAAA5J,OAAOC,SAASoI,KAAK8C,WAAajF,qCAOzBmB,GACCuC,EAAA5J,OAAOC,SAASoI,KAAK8C,WAC3BnD,KAAKX,yCAOGA,GACZuC,EAAA5J,OAAOC,SAASoI,KAAK8C,WAAavB,EAAA5J,OAAOC,SAASoI,KAAK8C,WAAWQ,OAAO,SAAAC,GAAA,OAAKA,IAAMvE,oCAY9EA,GAAS,IAAAsG,EACf,SAAMA,EAAAtG,EAAQ6E,WAAU5H,SAAlB6H,MAAAwB,EAAAhD,EAA8BtC,KAAKE,QAAQkC,YAAYpD,EAAQ6E,UAAU5H,SAAS,cAAkB+C,EAAQ6E,UAAU5H,SAAS,8CAY9H+C,GAAS,IAAAuG,EAGhB,SADWvF,KAAKE,QAAQ+D,IAAMjE,KAAKgD,cAAczL,aAI5CgO,EAAAvG,EAAQ6E,WAAU5H,SAAlB6H,MAAAyB,EAAAjD,EAA8BtC,KAAKE,QAAQkC,YAAYpD,EAAQ6E,UAAU5H,SAAS,aAAiB+C,EAAQ6E,UAAU5H,SAAS,8CAW7H+C,GACN,IAAIkE,EAAOlD,KACPE,EAAUgD,EAAKhD,QAEnB,GAAIF,KAAKwF,QAAQxG,GAAU,CACzB,IAAIyG,EAAYzF,KAAK0F,YAAY1G,GACjCgB,KAAK2F,WAAWF,EAAUV,QAC1B,IAAIa,EAAU5F,KAAK6F,WAAW7G,GAC1B8G,EAAa9F,KAAK+F,gBAClBC,GACF7C,SAAU,WACRD,EAAK+C,aAAaR,EAAUX,IAAKW,EAAW,aAE9ChK,QAAS,WACPyH,EAAK+C,aAAaL,EAASH,EAAW,YAExCJ,WAAY,WACVnC,EAAK+C,aAAaH,EAAYL,EAAW,gBAIzC7N,EAAWoI,KAAKgD,cAChBpL,EAASL,OAAS2I,EAAQ0C,IAC5B5C,KAAK6E,SAASjN,EAAS,GAAIoO,IAE3BA,EAAgB7C,WAChB6C,EAAgBvK,UAChBuK,EAAgBX,mBAETnF,EAAQgG,QACjBlG,KAAK6E,SAAS7F,oCASTA,GAAiC,IAAxBgH,EAAwBjO,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAElC,GAAIiI,KAAKmG,SAASnH,GAAU,CAC1B,IAAIyG,EAAYzF,KAAK0F,YAAY1G,GACjCgB,KAAKoG,cAAcX,EAAUV,QAC7B/E,KAAKqG,cAAcZ,EAAUX,IAAKW,EAAW,WAAYO,GACzD,IAAIvK,EAAUuE,KAAK6F,WAAW7G,GAC9BgB,KAAKqG,cAAc5K,EAASgK,EAAW,UAAWO,GAClD,IAAIX,EAAarF,KAAK+F,gBACtB/F,KAAKqG,cAAchB,EAAYI,EAAW,aAAcO,yCAU/CM,EAAKb,EAAWc,GAC3B,IACIrG,EADOF,KACQE,QAEfsG,EAAW,SAAUtD,EAAMtK,EAAI6M,EAAWc,GAAM,IAAAE,GAClDA,EAAA7N,EAAGiL,WAAU6C,IAAb5C,MAAA2C,EAAAnE,EAAoBpC,EAAQkC,UAC5BxJ,EAAGiL,UAAU8C,OAAO,OACpBzD,EAAK0D,oBAAoBhO,EAAI2N,GAEhB,YAATA,IACFrD,EAAK2D,qBACL3D,EAAK4D,gBAAgBlO,GACrBsK,EAAK6D,gBAAgBnO,GACrBsK,EAAK8D,gBAAgBpO,GACrBsK,EAAK+D,kBAAkBrO,GACvBsK,EAAKgE,eAAetO,EAAI6M,EAAUV,QAClC7B,EAAKiE,sBAGPvO,EAAGwO,cAAc,IAAIC,MAAM,QAnBI1L,GAAA,EAAAC,GAAA,EAAAC,OAAA7D,EAAA,IAsBjC,IAAA,IAAA8D,EAAAC,EAAeuK,EAAf9N,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAoB,CAAA,IAAX/C,EAAWkD,EAAAjD,MAClBD,EAAGiL,UAAU8C,OAAO,aACpBrL,aAAa1C,EAAG0O,QAAQC,gBACxBjM,aAAa1C,EAAG0O,QAAQE,eACxB,IAAIC,EAAQ7O,EAAG0O,QAAQI,UACnBD,GACF7O,EAAGiL,UAAU6C,IAAI,YACjB9N,EAAG0O,QAAQC,eAAiBrM,WAAW,SAAUgI,EAAMtK,EAAI6M,EAAWc,GACpE3N,EAAGiL,UAAU8C,OAAO,YACpBH,EAAStD,EAAMtK,EAAI6M,EAAWc,IAC7BoB,WAAWF,GA/BPzH,KA+BqBpH,EAAI6M,EAAWc,GAAMxD,YAEjDyD,EAjCOxG,KAiCQpH,EAAI6M,EAAWc,IAlCD,MAAAxN,GAAA6C,GAAA,EAAAC,EAAA9C,EAAA,QAAA,KAAA4C,GAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,QAAA,GAAA4C,EAAA,MAAAC,0CA8CrByK,EAAKb,EAAWc,EAAMP,GAClC,IACI9F,EADOF,KACQE,QAEf0H,EAAa,SAAU1E,EAAMtK,EAAI6M,EAAWc,EAAMP,GAAiB,IAAA6B,GACrEA,EAAAjP,EAAGiL,WAAU8C,OAAb7C,MAAA+D,EAAAvF,EAAuBpC,EAAQkC,UAC/BxJ,EAAGiL,UAAU6C,IAAI,OACjBxD,EAAK4E,qBAAqBlP,EAAI2N,EAAMP,GAEhCA,GAAmBA,EAAgBO,KAAUP,EAAgBO,EAAO,SAClErG,EAAQ6H,SAAW7H,EAAQ6H,QAAQxB,KACrCP,EAAgBO,KAChBP,EAAgBO,EAAO,SAAU,GAIxB,YAATA,IACFrD,EAAK8E,sBACL9E,EAAK+E,mBAAmBrP,GACxBsK,EAAKgF,gBAAgBtP,IAGvBA,EAAGwO,cAAc,IAAIC,MAAM,SAtBsBlL,GAAA,EAAAC,GAAA,EAAAC,OAAArE,EAAA,IAyBnD,IAAA,IAAAsE,EAAAC,EAAe+J,EAAf9N,OAAAC,cAAA0D,GAAAG,EAAAC,EAAA7D,QAAAC,MAAAwD,GAAA,EAAoB,CAAA,IAAXvD,EAAW0D,EAAAzD,MAClBD,EAAGiL,UAAU8C,OAAO,YACpBrL,aAAa1C,EAAG0O,QAAQC,gBACxBjM,aAAa1C,EAAG0O,QAAQE,eACxB,IAAIC,EAAQ7O,EAAG0O,QAAQa,WACnBV,GACF7O,EAAGiL,UAAU6C,IAAI,aACjB9N,EAAG0O,QAAQC,eAAiBrM,WAAW,SAAUgI,EAAMtK,EAAI6M,EAAWc,EAAMP,GAC1EpN,EAAGiL,UAAU8C,OAAO,aACpBiB,EAAW1E,EAAMtK,EAAI6M,EAAWc,EAAMP,IACrC2B,WAAWF,GAlCPzH,KAkCqBpH,EAAI6M,EAAWc,EAAMP,GAAiBjD,YAElE6E,EApCO5H,KAoCUpH,EAAI6M,EAAWc,EAAMP,IArCS,MAAAjN,GAAAqD,GAAA,EAAAC,EAAAtD,EAAA,QAAA,KAAAoD,GAAAI,EAAAvD,QAAAuD,EAAAvD,SAAA,QAAA,GAAAoD,EAAA,MAAAC,gDA+CjCzD,EAAI2N,GAEtB,IAAI6B,EAAS,SAAUxP,EAAI2N,GAErB3N,EAAGiL,UAAU5H,SAAS,qBACxBrD,EAAG+D,MAAM0L,OAAS,QAEhBzP,EAAGiL,UAAU5H,SAAS,oBACxBrD,EAAG+D,MAAME,MAAQ,SAIjByL,EAAStI,KAAKuI,iBAAiB3P,GACnC0C,aAAa1C,EAAG0O,QAAQE,eACnBc,EAGH1P,EAAG0O,QAAQE,cAAgBtM,WAAW,SAAUtC,EAAI2N,GAClD6B,EAAOxP,IACN0P,EAAQ1P,EAAI2N,GAAMxD,WAJrBqF,EAAOxP,gDAcUA,EAAI2N,EAAMP,GAC7B,IAAI9C,EAAOlD,KACPE,EAAUgD,EAAKhD,QAEfkI,EAAS,SAAUxP,EAAI2N,GACzB3N,EAAGiL,UAAU8C,OAAO,OAEP,YAATJ,GACFrD,EAAKsF,sBAGHxC,GAAmBA,EAAgBO,KAAUP,EAAgBO,EAAO,UACjErG,EAAQ6H,SAAY7H,EAAQ6H,QAAQxB,KACvCP,EAAgBO,KAChBP,EAAgBO,EAAO,SAAU,KAKnC+B,EAAStI,KAAKuI,iBAAiB3P,GACnC0C,aAAa1C,EAAG0O,QAAQE,eACnBc,EAGH1P,EAAG0O,QAAQE,cAAgBtM,WAAW,SAAUtC,EAAI2N,GAClD6B,EAAOxP,EAAI2N,IACV+B,EAAQ1P,EAAI2N,GAAMxD,WAJrBqF,EAAOxP,EAAI2N,4CAaE3N,GACf,IAGI0P,EAHOtI,KACQE,QAEEoI,OACrB,QAAetQ,IAAXsQ,EACF,OAAOA,EAEP,IAAI3L,EAAQ8L,iBAAiB7P,GACzB8P,EAAaf,WAAWhL,EAAMgM,oBAAsBhB,WAAWhL,EAAMiM,iBACrEC,EAAYlB,WAAWhL,EAAMmM,mBAAqBnB,WAAWhL,EAAMoM,gBAIvE,OAHIL,GAAcG,KAChBP,EAASU,KAAKpG,IAAI8F,EAAYG,IAEhB,IAATP,+CAYT,IAGuBW,EAFnB/I,EADOF,KACQE,QAEfA,EAAQgJ,YAEVD,EADgBhR,SAASkR,gBACftF,WAAU6C,IAApB5C,MAAAmF,EAAA3G,EAA2BpC,EAAQgJ,UAAU9I,MAAM,qDAQrD,IAGuBgJ,EAFnBlJ,EADOF,KACQE,QAEfA,EAAQgJ,YAEVE,EADgBnR,SAASkR,gBACftF,WAAU8C,OAApB7C,MAAAsF,EAAA9G,EAA8BpC,EAAQgJ,UAAU9I,MAAM,+CAQ1CxH,GACd,IACIsH,EADOF,KACQE,QAEnB,GAAIA,EAAQmJ,SAAU,CACpB,IAAIlG,OAAA,EACqB,WAArBjD,EAAQmJ,SACVlG,EAAW5B,EAAA5J,OAAOoH,UAAUiB,KAAKyB,QACH,YAArBvB,EAAQmJ,SACjBlG,EAAW5B,EAAA5J,OAAOoH,UAAUnG,IAE5BuK,EAAWvK,EAAGL,iBAAiB2H,EAAQmJ,WACzB9R,SACZ4L,EAAWnD,KAAKyB,OAAOlJ,iBAAiB2H,EAAQmJ,WAThC,IAAAtL,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IAYpB,IAAA,IAAAkG,EAAAC,EAAoBgF,EAApB3K,OAAAC,cAAAsF,GAAAG,EAAAC,EAAAzF,QAAAC,MAAAoF,GAAA,EAA8B,CAAA,IAArBiB,EAAqBd,EAAArF,MACxBwQ,EAAWrK,EAAQzG,iBAAiB,gBACnC8Q,EAAS9R,SACZ8R,EAAW9H,EAAA5J,OAAO+E,cAAc,mCAChCsC,EAAQsK,OAAOD,KAhBC,MAAAtQ,GAAAiF,GAAA,EAAAC,EAAAlF,EAAA,QAAA,KAAAgF,GAAAI,EAAAnF,QAAAmF,EAAAnF,SAAA,QAAA,GAAAgF,EAAA,MAAAC,6CA0BRrF,GACd,GAAIA,EAAGiL,UAAU5H,SAAS,eAAgB,CACxC,IAAIyK,EAAM1G,KAAKyB,OAAO8H,YAClB5C,EAAS/N,EAAG2Q,YAChB3Q,EAAG+D,MAAM6M,MAAS9C,EAAMC,GAAU,EAAK,8CAQ3B/N,GACd,GAAIA,EAAGiL,UAAU5H,SAAS,eAAgB,CACxC,IAAIyK,EAAM1G,KAAKyB,OAAOgI,aAClB9C,EAAS/N,EAAG6Q,aAChB7Q,EAAG+D,MAAM+M,KAAQhD,EAAMC,GAAU,EAAK,gDAQxB/N,GAChB,GAAIA,EAAGiL,UAAU5H,SAAS,mBAAoB,CAC5CrD,EAAGiL,UAAU6C,IAAI,iBACjB9N,EAAG+D,MAAM0L,OAAS,OAClBzP,EAAG+D,MAAMgN,WAAa,GACtB/Q,EAAG+D,MAAMiN,cAAgB,GACzB,IAAIC,EAAIjR,EAAG6Q,aAAe,KACtBK,EAAKlR,EAAG+D,MAAMgN,WACdI,EAAKnR,EAAG+D,MAAMiN,cAClBrI,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAM0L,OAAS,IAClBzP,EAAG+D,MAAMgN,WAAa,IACtB/Q,EAAG+D,MAAMiN,cAAgB,IACzBrI,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAGiL,UAAU8C,OAAO,iBACpB/N,EAAG+D,MAAM0L,OAASwB,EAClBjR,EAAG+D,MAAMgN,WAAaG,EACtBlR,EAAG+D,MAAMiN,cAAgBG,MAI/B,GAAInR,EAAGiL,UAAU5H,SAAS,kBAAmB,CAC3CrD,EAAG+D,MAAME,MAAQ,OACjBjE,EAAG+D,MAAMqN,YAAc,GACvBpR,EAAG+D,MAAMsN,aAAe,GACxB,IAAIC,EAAItR,EAAG6Q,aAAe,KACtBU,EAAKvR,EAAG+D,MAAMqN,YACdI,EAAKxR,EAAG+D,MAAMsN,aAClB1I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAME,MAAQ,IACjBjE,EAAG+D,MAAMqN,YAAc,IACvBpR,EAAG+D,MAAMsN,aAAe,IACxB1I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAGiL,UAAU8C,OAAO,iBACpB/N,EAAG+D,MAAME,MAAQqN,EACjBtR,EAAG+D,MAAMqN,YAAcG,EACvBvR,EAAG+D,MAAMsN,aAAeG,kDAUbxR,GACjB,GAAIA,EAAGiL,UAAU5H,SAAS,mBAAoB,CAC5C,IAAI4N,EAAIjR,EAAG6Q,aAAe,KACtBK,EAAKlR,EAAG+D,MAAMgN,WACdI,EAAKnR,EAAG+D,MAAMiN,cAClBrI,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAM0L,OAASwB,EAClBjR,EAAG+D,MAAMgN,WAAaG,EACtBlR,EAAG+D,MAAMiN,cAAgBG,EACzBxI,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAM0L,OAAS,IAClBzP,EAAG+D,MAAMgN,WAAa,IACtB/Q,EAAG+D,MAAMiN,cAAgB,QAI/B,GAAIhR,EAAGiL,UAAU5H,SAAS,kBAAmB,CAC3C,IAAIiO,EAAItR,EAAG2Q,YAAc,KACrBY,EAAKvR,EAAG+D,MAAMqN,YACdI,EAAKxR,EAAG+D,MAAMsN,aAClB1I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAME,MAAQqN,EACjBtR,EAAG+D,MAAMqN,YAAcG,EACvBvR,EAAG+D,MAAMsN,aAAeG,EACxB7I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxClC,EAAG+D,MAAME,MAAQ,IACjBjE,EAAG+D,MAAMqN,YAAc,IACvBpR,EAAG+D,MAAMsN,aAAe,gDAWjBrR,EAAImM,GACjB,IAAI7B,EAAOlD,KACPE,EAAUgD,EAAKhD,QAEnB,GAAIA,EAAQmK,YAAa,CACvB,IAAIC,EAAgB1R,EAAGL,iBAAiB2H,EAAQmK,aAChD9I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WAAY,IAAAuD,GAAA,EAAAC,GAAA,EAAAC,OAAAvG,EAAA,IACpD,IAAA,IAAAwG,EAAAC,EAAyB6L,EAAzB9R,OAAAC,cAAA4F,GAAAG,EAAAC,EAAA/F,QAAAC,MAAA0F,GAAA,EAAwC,CAAA,IAA/BkM,EAA+B/L,EAAA3F,MAEtC0R,EAAaC,2BAA6BtH,EAAKuH,sBAAsBpG,KAAKnB,GAAMmB,KAAKnB,EAAMqH,EAAcxF,GAEzGwF,EAAajK,oBAAoB,QAASiK,EAAaC,4BACvDD,EAAapK,iBAAiB,QAASoK,EAAaC,4BAA4B,IAN9B,MAAAzR,GAAAuF,GAAA,EAAAC,EAAAxF,EAAA,QAAA,KAAAsF,GAAAI,EAAAzF,QAAAyF,EAAAzF,SAAA,QAAA,GAAAsF,EAAA,MAAAC,MAWxD,GAAI2B,EAAQwK,aAAc,CACxB,IAAIC,EAAgB1S,SAASkR,gBAAgB5Q,iBAAiB2H,EAAQwK,cACtEnJ,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WAAY,IAAA8P,GAAA,EAAAC,GAAA,EAAAC,OAAA9S,EAAA,IACpD,IAAA,IAAA+S,EAAAC,EAAyBL,EAAzBnS,OAAAC,cAAAmS,GAAAG,EAAAC,EAAAtS,QAAAC,MAAAiS,GAAA,EAAwC,CAAA,IAA/BL,EAA+BQ,EAAAlS,MAEtC0R,EAAaU,4BAA8B/H,EAAKgI,uBAAuB7G,KAAKnB,GAAMmB,KAAKnB,EAAMtK,EAAImM,GAEjGwF,EAAajK,oBAAoB,QAASiK,EAAaU,6BACvDV,EAAapK,iBAAiB,QAASoK,EAAaU,6BAA6B,IAN/B,MAAAlS,GAAA8R,GAAA,EAAAC,EAAA/R,EAAA,QAAA,KAAA6R,GAAAI,EAAAhS,QAAAgS,EAAAhS,SAAA,QAAA,GAAA6R,EAAA,MAAAC,+CAgB1ClS,GACd,IACIsH,EADOF,KACQE,QAEnB,GAAIA,EAAQmK,YAAa,CACvB,IAAIC,EAAgB1R,EAAGL,iBAAiB2H,EAAQmK,aADzBc,GAAA,EAAAC,GAAA,EAAAC,OAAArT,EAAA,IAEvB,IAAA,IAAAsT,EAAAC,EAAyBjB,EAAzB9R,OAAAC,cAAA0S,GAAAG,EAAAC,EAAA7S,QAAAC,MAAAwS,GAAA,EAAwC,CAAA,IAA/BZ,EAA+Be,EAAAzS,MACtC0R,EAAajK,oBAAoB,QAASiK,EAAaC,6BAHlC,MAAAzR,GAAAqS,GAAA,EAAAC,EAAAtS,EAAA,QAAA,KAAAoS,GAAAI,EAAAvS,QAAAuS,EAAAvS,SAAA,QAAA,GAAAoS,EAAA,MAAAC,IAOzB,GAAInL,EAAQwK,aAAc,CACxB,IAAIc,EAAgBvT,SAASkR,gBAAgB5Q,iBAAiB2H,EAAQwK,cAD9Ce,GAAA,EAAAC,GAAA,EAAAC,OAAA3T,EAAA,IAExB,IAAA,IAAA4T,EAAAC,EAAyBL,EAAzBhT,OAAAC,cAAAgT,GAAAG,EAAAC,EAAAnT,QAAAC,MAAA8S,GAAA,EAAwC,CAAA,IAA/BK,EAA+BF,EAAA/S,MACtCiT,EAAaxL,oBAAoB,QAASwL,EAAab,8BAHjC,MAAAlS,GAAA2S,GAAA,EAAAC,EAAA5S,EAAA,QAAA,KAAA0S,GAAAI,EAAA7S,QAAA6S,EAAA7S,SAAA,QAAA,GAAA0S,EAAA,MAAAC,mDAsBNI,EAAShH,EAAQvO,GACrCwV,QAAQC,IAAIlH,GACRxD,EAAA5J,OAAO6D,YAAYhF,EAAG+K,EAAA5J,OAAOoH,UAAUgN,KACzC/L,KAAK6E,SAASE,kDAUKgH,EAAShH,EAAQvO,GAClC+K,EAAA5J,OAAOuE,aAAa1F,EAAG+K,EAAA5J,OAAOoH,UAAUgN,KAC1C/L,KAAK6E,SAASE,gDAQhB,IAAI7B,EAAOlD,KAGX,GAFckD,EAAKhD,QAEPgM,UAAW,CACrB,IAAI/I,OAAA,EACAtG,EAAQ0E,EAAA5J,OAAO6E,iBAEnB2G,EAAWlL,SAASkR,gBAAgB5Q,iBAAiB,uBAJhC,IAAA4T,GAAA,EAAAC,GAAA,EAAAC,OAAArU,EAAA,IAKrB,IAAA,IAAAsU,EAAAC,EAAoBpJ,EAApB3K,OAAAC,cAAA0T,GAAAG,EAAAC,EAAA7T,QAAAC,MAAAwT,GAAA,EAA8B,CAAA,IAArBnN,EAAqBsN,EAAAzT,MAEL,UADX4P,iBAAiBzJ,GACnBwN,SACRxN,EAAQ6E,UAAU6C,IAAI,YAEtB1H,EAAQ6E,UAAU8C,OAAO,aAVR,MAAA5N,GAAAqT,GAAA,EAAAC,EAAAtT,EAAA,QAAA,KAAAoT,GAAAI,EAAAvT,QAAAuT,EAAAvT,SAAA,QAAA,GAAAoT,EAAA,MAAAC,GAcrBlJ,EAAWlL,SAASkR,gBAAgB5Q,iBAAiB,aAdhC,IAAAkU,GAAA,EAAAC,GAAA,EAAAC,OAAA3U,EAAA,IAerB,IAfqB,IAerB4U,EAfqB/L,EAAA,WAAA,IAeZ7B,EAfY4N,EAAA/T,MAiBnB,GADAmG,EAAQrC,MAAMsN,aAAe,GACoB,KAA7C/G,EAAK2J,eAAe7N,EAAQuK,aAAqB,CACnD,IAEIrK,EAAM,QAFEuJ,iBAAiBzJ,GACTiL,aACU,MAAQpN,EAAQ,MAC9CmC,EAAQ6E,UAAU6C,IAAI,iBACtBnF,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxCkE,EAAQrC,MAAMsN,aAAe/K,EAC7BqC,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxCkE,EAAQ6E,UAAU8C,OAAO,uBAVjCmG,EAAoB3J,EAApB3K,OAAAC,cAAAgU,GAAAG,EAAAE,EAAApU,QAAAC,MAAA8T,GAAA,EAA8B5L,IAfT,MAAA9H,GAAA2T,GAAA,EAAAC,EAAA5T,EAAA,QAAA,KAAA0T,GAAAK,EAAA9T,QAAA8T,EAAA9T,SAAA,QAAA,GAAA0T,EAAA,MAAAC,GA+BrBxJ,EAAWlL,SAASkR,gBAAgB5Q,iBAAiB,gBA/BhC,IAAAwU,GAAA,EAAAC,GAAA,EAAAC,OAAAjV,EAAA,IAgCrB,IAAA,IAAAkV,EAAAC,EAAoBhK,EAApB3K,OAAAC,cAAAsU,GAAAG,EAAAC,EAAAzU,QAAAC,MAAAoU,GAAA,EAA8B,CAAAG,EAAArU,MACpB8D,MAAMyQ,MAAQvQ,EAAQ,MAjCX,MAAA9D,GAAAiU,GAAA,EAAAC,EAAAlU,EAAA,QAAA,KAAAgU,GAAAI,EAAAnU,QAAAmU,EAAAnU,SAAA,QAAA,GAAAgU,EAAA,MAAAC,GAoCrB,IAAInV,EAAYG,SAASkR,gBACzBrR,EAAU6E,MAAMsN,aAAepN,EAAQ,KACvC/E,EAAU+L,UAAU6C,IAAI,+DAW1B,GAHW1G,KACQE,QAEPgM,UAAW,CACrB,IAAI/I,OAAA,EAEArL,EAAYG,SAASkR,gBACzBrR,EAAU6E,MAAMsN,aAAe,GAC/BnS,EAAU+L,UAAU8C,OAAO,gBAE3BxD,EAAWlL,SAASkR,gBAAgB5Q,iBAAiB,aAPhC,IAAA8U,GAAA,EAAAC,GAAA,EAAAC,OAAAvV,EAAA,IAQrB,IARqB,IAQrBwV,EARqBC,EAAA,WAAA,IAQZzO,EARYwO,EAAA3U,MASnBmG,EAAQ6E,UAAU6C,IAAI,iBACtBnF,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxCkE,EAAQrC,MAAMsN,aAAe,GAC7B1I,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WACxCkE,EAAQ6E,UAAU8C,OAAO,sBAL/B+G,EAAoBvK,EAApB3K,OAAAC,cAAA4U,GAAAG,EAAAE,EAAAhV,QAAAC,MAAA0U,GAAA,EAA8BI,IART,MAAA1U,GAAAuU,GAAA,EAAAC,EAAAxU,EAAA,QAAA,KAAAsU,GAAAK,EAAA1U,QAAA0U,EAAA1U,SAAA,QAAA,GAAAsU,EAAA,MAAAC,GAkBrBpK,EAAWlL,SAASkR,gBAAgB5Q,iBAAiB,gBAlBhC,IAAAoV,GAAA,EAAAC,GAAA,EAAAC,OAAA7V,EAAA,IAmBrB,IAAA,IAAA8V,EAAAC,EAAoB5K,EAApB3K,OAAAC,cAAAkV,GAAAG,EAAAC,EAAArV,QAAAC,MAAAgV,GAAA,EAA8B,CAAAG,EAAAjV,MACpB8D,MAAMyQ,MAAQ,IApBH,MAAArU,GAAA6U,GAAA,EAAAC,EAAA9U,EAAA,QAAA,KAAA4U,GAAAI,EAAA/U,QAAA+U,EAAA/U,SAAA,QAAA,GAAA4U,EAAA,MAAAC,4CA8BVhR,GAOb,OANAA,EAAQ8K,WAAW9K,IACP0E,EAAA5J,OAAO6E,kBAAoB1B,OAAOkT,WAC5CnR,EAAQ,GAERA,GAAS,KAEJA,WAOX2E,EAAGK,YAIH/G,OAAO0G,GAAKA,IACJA,GAAAA,MAMF1I,cAQJ,SAAAA,EAAY2I,GAAwB,IAAhBC,EAAgB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAA,OAAA6J,EAAA5B,KAAAlH,GAAAmV,EAAAjO,MAAAlH,EAAAoV,WAAAxP,OAAAyP,eAAArV,IAAAxB,KAAA0I,KAC5ByB,EAAQC,EAAW,8BATNF,QAgBvB1I,EAAS+I,UACPsB,SAAY,8BACZ1H,QAAW,4DACX0G,MAAS,SACT4F,SAAY5E,UAAY,GACxBe,GAAM,QACNgC,QAAU,EACVjC,IAAO,EACPrB,IAAO,GAKT9H,OAAOhC,SAAWA,IACVA,SAAAA,MAMFS,cAQJ,SAAAA,EAAYkI,GAAwB,IAAhBC,EAAgB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAA,OAAA6J,EAAA5B,KAAAzG,GAAA0U,EAAAjO,MAAAzG,EAAA2U,WAAAxP,OAAAyP,eAAA5U,IAAAjC,KAAA0I,KAC5ByB,EAAQC,EAAW,4BATRF,QAgBrBjI,EAAOsI,UACLsB,SAAY,SACZ1H,QAAW,iBACX4J,WAAc,8BACdlD,MAAS,SACT4F,SAAY5E,UAAY,GACxBe,GAAM,QACNgC,QAAU,EACVjC,IAAO,EACPrB,IAAO,EACP8H,aAAgB,QAKlB5P,OAAOvB,OAASA,IACRA,OAAAA,MAMFO,cAQJ,SAAAA,EAAY2H,GAAwB,IAAhBC,EAAgB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAA,OAAA6J,EAAA5B,KAAAlG,GAAAmU,EAAAjO,MAAAlG,EAAAoU,WAAAxP,OAAAyP,eAAArU,IAAAxC,KAAA0I,KAC5ByB,EAAQC,EAAW,+BATLF,QAgBxB1H,EAAU+H,UACRsB,SAAY,8BACZ1H,QAAW,0BACX0G,MAAS,SACT4F,SAAY5E,UAAY,GACxBe,GAAM,QACNgC,QAAU,EACVjC,IAAO,EACPrB,IAAO,EACPY,SAAY,OACZ6F,SAAY,UACZH,UAAa,aACbmB,YAAe,8EACf6B,WAAa,GAKfpR,OAAOhB,UAAYA,IACXA,UAAAA,MAMFO,cAQJ,SAAAA,EAAYoH,GAAwB,IAAhBC,EAAgB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAA,OAAA6J,EAAA5B,KAAA3F,GAAA4T,EAAAjO,MAAA3F,EAAA6T,WAAAxP,OAAAyP,eAAA9T,IAAA/C,KAAA0I,KAC5ByB,EAAQC,EAAW,4BATRF,2CAoBjB,IACItB,EADOF,KACQE,QAEnB,GAAIA,EAAQgE,GAAI,CAEdpJ,OAAOsT,eALEpO,KAKoBoE,eAAeC,KALnCrE,MAOT,IAAIsE,KAAAjC,OAAAC,EAAapC,EAAQgE,GAAG9D,MAAM,OAJpBiO,GAAA,EAAAC,GAAA,EAAAC,OAAAvW,EAAA,IAKd,IAAA,IAAAwW,EAAAC,EAAkBnK,EAAlB9L,OAAAC,cAAA4V,GAAAG,EAAAC,EAAA/V,QAAAC,MAAA0V,GAAA,EAA0B,CAAA,IAAjBxO,EAAiB2O,EAAA3V,MACxBiC,OAAOwF,oBAAoBT,EAAO/E,OAAOsT,gBACzCtT,OAAOqF,iBAAiBN,EAAO/E,OAAOsT,iBAP1B,MAAArV,GAAAuV,GAAA,EAAAC,EAAAxV,EAAA,QAAA,KAAAsV,GAAAI,EAAAzV,QAAAyV,EAAAzV,SAAA,QAAA,GAAAsV,EAAA,MAAAC,GASdzT,OAAOqF,iBAAiB,aAAcrF,OAAOsT,gBAG/CtT,OAAOsM,cAAc,IAAIC,MAAM,sDAOlB7Q,GACbwJ,KAAK0O,YAAY1O,KAAKyB,8CAWtB,IAAIyB,EAAOlD,KACPE,EAAUgD,EAAKhD,QAEfyO,EAAU,EACV/W,KACAgX,GAAgB,EAChBC,EAAe/T,OAAOgU,YACtBC,EAAY9W,SAASkR,gBAAgB4F,UACrCC,EAAe9L,EAAK8L,aAEpBD,EAAYC,IACdJ,GAAgB,GAZN,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAAnX,EAAA,IAeZ,IAfY,IAeZoX,EAfYC,EAAA,WAAA,IAeHzW,EAfGwW,EAAAvW,MAgBV,GAAID,EAAG0W,eAAiB1W,EAAGiL,UAAU5H,SAAS,cAAe,CAE3D,IAAIsT,EAAY3W,EAAG0W,aAAaE,wBAAwB9F,IAAM9Q,EAAG6W,UAC7DC,EAAW/H,WAAWc,iBAAiB7P,GAAIyP,QAE3CsH,GAAU,EACVjG,EAAM6F,EAAYR,EAClBa,EAASlG,EAAMgG,EACfG,EAAOhB,EAAe3O,EAAQ4P,SAEnBf,EAAYF,GAAgBnF,EAAMmG,GAC/Bd,EAAYa,EAASC,GAGrCF,EAAUzM,EAAKsC,QAAQ5M,MAErBhB,EAAS+H,KAAK/G,GACd2I,EAAA5J,OAAOwD,qBAAqB7D,KAAKwD,OAAQlC,EAAG0O,QAAQyI,YACpDnX,EAAG0O,QAAQyI,WAAaxO,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WAChE,GAAIoF,EAAQ8P,QAAS,CACnB,IAAIC,EAAO,IAAIC,SAAS,UAAW,QAAShQ,EAAQ8P,SACpDpX,EAAG0O,QAAQI,UAAYuI,EAAKtB,EAAS/W,EAASL,QAAQwL,WACtD4L,IAEFzL,EAAKa,QAAQnL,OAKjB+W,EAAUzM,EAAKiD,SAASvN,GACxBA,EAAGiL,UAAU6C,IAAI,gBACbiJ,IACF/W,EAAGiL,UAAU6C,IAAI,eACjB9O,EAAS+H,KAAK/G,GACd2I,EAAA5J,OAAOwD,qBAAqB7D,KAAKwD,OAAQlC,EAAG0O,QAAQyI,YACpDnX,EAAG0O,QAAQyI,WAAaxO,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WAChE,GAAIoF,EAAQiQ,SAAU,CACpB,IAAIF,EAAO,IAAIC,SAAS,UAAW,QAAShQ,EAAQiQ,UACpDvX,EAAG0O,QAAQa,WAAa8H,EAAKtB,EAAS/W,EAASL,QAAQwL,WACvD4L,IAEFgB,EAAUzM,EAAK2B,SAASjM,OAK1B+W,IACEf,GACFhW,EAAGiL,UAAU8C,OAAO,aACpB/N,EAAGiL,UAAU6C,IAAI,aAEjB9N,EAAGiL,UAAU6C,IAAI,aACjB9N,EAAGiL,UAAU8C,OAAO,eArD5ByJ,EAAelN,EAAKC,SAApB3K,OAAAC,cAAAwW,GAAAG,EAAAgB,EAAA1X,QAAAC,MAAAsW,GAAA,EAA8BI,IAflB,MAAAtW,GAAAmW,GAAA,EAAAC,EAAApW,EAAA,QAAA,KAAAkW,GAAAmB,EAAApX,QAAAoX,EAAApX,SAAA,QAAA,GAAAkW,EAAA,MAAAC,GA0EZjM,EAAK8L,aAAeD,WAOxB1U,EAAOwH,UACLsB,SAAY,QACZhB,MAAS,KACT+B,GAAM,gBACND,IAAO,EACPrB,IAAOC,EAAAA,EACPiN,SAAY,GACZE,SAAW,EACXG,UAAY,GAKdrV,OAAOT,OAASA,IACRA,OAAAA,MAMFO,cAQJ,SAAAA,EAAY6G,GAAwB,IAAhBC,EAAgB3J,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,MAAA,OAAA6J,EAAA5B,KAAApF,GAAAqT,EAAAjO,MAAApF,EAAAsT,WAAAxP,OAAAyP,eAAAvT,IAAAtD,KAAA0I,KAC5ByB,EAAQC,EAAW,8BATNF,0CAiCnB,4PAbA6O,CAAAzV,EAAA4F,UAAA0N,WAAAxP,OAAAyP,eAAAvT,EAAA4F,WAAA,YAAAR,MAAA1I,KAAA0I,MAEAA,KAAK2C,KAAO,MAEZ3C,KAAKlI,UAAYyJ,EAAA5J,OAAO4H,QAAQS,KAAKyB,OAAQ,iBACxCzB,KAAKlI,UAAUP,SAClByI,KAAKlI,UAAYyJ,EAAA5J,OAAO+E,cAAc,mDACtCsD,KAAKyB,OAAO6O,OAAOtQ,KAAKlI,WACxBkI,KAAKlI,UAAUwR,OAAOtJ,KAAKyB,QAC3BzB,KAAKlI,UAAYyJ,EAAA5J,OAAO4H,QAAQS,KAAKyB,OAAQ,kBAG/CzB,KAAKvE,QAAUuE,KAAKlI,UAAU,GAAGS,iBAAiB,cAC7CyH,KAAKvE,QAAQlE,OAAQ,CACxByI,KAAKvE,QAAUuE,KAAKyB,OAAO8O,WAAU,GACrCvQ,KAAKvE,QAAQoI,UAAU6C,IAAI,YAFH,IAAA8J,GAAA,EAAAC,GAAA,EAAAC,OAAA1Y,EAAA,IAGxB,IAAA,IAAA2Y,EAAAC,EAAiB5Q,KAAKvE,QAAQlD,iBAAiB,QAA/CC,OAAAC,cAAA+X,GAAAG,EAAAC,EAAAlY,QAAAC,MAAA6X,GAAA,EAAwD,CAAA,IAA/CK,EAA+CF,EAAA9X,MACtDgY,EAAKlN,aAAa,KAAMkN,EAAK7O,aAAa,MAAQ,WAJ5B,MAAAjJ,GAAA0X,GAAA,EAAAC,EAAA3X,EAAA,QAAA,KAAAyX,GAAAI,EAAA5X,QAAA4X,EAAA5X,SAAA,QAAA,GAAAyX,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAhZ,EAAA,IAMxB,IAAA,IAAAiZ,EAAAC,EAAmBlR,KAAKvE,QAAQlD,iBAAiB,UAAjDC,OAAAC,cAAAqY,GAAAG,EAAAC,EAAAxY,QAAAC,MAAAmY,GAAA,EAA4D,CAAA,IAAnDK,EAAmDF,EAAApY,MAC1DsY,EAAOxN,aAAa,OAAQwN,EAAOnP,aAAa,QAAU,WAPpC,MAAAjJ,GAAAgY,GAAA,EAAAC,EAAAjY,EAAA,QAAA,KAAA+X,GAAAI,EAAAlY,QAAAkY,EAAAlY,SAAA,QAAA,GAAA+X,EAAA,MAAAC,GASxBhR,KAAKlI,UAAU,GAAGwR,OAAOtJ,KAAKvE,SAEhCuE,KAAKvE,QAAU8F,EAAA5J,OAAOoH,UAAUiB,KAAKvE,SAErCuE,KAAKyB,OAAOoC,UAAU6C,IAAI,YAEA,SAAtB1G,KAAKE,QAAQkR,KACfpR,KAAKyB,OAAOoC,UAAU6C,IAAI,oBAE1B1G,KAAKyB,OAAOoC,UAAU8C,OAAO,oBAEL,OAAtB3G,KAAKE,QAAQkR,KACfpR,KAAKyB,OAAOoC,UAAU6C,IAAI,kBAE1B1G,KAAKyB,OAAOoC,UAAU8C,OAAO,kBAG/B3G,KAAKqR,OAAS9P,EAAA5J,OAAO+F,eACrBsC,KAAKyB,OAAO9E,MAAM2U,OAAS,IAAM,IAAMtR,KAAKqR,6CAO5C,IACInR,EADOF,KACQE,QAEnB,GAAIA,EAAQgE,GAAI,CAEdpJ,OAAOyW,iBALEvR,KAKsBoE,eAAeC,KALrCrE,MAOT,IAAIsE,KAAAjC,OAAAC,EAAapC,EAAQgE,GAAG9D,MAAM,OAJpBoR,GAAA,EAAAC,GAAA,EAAAC,OAAA1Z,EAAA,IAKd,IAAA,IAAA2Z,EAAAC,EAAkBtN,EAAlB9L,OAAAC,cAAA+Y,GAAAG,EAAAC,EAAAlZ,QAAAC,MAAA6Y,GAAA,EAA0B,CAAA,IAAjB3R,EAAiB8R,EAAA9Y,MACxBiC,OAAOwF,oBAAoBT,EAAO/E,OAAOyW,kBACzCzW,OAAOqF,iBAAiBN,EAAO/E,OAAOyW,mBAP1B,MAAAxY,GAAA0Y,GAAA,EAAAC,EAAA3Y,EAAA,QAAA,KAAAyY,GAAAI,EAAA5Y,QAAA4Y,EAAA5Y,SAAA,QAAA,GAAAyY,EAAA,MAAAC,GASd5W,OAAOqF,iBAAiB,aAAcrF,OAAOyW,kBAG/CzW,OAAOsM,cAAc,IAAIC,MAAM,sDAOlB7Q,GACbwJ,KAAK0O,YAAY1O,KAAKyB,4CAWZzC,GACV,IACIkB,EADOF,KACQE,QAEf2R,GAAO,EACPT,GAAO,EACPxC,GAAgB,EAChBlI,EAAM,EACNoL,EAAU,EACVjD,EAAe/T,OAAOgU,YACtBiD,EAAe9Z,SAASkR,gBAAgB4I,aACxCnZ,EAVOoH,KAUGyB,OACV8N,EAAY3W,EAAG4W,wBAAwB9F,IACvCgG,EAAW/H,WAAWc,iBAAiB7P,GAAIyP,QAC3C2J,EAbOhS,KAaiBlI,UAAU,GAAG0X,wBAAwB9F,IAC7DqF,EAAY9W,SAASkR,gBAAgB4F,UACrCC,EAfOhP,KAeagP,aAEpBD,EAAYC,GACdpW,EAAGiL,UAAU8C,OAAO,eACpB/N,EAAGiL,UAAU6C,IAAI,aACjBkI,GAAgB,IAEhBhW,EAAGiL,UAAU6C,IAAI,eACjB9N,EAAGiL,UAAU8C,OAAO,cAGD,SAAjBzG,EAAQkR,OACLxC,IACHkD,EAAUpC,IAGO,OAAjBxP,EAAQkR,MACNxC,IACFkD,EAAUpC,GAId,IAAIhG,EArCO1J,KAqCIiS,eAAe/R,EAAQgS,MAAR,KArCnBlS,KAqCgDvE,QAASsT,EAAWiD,GAC3EpC,EAtCO5P,KAsCOiS,eAAe/R,EAAQgS,MAAR,OAAyBnD,EAAWlM,EAAAA,GAC5C,QAArB3C,EAAQsM,WACVoD,GAAUF,GAEa,WAArBxP,EAAQsM,WACV9C,GAAOmF,EAAea,EACtBE,EAAS5G,KAAKmJ,IAAIJ,EAAelD,EAAee,IAGlD,IAAIwC,EAAS,EACTC,EAAY,EAChB,GAAInS,EAAQoS,QAAS,CACnB,GAAIpS,EAAQoS,QAAR,IAAwB,CAC1B,IAAIC,EAnDGvS,KAmDcwS,kBAAkBtS,EAAQoS,QAAR,IAAwB1D,GAEhD,QADfwD,EAASG,EAAUE,MACIL,EAASJ,GAC9BtL,EAAM0L,EACDG,EAAUG,YACbb,GAAO,IAGTO,EAAS,KAGTlS,EAAQoS,QAAR,SAEgB,QADlBD,EA/DOrS,KA+DUiS,eAAe/R,EAAQoS,QAAR,UACND,EAAY3C,EAAW0C,GAC/C1L,EAAM2L,EAAY3C,EAClBmC,GAAO,GAEPQ,EAAY,MAKlBzZ,EAAG0O,QAAQqL,YAAcjM,EAAI3D,WAE7B,IAAI6P,EAAW7D,GAAarF,EAAMhD,EAAMoL,EACpCe,EAAc9D,EAAYa,EAASlJ,EAAMoL,EACzCc,GAAYC,GA7EL7S,KA+EJ+D,QAAQ/E,GAET8S,IACFV,GAAO,IAlFApR,KAsFJ6E,SAAS7F,GAGXpG,EAAGiL,UAAU5H,SAAS,YACzB4V,GAAO,GAOLO,IAAWxZ,EAAGiL,UAAU5H,SAAS,YACnCyK,GAAOsL,GAGLZ,GAEF1K,GAAOoL,EACFlZ,EAAGiL,UAAU5H,SAAS,gBACzBrD,EAAGiL,UAAU6C,IAAI,gBAGf9N,EAAGiL,UAAU5H,SAAS,gBACxBrD,EAAGiL,UAAU8C,OAAO,eAIpBkL,QAAyB7Z,IAAjBgX,EACLpW,EAAGiL,UAAU5H,SAAS,gBACzBrD,EAAGiL,UAAU6C,IAAI,eAGf9N,EAAGiL,UAAU5H,SAAS,gBACxBrD,EAAGiL,UAAU8C,OAAO,eAInBiM,EAKCha,EAAGiL,UAAU5H,SAAS,eACxBrD,EAAGiL,UAAU8C,OAAO,cALjB/N,EAAGiL,UAAU5H,SAAS,eACzBrD,EAAGiL,UAAU6C,IAAI,cAOhBmM,EAKCja,EAAGiL,UAAU5H,SAAS,kBACxBrD,EAAGiL,UAAU8C,OAAO,iBALjB/N,EAAGiL,UAAU5H,SAAS,kBACzBrD,EAAGiL,UAAU6C,IAAI,iBAQjBA,IA9IO1G,KA8IM8S,SACfla,EAAGiL,UAAU6C,IAAI,sBACG1O,IAhJXgI,KAgJA8S,SACPla,EAAG+D,MAAMuD,EAAQsM,UAAY+C,EAAY,MAE3ChO,EAAA5J,OAAOwD,qBAAqB7D,KAAKwD,OAnJxBkF,KAmJqC+P,YAnJrC/P,KAoJJ+P,WAAaxO,EAAA5J,OAAOkD,sBAAsBvD,KAAKwD,OAAQ,WAC1DlC,EAAGiL,UAAU8C,OAAO,iBACpB/N,EAAG+D,MAAMuD,EAAQsM,UAAY9F,EAAM,QAIvC,IAAI7J,EA1JOmD,KA0JM6M,eA1JN7M,KA0J0BlI,UAAU,GAAGyR,aAC9C3Q,EAAG+D,MAAME,QAAUA,IACrBjE,EAAG+D,MAAME,MAAQA,GA5JRmD,KA+JN8S,OAASpM,EA/JH1G,KAgKNgP,aAAeD,yCAUPgE,GAAmC,IAA3BhE,EAA2BhX,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAf,EAAG0a,EAAY1a,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAC1C,GAAKib,MAAMrL,WAAWoL,IAEf,CACL,IAAI5P,EAAWlE,MAAMgU,QAAQF,GAAUA,EAAS9a,SAASM,iBAAiBwa,GAC1E,GAAI5P,EAAS5L,OAAQ,CACnB,IAAI2b,GAAQ,EACZT,EAAM,EAFa,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAArb,EAAA,IAGnB,IAAA,IAAAsb,EAAAC,EAAepQ,EAAf3K,OAAAC,cAAA0a,GAAAG,EAAAC,EAAA7a,QAAAC,MAAAwa,GAAA,EAAyB,CAAA,IAAhB7Z,EAAgBga,EAAAza,MAEvB,GAAsB,SADV4P,iBAAiBnP,GACnBka,QAAoB,CAC5BN,GAAQ,EACR,IAAIO,EAAY9L,WAAWrO,EAAGgO,QAAQqL,aACtC,GAAIc,EACFhB,GAAOgB,OAGPhB,GADWnZ,EAAGkW,wBACF9F,IAGZwJ,EACFT,GAAO1D,EAEP0D,EAAM,MAlBS,MAAA1Z,GAAAqa,GAAA,EAAAC,EAAAta,EAAA,QAAA,KAAAoa,GAAAI,EAAAva,QAAAua,EAAAva,SAAA,QAAA,GAAAoa,EAAA,MAAAC,UAHrBZ,EAAMM,EA0BR,OAAON,4CAUSM,EAAQnE,GAA2B,IAAZ6D,EAAY1a,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAN,KACzC2a,GAAY,EAChB,GAAKM,MAAMrL,WAAWoL,IAEf,CACL,IAAI5P,EAAWlE,MAAMgU,QAAQF,GAAUA,EAAS9a,SAASM,iBAAiBwa,GAC1E,GAAI5P,EAAS5L,OAAQ,CAAA,IAAAmc,GAAA,EAAAC,GAAA,EAAAC,OAAA5b,EAAA,IACnB,IAAA,IAAA6b,EAAAC,EAAe3Q,EAAf3K,OAAAC,cAAAib,GAAAG,EAAAC,EAAApb,QAAAC,MAAA+a,GAAA,EAAyB,CAAA,IAAhB7Z,EAAgBga,EAAAhb,MACnBgB,EAAGgK,UAAU5H,SAAS,qBAAuBpC,EAAGgK,UAAU5H,SAAS,UACjE2S,IACF6D,GAAO5Y,EAAG4P,aACViJ,GAAY,GAEL7Y,EAAGgK,UAAU5H,SAAS,mBAAqBpC,EAAGgK,UAAU5H,SAAS,UACrE2S,IACH6D,GAAO5Y,EAAG4P,aACViJ,GAAY,GAGdD,GAAO5Y,EAAG4P,cAbK,MAAA1Q,GAAA4a,GAAA,EAAAC,EAAA7a,EAAA,QAAA,KAAA2a,GAAAI,EAAA9a,QAAA8a,EAAA9a,SAAA,QAAA,GAAA2a,EAAA,MAAAC,UAHrBnB,EAAMM,EAqBR,OAAQN,IAAKA,EAAKC,UAAWA,YAOjC9X,EAASiH,UACPM,MAAS,SACT+B,GAAM,gBACND,IAAO,EACPrB,IAAOC,EAAAA,EACP2J,SAAY,MACZ0F,OAAUtC,OAAU/M,EAAAA,GACpByP,SAAW,EACXlB,MAAQ,GAKVtW,OAAOF,SAAWA,IACVA,SAAAA","file":"xtend.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! xtend (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport {XtToggle, XtDrop, XtOverlay, XtFade, XtSticky} from './xtend';\n\n//////////////////////\n// constructor\n//////////////////////\n\nconst XtUtil = {};\n\n//////////////////////\n// properties\n//////////////////////\n\n// Xt currents based on namespace (so shared between Xt objects)\n\nXtUtil.currents = {};\n\n//////////////////////\n// methods\n//////////////////////\n\n/**\n * init all data-xt classes\n */\nXtUtil.initAll = function (container = document) {\n  // xt-toggle\n  for (let el of container.querySelectorAll('[data-xt-toggle]')) {\n    new XtToggle(el);\n  }\n  // xt-drop\n  for (let el of container.querySelectorAll('[data-xt-drop]')) {\n    new XtDrop(el);\n  }\n  // xt-overlay\n  for (let el of container.querySelectorAll('[data-xt-overlay]')) {\n    new XtOverlay(el);\n  }\n  // xt-fade\n  for (let el of container.querySelectorAll('[data-xt-fade]')) {\n    new XtFade(el);\n  }\n  // xt-scroll\n  for (let el of container.querySelectorAll('[data-xt-sticky]')) {\n    new XtSticky(el);\n  }\n};\n\n/**\n * request animation frame\n * @returns {Number} animationFrameID\n * USAGE: let animationFrame = XtUtil.requestAnimationFrame.call(window, function () {});\n */\nXtUtil.requestAnimationFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\n/**\n * cancel animation frame\n * USAGE: XtUtil.cancelAnimationFrame.call(window, animationFrameID);\n */\nXtUtil.cancelAnimationFrame = function () {\n  return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (callback) {\n    window.clearTimeout(id);\n  };\n}();\n\n/**\n * Check if event target is inside elements\n * @param {Event} e Event to check target\n * @param {NodeList|Array} targets Elements to check inside\n * @return {Boolean}\n */\nXtUtil.checkInside = function (e, targets) {\n  let result = false;\n  for (let t of targets) {\n    if (e.target === t || t.contains(e.target)) {\n      result = true;\n    }\n  }\n  return result;\n};\n\n/**\n * Check if event target is outside elements\n * @param {Event} e Event to check target\n * @param {NodeList|Array} targets Elements to check Outside\n * @return {Boolean}\n */\nXtUtil.checkOutside = function (e, targets) {\n  let result = true;\n  for (let t of targets) {\n    if (e.target === t || t.contains(e.target)) {\n      result = false;\n    }\n  }\n  return result;\n};\n\n/**\n * Get scrollbar width of document\n * @returns {Number} Scrollbar width\n */\nXtUtil.scrollbarWidth = function () {\n  // add outer\n  let outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n  document.body.appendChild(outer);\n  let widthNoScroll = outer.offsetWidth;\n  // force scrollbars\n  outer.style.overflow = 'scroll';\n  // add inner\n  let inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n  let widthWithScroll = inner.offsetWidth;\n  // remove\n  outer.parentNode.removeChild(outer);\n  return widthNoScroll - widthWithScroll;\n};\n\n/**\n * Get unique id\n * @returns {String} Unique id\n */\nXtUtil.getUniqueID = function () {\n  XtUtil.uid = XtUtil.uid !== undefined ? XtUtil.uid : 0;\n  return 'unique-id-' + (XtUtil.uid++);\n};\n\n/**\n * Get unique number\n * @returns {Number} Unique number\n */\nXtUtil.getUniqueNum = function () {\n  XtUtil.unumber = XtUtil.unumber !== undefined ? XtUtil.unumber : 0;\n  return XtUtil.unumber++;\n};\n\n/**\n * Merge objects\n * @param {Array} arr Array of objects to merge\n * @returns {Object} Merged object\n */\nXtUtil.merge = function (arr) {\n  let final = {};\n  for (let obj of arr) {\n    for (let [key, value] of Object.entries(obj)) {\n      final[key] = value;\n    }\n  }\n  return final;\n};\n\n/**\n * Make an array when element is only one\n * @param {Object|Array} element\n * @returns {Array}\n */\nXtUtil.arrSingle = function (element) {\n  if (element.length === undefined) {\n    let arr = new Array(1);\n    arr[0] = element;\n    return arr;\n  } else {\n    return element;\n  }\n};\n\n/**\n * Create DOM element from html string\n * @param {String} str Html string (only 1 root html tag)\n * @return {Node|HTMLElement} DOM element\n */\nXtUtil.createElement = function (str) {\n  let div = document.createElement('div');\n  div.innerHTML = str.trim();\n  return div.firstChild;\n};\n\n/**\n * Query element's parents\n * @param {Node|HTMLElement} element Child element\n * @param {String} query Query parents\n * @return {Array} Parents elements by query\n */\nXtUtil.parents = function (element, query) {\n  let parents = [];\n  while (element = element.parentElement.closest(query)) {\n    parents.push(element);\n  }\n  return parents;\n};\n\n/**\n * Get element index\n * @param {Node|HTMLElement} node Element to check the index of\n * @return {Number} Element's index\n */\n/*\nXtUtil.getElementIndex = function (node) {\n  let index = 0;\n  while ((node = node.previousElementSibling)) {\n    index++;\n  }\n  return index;\n};\n*/\n\n/**\n * Events with namespace\n * element.xtUtilOn('click.namespace', function (e) {});\n * element.xtUtilOff('click.namespace');\n * https://stackoverflow.com/questions/21817397/event-handler-namespace-in-vanilla-javascript\n */\nXtUtil.xtUtilOn = function (event, cb, opts) {\n  if (!this.namespaces) {\n    this.namespaces = {}; // save the namespaces on the DOM element itself\n  }\n  this.namespaces[event] = cb;\n  let options = opts || false;\n  this.addEventListener(event.split('.')[0], cb, options);\n  return this;\n};\nXtUtil.xtUtilOff = function (event) {\n  if (this.namespaces) {\n    this.removeEventListener(event.split('.')[0], this.namespaces[event]);\n    delete this.namespaces[event];\n  }\n  return this;\n};\n\nwindow.xtUtilOn = Element.prototype.xtUtilOn = XtUtil.xtUtilOn;\nwindow.xtUtilOff = Element.prototype.xtUtilOff = XtUtil.xtUtilOff;\n\n//////////////////////\n// api\n//////////////////////\n\nwindow.XtUtil = XtUtil;\nexport {XtUtil};\n\n//////////////////////\n// scope polyfill (https://stackoverflow.com/questions/6481612/queryselector-search-immediate-children)\n// USAGE: querySelectorAll(':scope > .selector');\n//////////////////////\n\n(function (doc, proto) {\n  try { // check if browser supports :scope natively\n    doc.querySelector(':scope body');\n  } catch (err) { // polyfill native methods if it doesn't\n    for (let method of ['querySelector', 'querySelectorAll']) {\n      let nativ = proto[method];\n      proto[method] = function (selectors) {\n        if (/(^|,)\\s*:scope/.test(selectors)) { // only if selectors contains :scope\n          let id = this.id; // remember current element id\n          this.id = 'ID_' + Date.now(); // assign new unique id\n          selectors = selectors.replace(/((^|,)\\s*):scope/g, '$1#' + this.id); // replace :scope with #ID\n          let result = doc[method](selectors);\n          this.id = id; // restore previous id\n          return result;\n        } else {\n          return nativ.call(this, selectors); // use native code for other selectors\n        }\n      }\n    }\n  }\n})(window.document, Element.prototype);\n","/* xtend (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport {XtUtil} from './xtend-utils';\n\n//////////////////////\n// Xt\n//////////////////////\n\nclass Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @param {String} attr Attribute name with json options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}, attr) {\n    this.object = object;\n    if (this.object) {\n      this.defaults = this.constructor.defaults;\n      // js options\n      this.options = XtUtil.merge([this.defaults, jsOptions]);\n      // markup options\n      let markupOptions = this.object.getAttribute(attr);\n      this.options = XtUtil.merge([this.options, markupOptions ? JSON.parse(markupOptions) : {}]);\n      // classes\n      if (this.options.class) {\n        this.options.classes = [...this.options.class.split(' ')];\n      }\n      // init\n      this.initSetup();\n      this.initScope();\n      this.initEvents();\n    }\n  }\n\n  //////////////////////\n  // init\n  //////////////////////\n\n  /**\n   * setup namespace, container and options\n   */\n  initSetup() {\n    let self = this;\n    let options = self.options;\n    // setup (based on xtend mode)\n    if (options.targets && options.targets.indexOf('#') !== -1) {\n      // xtend all mode\n      this.mode = 'all';\n      this.container = document;\n      options.max = Infinity;\n      this.namespace = options.targets.toString() + '-' + options.classes.toString();\n    } else {\n      // xtend unique mode\n      this.mode = 'unique';\n      this.container = this.object;\n      this.namespace = XtUtil.getUniqueID();\n    }\n    // final namespace\n    this.namespace = this.namespace.replace(/\\W+/g, '');\n    // currents array based on namespace (so shared between Xt objects)\n    if (!this.getCurrents()) {\n      this.setCurrents([]);\n    }\n  }\n\n  /**\n   * init elements, targets and currents\n   */\n  initScope() {\n    let self = this;\n    let options = self.options;\n    // elements\n    this.elements = [];\n    if (options.elements) {\n      this.elements = XtUtil.arrSingle(this.container.querySelectorAll(options.elements));\n    }\n    if (!this.elements.length) {\n      this.elements = XtUtil.arrSingle(this.object);\n      // @FIX on next frame set all elements querying the namespace\n      XtUtil.requestAnimationFrame.call(window, function () {\n        let namespaceQuery = '[data-xt-id=' + self.namespace + ']';\n        self.elements = XtUtil.arrSingle(document.querySelectorAll(namespaceQuery));\n      });\n    }\n    // targets\n    if (options.targets) {\n      let arr = Array.from(this.container.querySelectorAll(options.targets));\n      arr = arr.filter(x => !XtUtil.parents(x, options.targets).length); // filter out parent\n      this.targets = XtUtil.arrSingle(arr);\n    }\n    // appendTo\n    if (options.appendTo) {\n      let appendToTarget = document.querySelectorAll(options.appendTo);\n      if (appendToTarget.length) {\n        this.targets.forEach(function (el) {\n          appendToTarget[0].appendChild(el);\n        });\n      }\n    }\n    // @FIX set namespace for next frame\n    for (let el of this.elements) {\n      el.setAttribute('data-xt-id', self.namespace);\n    }\n    // currents\n    XtUtil.requestAnimationFrame.call(window, function () {\n      if (self.elements.length) {\n        // activate options.class\n        let classes = self.options.classes;\n        for (let el of self.elements) {\n          if (el.classList.contains(...classes)) {\n            self.eventOn(el);\n          }\n        }\n        // if currents < min\n        let todo = options.min - self.getCurrents().length;\n        if (todo) {\n          for (let i = 0; i < todo; i++) {\n            self.eventOn(self.elements[i]);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * init events\n   */\n  initEvents() {\n    let self = this;\n    let options = self.options;\n    // events\n    for (let el of this.elements) {\n      if (options.on) {\n        // handler\n        el.xtOnHandler = self.eventOnHandler.bind(self).bind(self, el); // multiple bind inverse order arguments\n        // event\n        let events = [...options.on.split(' ')];\n        for (let event of events) {\n          el.removeEventListener(event, el.xtOnHandler);\n          el.addEventListener(event, el.xtOnHandler);\n        }\n        el.addEventListener('on.trigger', el.xtOnHandler);\n      }\n      if (options.off) {\n        // handler\n        el.xtOffHandler = self.eventOffHandler.bind(self).bind(self, el); // multiple bind inverse order arguments\n        // event\n        let events = [...options.off.split(' ')];\n        for (let event of events) {\n          el.removeEventListener(event, el.xtOffHandler);\n          el.addEventListener(event, el.xtOffHandler);\n        }\n        el.addEventListener('off.trigger', el.xtOffHandler);\n      }\n    }\n  }\n\n  /**\n   * element on handler\n   * @param {Event} e\n   */\n  eventOnHandler(element, e) {\n    let eventLimit = this.container.querySelectorAll('.event-limit');\n    if (eventLimit.length) {\n      if (XtUtil.checkOutside(e, eventLimit)) {\n        this.eventOn(element);\n      }\n    } else {\n      this.eventOn(element);\n    }\n  }\n\n  /**\n   * element off handler\n   * @param {Event} e\n   */\n  eventOffHandler(element, e) {\n    let eventLimit = this.container.querySelectorAll('.event-limit');\n    if (eventLimit.length) {\n      if (XtUtil.checkOutside(e, eventLimit)) {\n        this.eventOff(element);\n      }\n    } else {\n      this.eventOff(element);\n    }\n  }\n\n  //////////////////////\n  // utils\n  //////////////////////\n\n  /**\n   * choose which elements to activate/deactivate (based on xtend mode and containers)\n   * @param {Node|HTMLElement} element Element that triggered interaction\n   * @returns {Object} object.all and object.single\n   */\n  getElements(element) {\n    if (!this.elements || !this.elements.length) {\n      return {all: [], single: null};\n    }\n    if (this.mode === 'all') {\n      // choose all elements\n      return {all: this.elements, single: this.elements[0]};\n    } else if (this.mode === 'unique') {\n      // choose element by group\n      let group = element.getAttribute('data-group');\n      if (group) {\n        // all group elements if group\n        let groupElements = Array.from(this.elements).filter(x => x.getAttribute('data-group') === group);\n        let final = XtUtil.arrSingle(groupElements);\n        return {all: final, single: final[0]};\n      } else {\n        // element if not group\n        let final = element;\n        return {all: XtUtil.arrSingle(final), single: final};\n      }\n    }\n  }\n\n  /**\n   * choose which targets to activate/deactivate (based on xtend mode and containers)\n   * @param {Node|HTMLElement} element Element that triggered interaction\n   * @returns {Array}\n   */\n  getTargets(element) {\n    if (!this.targets || !this.targets.length) {\n      return [];\n    }\n    if (this.mode === 'all') {\n      // choose all targets\n      return this.targets;\n    } else if (this.mode === 'unique') {\n      // choose only target by group\n      let group = element.getAttribute('data-group');\n      let groupElements = Array.from(this.elements).filter(x => x.getAttribute('data-group') === group);\n      let groupTargets = Array.from(this.targets).filter(x => x.getAttribute('data-group') === group);\n      let final;\n      if (group) {\n        // all group targets if group\n        final = groupTargets;\n        return XtUtil.arrSingle(final);\n      } else {\n        // not group targets by index if not group\n        let index = groupElements.findIndex(x => x === element);\n        final = groupTargets[index];\n        return XtUtil.arrSingle(final);\n      }\n    }\n  }\n\n  /**\n   * additional elements to activate/deactivate\n   * @returns {NodeList|Array}\n   */\n  getAdditional() {\n    return this.object.querySelectorAll(this.options.additional);\n  }\n\n  /**\n   * get currents based on namespace (so shared between Xt objects)\n   * @returns {Array}\n   */\n  getCurrents() {\n    return XtUtil.currents[this.namespace];\n  }\n\n  /**\n   * set currents based on namespace (so shared between Xt objects)\n   * @param {Array} arr\n   */\n  setCurrents(arr) {\n    XtUtil.currents[this.namespace] = arr;\n  }\n\n  /**\n   * add current based on namespace (so shared between Xt objects)\n   * @param {Node|HTMLElement} element To be added\n   */\n  addCurrent(element) {\n    let arr = XtUtil.currents[this.namespace];\n    arr.push(element);\n  }\n\n  /**\n   * remove currents based on namespace (so shared between Xt objects)\n   * @param {Node|HTMLElement} element To be removed\n   */\n  removeCurrent(element) {\n    XtUtil.currents[this.namespace] = XtUtil.currents[this.namespace].filter(x => x !== element);\n  }\n\n  //////////////////////\n  // events\n  //////////////////////\n\n  /**\n   * check element on\n   * @param {Node|HTMLElement} element To be activated\n   * @returns {Boolean} If eventOn changes activation\n   */\n  checkOn(element) {\n    if ((!element.classList.contains(...this.options.classes) || element.classList.contains('off-block')) && !element.classList.contains('on-block')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * check element off\n   * @param {Node|HTMLElement} element To be activated\n   * @returns {Boolean} If eventOff changes activation\n   */\n  checkOff(element) {\n    // if currents < min\n    let todo = this.options.min - this.getCurrents().length;\n    if (!todo) {\n      return false;\n    }\n    if ((element.classList.contains(...this.options.classes) || element.classList.contains('on-block')) && !element.classList.contains('off-block')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * element on\n   * @param {Node|HTMLElement} element To be activated\n   */\n  eventOn(element) {\n    let self = this;\n    let options = self.options;\n    // activate or deactivate\n    if (this.checkOn(element)) {\n      let fElements = this.getElements(element);\n      this.addCurrent(fElements.single);\n      let targets = this.getTargets(element);\n      let additional = this.getAdditional();\n      let activationDelay = {\n        elements: function () {\n          self.activationOn(fElements.all, fElements, 'elements');\n        },\n        targets: function () {\n          self.activationOn(targets, fElements, 'targets');\n        },\n        additional: function () {\n          self.activationOn(additional, fElements, 'additional');\n        },\n      };\n      // if currents > max\n      let currents = this.getCurrents();\n      if (currents.length > options.max) {\n        this.eventOff(currents[0], activationDelay);\n      } else {\n        activationDelay.elements();\n        activationDelay.targets();\n        activationDelay.additional();\n      }\n    } else if (options.toggle) {\n      this.eventOff(element);\n    }\n  }\n\n  /**\n   * element off\n   * @param {Node|HTMLElement} element To be deactivated\n   * @param {Number} activationDelay Delay in milliseconds\n   */\n  eventOff(element, activationDelay = null) {\n    // deactivate\n    if (this.checkOff(element)) {\n      let fElements = this.getElements(element);\n      this.removeCurrent(fElements.single);\n      this.activationOff(fElements.all, fElements, 'elements', activationDelay);\n      let targets = this.getTargets(element);\n      this.activationOff(targets, fElements, 'targets', activationDelay);\n      let additional = this.getAdditional();\n      this.activationOff(additional, fElements, 'additional', activationDelay);\n    }\n  }\n\n  /**\n   * element on activation\n   * @param {NodeList|Array} els Elements to be activated\n   * @param {Object} fElements Additional elements\n   * @param {String} type Type of elements\n   */\n  activationOn(els, fElements, type) {\n    let self = this;\n    let options = self.options;\n    // activate\n    let activate = function (self, el, fElements, type) {\n      el.classList.add(...options.classes);\n      el.classList.remove('out');\n      self.activationOnAnimate(el, type);\n      // specials\n      if (type === 'targets') {\n        self.specialClassHtmlOn();\n        self.specialBackdrop(el);\n        self.specialCenterOn(el);\n        self.specialMiddleOn(el);\n        self.specialCollapseOn(el);\n        self.specialCloseOn(el, fElements.single);\n        self.specialScrollbarOn();\n      }\n      // dispatch\n      el.dispatchEvent(new Event('on'));\n    };\n    // delay\n    for (let el of els) {\n      el.classList.remove('off-block');\n      clearTimeout(el.dataset.xtDelayTimeout);\n      clearTimeout(el.dataset.xtAnimTimeout);\n      let delay = el.dataset.xtOnDelay;\n      if (delay) {\n        el.classList.add('on-block');\n        el.dataset.xtDelayTimeout = setTimeout(function (self, el, fElements, type) {\n          el.classList.remove('on-block');\n          activate(self, el, fElements, type);\n        }, parseFloat(delay), self, el, fElements, type).toString();\n      } else {\n        activate(self, el, fElements, type);\n      }\n    }\n  }\n\n  /**\n   * element off activation\n   * @param {NodeList|Array} els Elements to be deactivated\n   * @param {Object} fElements Additional elements\n   * @param {String} type Type of elements\n   * @param {Number} activationDelay Delay in milliseconds\n   */\n  activationOff(els, fElements, type, activationDelay) {\n    let self = this;\n    let options = self.options;\n    // deactivate\n    let deactivate = function (self, el, fElements, type, activationDelay) {\n      el.classList.remove(...options.classes);\n      el.classList.add('out');\n      self.activationOffAnimate(el, type, activationDelay);\n      // activationDelay\n      if (activationDelay && activationDelay[type] && !activationDelay[type + 'done']) {\n        if (options.instant && options.instant[type]) {\n          activationDelay[type]();\n          activationDelay[type + 'done'] = true;\n        }\n      }\n      // specials\n      if (type === 'targets') {\n        self.specialClassHtmlOff();\n        self.specialCollapseOff(el);\n        self.specialCloseOff(el);\n      }\n      // dispatch\n      el.dispatchEvent(new Event('off'));\n    };\n    // delay\n    for (let el of els) {\n      el.classList.remove('on-block');\n      clearTimeout(el.dataset.xtDelayTimeout);\n      clearTimeout(el.dataset.xtAnimTimeout);\n      let delay = el.dataset.xtOffDelay;\n      if (delay) {\n        el.classList.add('off-block');\n        el.dataset.xtDelayTimeout = setTimeout(function (self, el, fElements, type, activationDelay) {\n          el.classList.remove('off-block');\n          deactivate(self, el, fElements, type, activationDelay);\n        }, parseFloat(delay), self, el, fElements, type, activationDelay).toString();\n      } else {\n        deactivate(self, el, fElements, type, activationDelay);\n      }\n    }\n  }\n\n  /**\n   * element on animation\n   * @param {Node|HTMLElement} el Element to be animated\n   * @param {String} type Type of element\n   */\n  activationOnAnimate(el, type) {\n    // onDone\n    let onDone = function (el, type) {\n      // collapse-width and collapse-height\n      if (el.classList.contains('collapse-height')) {\n        el.style.height = 'auto';\n      }\n      if (el.classList.contains('collapse-width')) {\n        el.style.width = 'auto';\n      }\n    };\n    // delay onDone\n    let timing = this.activationTiming(el);\n    clearTimeout(el.dataset.xtAnimTimeout);\n    if (!timing) {\n      onDone(el, type);\n    } else {\n      el.dataset.xtAnimTimeout = setTimeout(function (el, type) {\n        onDone(el, type);\n      }, timing, el, type).toString();\n    }\n  }\n\n  /**\n   * element off animation\n   * @param {Node|HTMLElement} el Element to be animated\n   * @param {String} type Type of element\n   * @param {Number} activationDelay Delay in milliseconds\n   */\n  activationOffAnimate(el, type, activationDelay) {\n    let self = this;\n    let options = self.options;\n    // onDone\n    let onDone = function (el, type) {\n      el.classList.remove('out');\n      // specials\n      if (type === 'targets') {\n        self.specialScrollbarOff();\n      }\n      // activationDelay\n      if (activationDelay && activationDelay[type] && !activationDelay[type + 'done']) {\n        if (!options.instant || !options.instant[type]) {\n          activationDelay[type]();\n          activationDelay[type + 'done'] = true;\n        }\n      }\n    };\n    // delay onDone\n    let timing = this.activationTiming(el);\n    clearTimeout(el.dataset.xtAnimTimeout);\n    if (!timing) {\n      onDone(el, type);\n    } else {\n      el.dataset.xtAnimTimeout = setTimeout(function (el, type) {\n        onDone(el, type);\n      }, timing, el, type).toString();\n    }\n  }\n\n  /**\n   * get transition or animation timing\n   * @param {Node|HTMLElement} el To be animated\n   * @returns {Number} Time in milliseconds\n   */\n  activationTiming(el) {\n    let self = this;\n    let options = self.options;\n    // timing\n    let timing = options.timing;\n    if (timing !== undefined) {\n      return timing;\n    } else {\n      let style = getComputedStyle(el);\n      let transition = parseFloat(style.transitionDuration) + parseFloat(style.transitionDelay);\n      let animation = parseFloat(style.animationDuration) + parseFloat(style.animationDelay);\n      if (transition || animation) {\n        timing = Math.max(transition, animation);\n      }\n      return timing * 1000;\n    }\n  }\n\n  //////////////////////\n  // activation specials\n  //////////////////////\n\n  /**\n   * add html class\n   */\n  specialClassHtmlOn() {\n    let self = this;\n    let options = self.options;\n    //\n    if (options.classHtml) {\n      let container = document.documentElement;\n      container.classList.add(...options.classHtml.split(' '));\n    }\n  }\n\n  /**\n   * remove html class\n   */\n  specialClassHtmlOff() {\n    let self = this;\n    let options = self.options;\n    //\n    if (options.classHtml) {\n      let container = document.documentElement;\n      container.classList.remove(...options.classHtml.split(' '));\n    }\n  }\n\n  /**\n   * backdrop append to element\n   * @param {Node|HTMLElement} el Element\n   */\n  specialBackdrop(el) {\n    let self = this;\n    let options = self.options;\n    //\n    if (options.backdrop) {\n      let elements;\n      if (options.backdrop === 'object') {\n        elements = XtUtil.arrSingle(this.object);\n      } else if (options.backdrop === 'targets') {\n        elements = XtUtil.arrSingle(el);\n      } else {\n        elements = el.querySelectorAll(options.backdrop);\n        if (!elements.length) {\n          elements = this.object.querySelectorAll(options.backdrop);\n        }\n      }\n      for (let element of elements) {\n        let backdrop = element.querySelectorAll('.xt-backdrop');\n        if (!backdrop.length) {\n          backdrop = XtUtil.createElement('<div class=\"xt-backdrop\"></div>');\n          element.append(backdrop);\n        }\n      }\n    }\n  }\n\n  /**\n   * center position on activation\n   * @param {Node|HTMLElement} el Element\n   */\n  specialCenterOn(el) {\n    if (el.classList.contains('drop-center')) {\n      let add = this.object.clientWidth;\n      let remove = el.clientWidth;\n      el.style.left = ((add - remove) / 2) + 'px';\n    }\n  }\n\n  /**\n   * middle position on activation\n   * @param {Node|HTMLElement} el Element\n   */\n  specialMiddleOn(el) {\n    if (el.classList.contains('drop-middle')) {\n      let add = this.object.clientHeight;\n      let remove = el.clientHeight;\n      el.style.top = ((add - remove) / 2) + 'px';\n    }\n  }\n\n  /**\n   * open collapse on activation\n   * @param {Node|HTMLElement} el Element\n   */\n  specialCollapseOn(el) {\n    if (el.classList.contains('collapse-height')) {\n      el.classList.add('no-transition');\n      el.style.height = 'auto';\n      el.style.paddingTop = '';\n      el.style.paddingBottom = '';\n      let h = el.clientHeight + 'px';\n      let pt = el.style.paddingTop;\n      let pb = el.style.paddingBottom;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.height = '0';\n        el.style.paddingTop = '0';\n        el.style.paddingBottom = '0';\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.classList.remove('no-transition');\n          el.style.height = h;\n          el.style.paddingTop = pt;\n          el.style.paddingBottom = pb;\n        });\n      });\n    }\n    if (el.classList.contains('collapse-width')) {\n      el.style.width = 'auto';\n      el.style.paddingLeft = '';\n      el.style.paddingRight = '';\n      let w = el.clientHeight + 'px';\n      let pl = el.style.paddingLeft;\n      let pr = el.style.paddingRight;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.width = '0';\n        el.style.paddingLeft = '0';\n        el.style.paddingRight = '0';\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.classList.remove('no-transition');\n          el.style.width = w;\n          el.style.paddingLeft = pl;\n          el.style.paddingRight = pr;\n        });\n      });\n    }\n  }\n\n  /**\n   * close collapse on deactivation\n   * @param {Node|HTMLElement} el Element\n   */\n  specialCollapseOff(el) {\n    if (el.classList.contains('collapse-height')) {\n      let h = el.clientHeight + 'px';\n      let pt = el.style.paddingTop;\n      let pb = el.style.paddingBottom;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.height = h;\n        el.style.paddingTop = pt;\n        el.style.paddingBottom = pb;\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.style.height = '0';\n          el.style.paddingTop = '0';\n          el.style.paddingBottom = '0';\n        });\n      });\n    }\n    if (el.classList.contains('collapse-width')) {\n      let w = el.clientWidth + 'px';\n      let pl = el.style.paddingLeft;\n      let pr = el.style.paddingRight;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.width = w;\n        el.style.paddingLeft = pl;\n        el.style.paddingRight = pr;\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.style.width = '0';\n          el.style.paddingLeft = '0';\n          el.style.paddingRight = '0';\n        });\n      });\n    }\n  }\n\n  /**\n   * add close events on element\n   * @param {Node|HTMLElement} el Element\n   * @param {Node|HTMLElement} single Element to toggle\n   */\n  specialCloseOn(el, single) {\n    let self = this;\n    let options = self.options;\n    // closeInside\n    if (options.closeInside) {\n      let closeElements = el.querySelectorAll(options.closeInside);\n      XtUtil.requestAnimationFrame.call(window, function () {\n        for (let closeElement of closeElements) {\n          // handler\n          closeElement.placespecialCloseOnHandler = self.specialCloseOnHandler.bind(self).bind(self, closeElement, single); // multiple bind inverse order arguments\n          // event\n          closeElement.removeEventListener('click', closeElement.placespecialCloseOnHandler);\n          closeElement.addEventListener('click', closeElement.placespecialCloseOnHandler, true);\n        }\n      });\n    }\n    // closeOutside\n    if (options.closeOutside) {\n      let closeElements = document.documentElement.querySelectorAll(options.closeOutside);\n      XtUtil.requestAnimationFrame.call(window, function () {\n        for (let closeElement of closeElements) {\n          // handler\n          closeElement.placespecialCloseOffHandler = self.specialCloseOffHandler.bind(self).bind(self, el, single); // multiple bind inverse order arguments\n          // event\n          closeElement.removeEventListener('click', closeElement.placespecialCloseOffHandler);\n          closeElement.addEventListener('click', closeElement.placespecialCloseOffHandler, true);\n        }\n      });\n    }\n  }\n\n  /**\n   * remove close events on element\n   * @param {Node|HTMLElement} el Element\n   */\n  specialCloseOff(el) {\n    let self = this;\n    let options = self.options;\n    // closeInside\n    if (options.closeInside) {\n      let closeElements = el.querySelectorAll(options.closeInside);\n      for (let closeElement of closeElements) {\n        closeElement.removeEventListener('click', closeElement.placespecialCloseOnHandler);\n      }\n    }\n    // closeOutside\n    if (options.closeOutside) {\n      let closeElements = document.documentElement.querySelectorAll(options.closeOutside);\n      for (let closeElement of closeElements) {\n        closeElement.removeEventListener('click', closeElement.placespecialCloseOffHandler);\n      }\n    }\n  }\n/*\n    let eventLimit = this.container.querySelectorAll('.event-limit');\n    if (eventLimit.length) {\n      if (XtUtil.checkOutside(e, eventLimit)) {\n        this.eventOn(element);\n      }\n    } else {\n      this.eventOn(element);\n    }*/\n  /**\n   * element on handler\n   * @param {Node|HTMLElement} checkEl\n   * @param {Node|HTMLElement} single\n   * @param {Event} e\n   */\n  specialCloseOnHandler(checkEl, single, e) {\n    console.log(single);\n    if (XtUtil.checkInside(e, XtUtil.arrSingle(checkEl))) {\n      this.eventOff(single);\n    }\n  }\n\n  /**\n   * element off handler\n   * @param {Node|HTMLElement} checkEl\n   * @param {Node|HTMLElement} single\n   * @param {Event} e\n   */\n  specialCloseOffHandler(checkEl, single, e) {\n    if (XtUtil.checkOutside(e, XtUtil.arrSingle(checkEl))) {\n      this.eventOff(single);\n    }\n  }\n\n  /**\n   * scrollbar activation\n   */\n  specialScrollbarOn() {\n    let self = this;\n    let options = self.options;\n    //\n    if (options.scrollbar) {\n      let elements;\n      let width = XtUtil.scrollbarWidth();\n      // check fixed\n      elements = document.documentElement.querySelectorAll('.xt-check-fixed > *');\n      for (let element of elements) {\n        let style = getComputedStyle(element);\n        if (style.position === 'fixed') {\n          element.classList.add('xt-fixed');\n        } else {\n          element.classList.remove('xt-fixed');\n        }\n      }\n      // fixed\n      elements = document.documentElement.querySelectorAll('.xt-fixed');\n      for (let element of elements) {\n        element.style.paddingRight = '';\n        if (self.normalizeWidth(element.clientWidth) === '') {\n          let style = getComputedStyle(element);\n          let padding = style.paddingRight;\n          let str = 'calc(' + padding + ' + ' + width + 'px)';\n          element.classList.add('no-transition');\n          XtUtil.requestAnimationFrame.call(window, function () {\n            element.style.paddingRight = str;\n            XtUtil.requestAnimationFrame.call(window, function () {\n              element.classList.remove('no-transition');\n            });\n          });\n        }\n      }\n      // backdrop\n      elements = document.documentElement.querySelectorAll('.xt-backdrop');\n      for (let element of elements) {\n        element.style.right = width + 'px';\n      }\n      // scroll\n      let container = document.documentElement;\n      container.style.paddingRight = width + 'px';\n      container.classList.add('xt-scrollbar');\n    }\n  }\n\n  /**\n   * scrollbar deactivation\n   */\n  specialScrollbarOff() {\n    let self = this;\n    let options = self.options;\n    //\n    if (options.scrollbar) {\n      let elements;\n      // scroll\n      let container = document.documentElement;\n      container.style.paddingRight = '';\n      container.classList.remove('xt-scrollbar');\n      // fixed\n      elements = document.documentElement.querySelectorAll('.xt-fixed');\n      for (let element of elements) {\n        element.classList.add('no-transition');\n        XtUtil.requestAnimationFrame.call(window, function () {\n          element.style.paddingRight = '';\n          XtUtil.requestAnimationFrame.call(window, function () {\n            element.classList.remove('no-transition');\n          });\n        });\n      }\n      // backdrop\n      elements = document.documentElement.querySelectorAll('.xt-backdrop');\n      for (let element of elements) {\n        element.style.right = '';\n      }\n    }\n  }\n\n  /**\n   * if full width return '' else return value in px\n   * @param {Number|String} width\n   * @returns {String} Value in px\n   */\n  normalizeWidth(width) {\n    width = parseFloat(width);\n    if (width + XtUtil.scrollbarWidth() >= window.innerWidth) {\n      width = '';\n    } else {\n      width += 'px';\n    }\n    return width;\n  }\n\n}\n\n// default\n\nXt.defaults = {};\n\n// export\n\nwindow.Xt = Xt;\nexport {Xt};\n\n//////////////////////\n// XtToggle\n//////////////////////\n\nclass XtToggle extends Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}) {\n    super(object, jsOptions, 'data-xt-toggle');\n  }\n\n}\n\n// default\n\nXtToggle.defaults = {\n  \"elements\": \":scope > a, :scope > button\",\n  \"targets\": \":scope > [class^=\\\"toggle-\\\"], :scope > [class*=\\\" toggle-\\\"]\",\n  \"class\": \"active\",\n  \"instant\": {\"elements\": true},\n  \"on\": \"click\",\n  \"toggle\": true,\n  \"min\": 0,\n  \"max\": 1\n};\n\n// export\n\nwindow.XtToggle = XtToggle;\nexport {XtToggle};\n\n//////////////////////\n// XtDrop\n//////////////////////\n\nclass XtDrop extends Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}) {\n    super(object, jsOptions, 'data-xt-drop');\n  }\n\n}\n\n// default\n\nXtDrop.defaults = {\n  \"elements\": \":scope\",\n  \"targets\": \":scope > .drop\",\n  \"additional\": \":scope > a, :scope > button\",\n  \"class\": \"active\",\n  \"instant\": {\"elements\": true},\n  \"on\": \"click\",\n  \"toggle\": true,\n  \"min\": 0,\n  \"max\": 1,\n  \"closeOutside\": \"body\"\n};\n\n// export\n\nwindow.XtDrop = XtDrop;\nexport {XtDrop};\n\n//////////////////////\n// XtOverlay\n//////////////////////\n\nclass XtOverlay extends Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}) {\n    super(object, jsOptions, 'data-xt-overlay');\n  }\n\n}\n\n// default\n\nXtOverlay.defaults = {\n  \"elements\": \":scope > a, :scope > button\",\n  \"targets\": \":scope > .overlay-outer\",\n  \"class\": \"active\",\n  \"instant\": {\"elements\": true},\n  \"on\": \"click\",\n  \"toggle\": true,\n  \"min\": 0,\n  \"max\": 1,\n  \"appendTo\": \"body\",\n  \"backdrop\": \"targets\",\n  \"classHtml\": \"xt-overlay\",\n  \"closeInside\": \".overlay-dismiss, :scope > .xt-backdrop, :scope .overlay-inner > .btn-close\",\n  \"scrollbar\": true\n};\n\n// export\n\nwindow.XtOverlay = XtOverlay;\nexport {XtOverlay};\n\n//////////////////////\n// XtFade\n//////////////////////\n\nclass XtFade extends Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}) {\n    super(object, jsOptions, 'data-xt-fade');\n  }\n\n  //////////////////////\n  // init\n  //////////////////////\n\n  /**\n   * init events\n   */\n  initEvents() {\n    let self = this;\n    let options = self.options;\n    // events\n    if (options.on) {\n      // handler\n      window.fadeOffHandler = self.eventOnHandler.bind(self);\n      // event\n      let events = [...options.on.split(' ')];\n      for (let event of events) {\n        window.removeEventListener(event, window.fadeOffHandler);\n        window.addEventListener(event, window.fadeOffHandler);\n      }\n      window.addEventListener('on.trigger', window.fadeOffHandler);\n    }\n    // trigger initial\n    window.dispatchEvent(new Event('on.trigger')); // @TODO call only one time\n  }\n\n  /**\n   * element on handler\n   * @param {Event} e\n   */\n  eventOnHandler(e) {\n    this.eventScroll(this.object);\n  }\n\n  //////////////////////\n  // events\n  //////////////////////\n\n  /**\n   * window scroll\n   */\n  eventScroll() {\n    let self = this;\n    let options = self.options;\n    // vars\n    let current = 0;\n    let currents = [];\n    let scrollInverse = false;\n    let windowHeight = window.innerHeight;\n    let scrollTop = document.documentElement.scrollTop;\n    let scrollTopOld = self.scrollTopOld;\n    // direction\n    if (scrollTop < scrollTopOld) {\n      scrollInverse = true;\n    }\n    // core\n    for (let el of self.elements) {\n      if (el.offsetParent && !el.classList.contains('fade-block')) {\n        // vars\n        let rectElTop = el.offsetParent.getBoundingClientRect().top + el.offsetTop; // we use parents to not include transforms animations\n        let heightEl = parseFloat(getComputedStyle(el).height);\n        // scroll\n        let changed = false;\n        let top = rectElTop + scrollTop;\n        let bottom = top + heightEl;\n        let dist = windowHeight * options.distance;\n        // activation\n        let checkTop = scrollTop + windowHeight >= top + dist;\n        let checkBottom = scrollTop < bottom - dist;\n        if (checkTop && checkBottom) {\n          // inside\n          changed = self.checkOn(el);\n          if (changed) {\n            currents.push(el);\n            XtUtil.cancelAnimationFrame.call(window, el.dataset.eventFrame);\n            el.dataset.eventFrame = XtUtil.requestAnimationFrame.call(window, function () {\n              if (options.delayOn) {\n                let func = new Function('current', 'total', options.delayOn);\n                el.dataset.xtOnDelay = func(current, currents.length).toString();\n                current++;\n              }\n              self.eventOn(el);\n            });\n          }\n        } else {\n          // outside\n          changed = self.checkOff(el);\n          el.classList.add('fade-visible');\n          if (changed) {\n            el.classList.add('fade-scroll');\n            currents.push(el);\n            XtUtil.cancelAnimationFrame.call(window, el.dataset.eventFrame);\n            el.dataset.eventFrame = XtUtil.requestAnimationFrame.call(window, function () {\n              if (options.delayOff) {\n                let func = new Function('current', 'total', options.delayOff);\n                el.dataset.xtOffDelay = func(current, currents.length).toString();\n                current++;\n              }\n              changed = self.eventOff(el);\n            });\n          }\n        }\n        // direction\n        if (changed) {\n          if (scrollInverse) {\n            el.classList.remove('fade-down');\n            el.classList.add('fade-up');\n          } else {\n            el.classList.add('fade-down');\n            el.classList.remove('fade-up');\n          }\n        }\n      }\n    }\n    // save for direction\n    self.scrollTopOld = scrollTop;\n  }\n\n}\n\n// default\n\nXtFade.defaults = {\n  \"elements\": \".fade\",\n  \"class\": \"in\",\n  \"on\": \"scroll resize\",\n  \"min\": 0,\n  \"max\": Infinity,\n  \"distance\": 0.2,\n  \"delayOn\": false,\n  \"delayOff\": false\n};\n\n// export\n\nwindow.XtFade = XtFade;\nexport {XtFade};\n\n//////////////////////\n// XtSticky\n//////////////////////\n\nclass XtSticky extends Xt {\n\n  /**\n   * constructor\n   * @param {Node|HTMLElement} object Base node\n   * @param {Object} jsOptions User options\n   * @constructor\n   */\n  constructor(object, jsOptions = {}) {\n    super(object, jsOptions, 'data-xt-sticky');\n  }\n\n  //////////////////////\n  // init\n  //////////////////////\n\n  /**\n   * init elements, targets and currents\n   */\n  initScope() {\n    super.initScope();\n    // mode\n    this.mode = 'all';\n    // container\n    this.container = XtUtil.parents(this.object, '.xt-container');\n    if (!this.container.length) {\n      this.container = XtUtil.createElement('<div class=\"xt-container xt-check-fixed\"></div>');\n      this.object.before(this.container);\n      this.container.append(this.object);\n      this.container = XtUtil.parents(this.object, '.xt-container');\n    }\n    // targets\n    this.targets = this.container[0].querySelectorAll('.xt-clone');\n    if (!this.targets.length) {\n      this.targets = this.object.cloneNode(true);\n      this.targets.classList.add('xt-clone');\n      for (let elId of this.targets.querySelectorAll('[id]')) {\n        elId.setAttribute('id', elId.getAttribute('id') + '-clone');\n      }\n      for (let elName of this.targets.querySelectorAll('[name]')) {\n        elName.setAttribute('name', elName.getAttribute('name') + '-clone');\n      }\n      this.container[0].append(this.targets);\n    }\n    this.targets = XtUtil.arrSingle(this.targets);\n    // xt-fixed\n    this.object.classList.add('xt-fixed');\n    // hide\n    if (this.options.hide === 'down') {\n      this.object.classList.add('sticky-hide-down');\n    } else {\n      this.object.classList.remove('sticky-hide-down');\n    }\n    if (this.options.hide === 'up') {\n      this.object.classList.add('sticky-hide-up');\n    } else {\n      this.object.classList.remove('sticky-hide-up');\n    }\n    // z-index\n    this.unique = XtUtil.getUniqueNum();\n    this.object.style.zIndex = '' + (100 - this.unique);\n  }\n\n  /**\n   * init events\n   */\n  initEvents() {\n    let self = this;\n    let options = self.options;\n    // events\n    if (options.on) {\n      // handler\n      window.stickyOffHandler = self.eventOnHandler.bind(self);\n      // event\n      let events = [...options.on.split(' ')];\n      for (let event of events) {\n        window.removeEventListener(event, window.stickyOffHandler);\n        window.addEventListener(event, window.stickyOffHandler);\n      }\n      window.addEventListener('on.trigger', window.stickyOffHandler);\n    }\n    // trigger initial // @TODO events revision\n    window.dispatchEvent(new Event('on.trigger')); // @TODO call only one time\n  }\n\n  /**\n   * element on handler\n   * @param {Event} e\n   */\n  eventOnHandler(e) {\n    this.eventScroll(this.object);\n  }\n\n  //////////////////////\n  // events\n  //////////////////////\n\n  /**\n   * window scroll\n   * @param {Node|HTMLElement} element To be activated or deactivated\n   */\n  eventScroll(element) {\n    let self = this;\n    let options = self.options;\n    // vars\n    let anim = true;\n    let hide = false;\n    let scrollInverse = false;\n    let add = 0;\n    let addHide = 0;\n    let windowHeight = window.innerHeight;\n    let scrollHeight = document.documentElement.scrollHeight;\n    let el = self.object;\n    let rectElTop = el.getBoundingClientRect().top;\n    let heightEl = parseFloat(getComputedStyle(el).height);\n    let rectContainerTop = self.container[0].getBoundingClientRect().top;\n    let scrollTop = document.documentElement.scrollTop;\n    let scrollTopOld = self.scrollTopOld;\n    // direction\n    if (scrollTop < scrollTopOld) {\n      el.classList.remove('sticky-down');\n      el.classList.add('sticky-up');\n      scrollInverse = true;\n    } else {\n      el.classList.add('sticky-down');\n      el.classList.remove('sticky-up');\n    }\n    // hide\n    if (options.hide === 'down') {\n      if (!scrollInverse) {\n        addHide = heightEl;\n      }\n    }\n    if (options.hide === 'up') {\n      if (scrollInverse) {\n        addHide = heightEl;\n      }\n    }\n    // scroll\n    let top = self.eventScrollPos(options.limit['top'] || self.targets, scrollTop, rectContainerTop);\n    let bottom = self.eventScrollPos(options.limit['bottom'], scrollTop, Infinity);\n    if (options.position === 'top') {\n      bottom -= heightEl;\n    }\n    if (options.position === 'bottom') {\n      top -= windowHeight - heightEl;\n      bottom = Math.abs(scrollHeight - windowHeight - bottom);\n    }\n    // contain and add\n    let addTop = 0;\n    let addBottom = 0;\n    if (options.contain) {\n      if (options.contain['top']) {\n        let addTopObj = self.eventScrollHeight(options.contain['top'], scrollInverse);\n        addTop = addTopObj.val;\n        if (addTop !== null && addTop > rectContainerTop) {\n          add = addTop;\n          if (!addTopObj.foundHide) {\n            anim = false;\n          }\n        } else {\n          addTop = null;\n        }\n      }\n      if (options.contain['bottom']) {\n        addBottom = self.eventScrollPos(options.contain['bottom']);\n        if (addBottom !== null && addBottom < heightEl + addTop) {\n          add = addBottom - heightEl;\n          anim = false;\n        } else {\n          addBottom = null;\n        }\n      }\n    }\n    // save real add for calculation\n    el.dataset.xtAddSticky = add.toString();\n    // activation\n    let checkTop = scrollTop >= top - add + addHide;\n    let checkBottom = scrollTop < bottom + add - addHide;\n    if (checkTop && checkBottom) {\n      // inside\n      self.eventOn(element);\n      // hide\n      if (addHide) {\n        hide = true;\n      }\n    } else {\n      // outside\n      self.eventOff(element);\n    }\n    // anim before hide\n    if (!el.classList.contains('active')) {\n      anim = false;\n      // @TODO fix absolute animation when not .active\n      // if (rectContainerTop > scrollTop) {\n      // add = scrollTop - rectElTop;\n      // }\n    }\n    // addTop after save\n    if (addTop && !el.classList.contains('active')) {\n      add -= rectContainerTop;\n    }\n    // hide after save\n    if (hide) {\n      //anim = true;\n      add = -addHide;\n      if (!el.classList.contains('sticky-hide')) {\n        el.classList.add('sticky-hide');\n      }\n    } else {\n      if (el.classList.contains('sticky-hide')) {\n        el.classList.remove('sticky-hide');\n      }\n    }\n    // anim\n    if (anim && scrollTopOld !== undefined) {\n      if (!el.classList.contains('sticky-anim')) {\n        el.classList.add('sticky-anim');\n      }\n    } else {\n      if (el.classList.contains('sticky-anim')) {\n        el.classList.remove('sticky-anim');\n      }\n    }\n    // top and bottom\n    if (!checkTop) {\n      if (!el.classList.contains('sticky-top')) {\n        el.classList.add('sticky-top');\n      }\n    } else {\n      if (el.classList.contains('sticky-top')) {\n        el.classList.remove('sticky-top');\n      }\n    }\n    if (!checkBottom) {\n      if (!el.classList.contains('sticky-bottom')) {\n        el.classList.add('sticky-bottom');\n      }\n    } else {\n      if (el.classList.contains('sticky-bottom')) {\n        el.classList.remove('sticky-bottom');\n      }\n    }\n    // set add\n    if (add !== self.addOld) {\n      el.classList.add('no-transition');\n      if (self.addOld !== undefined) {\n        el.style[options.position] = rectElTop + 'px';\n      }\n      XtUtil.cancelAnimationFrame.call(window, self.eventFrame);\n      self.eventFrame = XtUtil.requestAnimationFrame.call(window, function () {\n        el.classList.remove('no-transition');\n        el.style[options.position] = add + 'px';\n      });\n    }\n    // fix position fixed width 100% of parent\n    let width = self.normalizeWidth(self.container[0].clientWidth);\n    if (el.style.width !== width) {\n      el.style.width = width;\n    }\n    // save for direction\n    self.addOld = add;\n    self.scrollTopOld = scrollTop;\n  }\n\n  /**\n   * get position of option\n   * @param {String|Number|Element} option\n   * @param {Number} val Default value\n   * @param {Number} scrollTop Window's scrollTop\n   * @returns {Number} value Option's position (px)\n   */\n  eventScrollPos(option, scrollTop = 0, val = null) {\n    if (!isNaN(parseFloat(option))) {\n      val = option;\n    } else {\n      let elements = Array.isArray(option) ? option : document.querySelectorAll(option);\n      if (elements.length) {\n        let found = false;\n        val = 0;\n        for (let el of elements) {\n          let style = getComputedStyle(el);\n          if (style.display !== 'none') {\n            found = true;\n            let addSticky = parseFloat(el.dataset.xtAddSticky);\n            if (addSticky) { // if sticky-hide get real add\n              val += addSticky;\n            } else {\n              let rect = el.getBoundingClientRect();\n              val += rect.top;\n            }\n          }\n          if (found) {\n            val += scrollTop;\n          } else {\n            val = null;\n          }\n        }\n      }\n    }\n    return val;\n  }\n\n  /**\n   * get height of option\n   * @param {String|Number|Element} option\n   * @param {Boolean} scrollInverse\n   * @param {Number} val Default value\n   * @returns {Object} obj Option's height (px) and if found hide element\n   */\n  eventScrollHeight(option, scrollInverse, val = null) {\n    let foundHide = false;\n    if (!isNaN(parseFloat(option))) {\n      val = option;\n    } else {\n      let elements = Array.isArray(option) ? option : document.querySelectorAll(option);\n      if (elements.length) {\n        for (let el of elements) {\n          if (el.classList.contains('sticky-hide-down') && el.classList.contains('active')) {\n            if (scrollInverse) {\n              val += el.clientHeight;\n              foundHide = true;\n            }\n          } else if (el.classList.contains('sticky-hide-up') && el.classList.contains('active')) {\n            if (!scrollInverse) {\n              val += el.clientHeight;\n              foundHide = true;\n            }\n          } else {\n            val += el.clientHeight;\n          }\n        }\n      }\n    }\n    return {val: val, foundHide: foundHide};\n  }\n\n}\n\n// default\n\nXtSticky.defaults = {\n  \"class\": \"active\",\n  \"on\": \"scroll resize\",\n  \"min\": 0,\n  \"max\": Infinity,\n  \"position\": \"top\",\n  \"limit\": {\"bottom\": Infinity},\n  \"contain\": false,\n  \"hide\": false\n};\n\n// export\n\nwindow.XtSticky = XtSticky;\nexport {XtSticky};"]}