//////////////////////
// icon
//////////////////////

// font-face

@icons-family: 'xtend';
@icons-path: '../icons/fonts/xtend';

@font-face {
  font-family: @icons-family;
  src: url('@{icons-path}.ttf') format('truetype'),
  url('@{icons-path}.woff') format('woff'),
  url('@{icons-path}.svg#xtend') format('svg');
  font-weight: normal;
  font-style: normal;
}

// icons
// USAGE MARKUP: <span class="icon-close"></span>
// USAGE LESS : .icon(@content: @icon-close, @size: @icon-small, @sr-only: false, @position: after);

@icons: close, chevron-down, chevron-left, chevron-right, chevron-up, check, circle; // this will generate classes .icon-{name}

// xtend icons

@icon-chevron-down: '\e900';
@icon-chevron-left: '\e901';
@icon-chevron-right: '\e902';
@icon-chevron-up: '\e903';
@icon-close: '\e904';
@icon-check: '\e905';
@icon-circle: '\e906';

// generate icons

.icon-xt {
  .icon();
  font-family: @icons-family;
}

& when (@classes-icons) {

  .generate-icons();
  .generate-icons(@i:length(@icons)) when (@i > 0) {
    .generate-icons(@i - 1);
    @name: extract(@icons, @i);
    @val: ~"icon-@{name}";
    .icon-xt-@{name} {
      &::before {
        content: @@val;
      }
    }
  }

}

//////////////////////
// icon
//////////////////////

// size

.icon-tiny {
  font-size: @icon-tiny;
}

.icon-small {
  font-size: @icon-small;
}

.icon-medium {
  font-size: @icon-medium;
}

.icon-big {
  overflow: hidden;
  .margin(y, -.25em);
  font-size: @icon-big;
}

.icon-giant {
  overflow: hidden;
  .margin(y, -.5em);
  font-size: @icon-giant;
}

// space

.icon-left {
  .margin(right, 1em);
}

.icon-right {
  .margin(left, 1em);
}