//////////////////////
// group
//////////////////////

.form-group {
  position: relative;
}

// selectors

.form-groups(@rules) {
  .form-group {
    @rules();
  }
}

// addons

.form-group-flex {
  .display(flex);
}

.form-group-horizontal {
  .display(flex);
  .label-control {
    .margin(all, none);
  }
}

.form-group-inline {
  .display(flex);
  .flex-wrap();
  .input-control {
    width: auto;
  }
}

//////////////////////
// input
//////////////////////

.input-control {
  .display(block);
  width: 100%;
  // select arrow
  select& {
    .padding(right, @select-space-size * 2) !important;
    white-space: normal;
    background-position: calc(~'100% - '@select-space-size / 2) 50%,
    calc(~'100% - ('@select-space-size / 2~') + '@select-arrow-size) 50%,
    100% 0;
    background-size: @select-arrow-size @select-arrow-size,
    @select-arrow-size @select-arrow-size,
    @select-space-size 100%;
    background-repeat: no-repeat;
  }
}

//////////////////////
// input-group
//////////////////////

.input-group {
  position: relative;
  .display(flex);
  .flex-nowrap();
  width: 100%;
  // .input-control
  .input-control {
    // border
    &:first-child {
      border-top-right-radius: 0 !important;
      border-bottom-right-radius: 0 !important;
    }
    &:last-child {
      border-top-left-radius: 0 !important;
      border-bottom-left-radius: 0 !important;
    }
    &:not(:first-child):not(:last-child) {
      border-radius: 0 !important;
    }
  }
}

// .input-group-inner

.input-group-inner {
  .display(flex);
  .flex-row();
  .flex-wrap();
  // spacing
  margin-right: -@input-border-width;
  .input-control ~ & {
    margin-right: 0;
    margin-left: -@input-border-width;
  }
  // .btn
  .btn {
    width: 100%;
    .text-align(center);
    & + .btn {
      margin-top: -@btn-border-width;
    }
  }
  .input-control ~ & {
    .btn {
      .margin(right, none);
    }
  }
  // border inline
  &:first-child {
    .btn {
      &@{btn-design} {
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
      }
    }
  }
  &:last-child {
    .btn {
      &@{btn-design} {
        border-top-left-radius: 0 !important;
        border-bottom-left-radius: 0 !important;
      }
    }
  }
  &:not(:first-child):not(:last-child) {
    .btn {
      &@{btn-design} {
        border-radius: 0 !important;
      }
    }
  }
  // border stack
  &:first-child {
    .btn {
      &:not(:first-child) {
        &@{btn-design} {
          border-bottom-right-radius: 0 !important;
          border-top-right-radius: 0 !important;
          border-top-left-radius: 0 !important;
        }
      }
      &:not(:last-child) {
        &@{btn-design} {
          border-top-right-radius: 0 !important;
          border-bottom-right-radius: 0 !important;
          border-bottom-left-radius: 0 !important;
        }
      }
      &:not(:first-child):not(:last-child) {
        &@{btn-design} {
          border-top-left-radius: 0 !important;
          border-bottom-left-radius: 0 !important;
        }
      }
    }
  }
  &:last-child {
    .btn {
      &:not(:first-child) {
        &@{btn-design} {
          border-bottom-left-radius: 0 !important;
          border-top-left-radius: 0 !important;
          border-top-right-radius: 0 !important;
        }
      }
      &:not(:last-child) {
        &@{btn-design} {
          border-top-left-radius: 0 !important;
          border-bottom-left-radius: 0 !important;
          border-bottom-right-radius: 0 !important;
        }
      }
      &:not(:first-child):not(:last-child) {
        &@{btn-design} {
          border-top-right-radius: 0 !important;
          border-bottom-right-radius: 0 !important;
        }
      }
    }
  }
}

//////////////////////
// label
//////////////////////

.label-control {
  .display(block);
  position: relative;
  cursor: pointer;
  .user-select-none();
}

//////////////////////
// check and radio
//////////////////////

// label

input[type="checkbox"], input[type="radio"] {
  & ~ .label-control {
    .label-checkradio();
  }
}

// unstyled

input[type="checkbox"].unstyled, input[type="radio"].unstyled {
  display: block;
  float: left;
  & ~ .label-control {
    display: block;
    overflow: hidden;
  }
}

// check and radio design

input[type="checkbox"]:not(.unstyled),
input[type="radio"]:not(.unstyled) {
  position: absolute;
  z-index: -1;
  opacity: 0;
  & ~ .label-control {
    &::before,
    &::after {
      content: '';
      position: absolute !important;
      top: 0;
      left: 0;
    }
    &::before {
      pointer-events: none;
    }
    &::after {
      .display(flex) !important;
      .align-items-center();
      .justify-content-center();
    }
  }
}
