//////////////////////
// container
//////////////////////

.container {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: @container-fluid;
}

//////////////////////
// grid
//////////////////////

// col

.col(@breakpoint:none) when (@breakpoint = none) {
  .flex-auto();
}

.col(@breakpoint:none) when (default()) {
  @query-min: 'min-@{breakpoint}';
  @media @@query-min {
    .flex-auto();
  }
}

// col-custom

.col-custom(@breakpoint:none) when (@breakpoint = none) {
  flex: 1 0 auto;
}

.col-custom(@breakpoint:none) when (default()) {
  @query-min: 'min-@{breakpoint}';
  @media @@query-min {
    flex: 1 0 auto;
  }
}

// col-auto

.col-auto(@breakpoint:none) when (@breakpoint = none) {
  flex-basis: auto;
  max-width: none;
  width: auto;
}

.col-auto(@breakpoint:none) when (default()) {
  @query-min: 'min-@{breakpoint}';
  @media @@query-min {
    flex-basis: auto;
    max-width: none;
    width: auto;
  }
}

// grid

.col(@number, @breakpoint:none) when (@breakpoint = none) {
  @val: (percentage(@number / @columns));
  max-width: @val;
  width: @val;
}

.col(@number, @breakpoint:none) when (default()) {
  @query-min: 'min-@{breakpoint}';
  @val: (percentage(@number / @columns));
  @media @@query-min {
    max-width: @val;
    width: @val;
  }
}

//////////////////////
// flex
//////////////////////

.flex {
  .display(flex);
}
.flex-inline {
  .display(inline-flex);
  width: 100%;
}

//////////////////////
// list
//////////////////////

.list-base() {
  .display(flex);
  .reset-list();
  //.flex-auto(); // @FIX flex inside flex take 100% but dont bugs negative margins
  // list
  > li {
    .display(flex);
    .align-items-start();
    > * {
      .flex-auto();
    }
  }
  .list-btn-all({ .block(); .text-align(left); });
  .list-btn-default({ .btn(); });
}

// selectors

.list-btn-all(@rules) {
  > li {
    > a, > button {
      @rules();
    }
  }
}

.list-btn-default(@rules) {
  > li {
    > a, > button {
      &:not(.btn) {
        @rules();
      }
    }
  }
}

// .list

.list {
  .list-base();
  .flex-row();
  .flex-wrap();
}

.list-block {
  .flex-column();
  .flex-nowrap();
}

//////////////////////
// box
//////////////////////

.box {
  .display(flex);
  .flex-column();
  .flex-auto();
  position: relative;
  z-index: @index-base; // fix ::before negative z-index
}
