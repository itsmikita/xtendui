{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/xtend-utils.js","src/scripts/xtend.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_xtend","XtUtil","initAll","toggles","document","querySelectorAll","forEach","toggle","_xtend2","default","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","id","getUniqueID","prefix","suffix","uid","undefined","arrSingle","single","value","arr","Array","extend","defaults","options","extended","prop","collection","scope","Object","prototype","toString","hasOwnProperty","len","getElementIndex","node","index","previousElementSibling","getClosest","elem","selector","firstChar","charAt","parentNode","classList","contains","substr","hasAttribute","createElement","str","div","innerHTML","trim","firstChild","parents","element","query","parentElement","closest","push","_xtendUtils","classes","someCustomOption","Xt","this","_xtendUtils2","JSON","parse","getAttribute","class","initSetup","initEvents","init","self","namespace","targets","indexOf","group","split","join","elements","setAttribute","on","off","addEventListener","eventOn","eventOff","getElements","_targets$index$classL2","_targets$index$classL","_element$classList2","remove","apply","_toConsumableArray","_element$classList","add","_targets$index$classL3","_element$classList3"],"mappings":"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","file":"xtend.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport Xt from \"./xtend\";\n\n//////////////////////\n// Constructor\n//////////////////////\n\nvar XtUtil = {};\n\n//////////////////////\n// Methods\n//////////////////////\n\n/**\n * init all data-xt classes\n */\nXtUtil.initAll = function () {\n  var toggles = document.querySelectorAll('[data-xt-toggle]');\n  XtUtil.forEach(toggles, function (toggle, i) {\n    var xt = new Xt(toggle);\n    //console.log(xt.getElements('test'));\n  });\n};\n\n/**\n * requestAnimationFrame\n */\nXtUtil.requestAnimationFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\n/**\n * cancelAnimationFrame\n */\nXtUtil.cancelAnimationFrame = function () {\n  return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (callback) {\n    window.clearTimeout(id);\n  };\n}();\n\n/**\n * Get unique id\n * @param {String} prefix Text to prepend\n * @param {String} suffix Text to append\n * @returns {String} Unique id\n */\nXtUtil.getUniqueID = function (prefix, suffix) {\n  XtUtil.uid = XtUtil.uid !== undefined ? XtUtil.uid : 0;\n  return prefix + '-' + (XtUtil.uid++) + '-' + suffix;\n};\n\n/**\n * Make an array when element is only one\n * @param {Object|Array} element\n * @returns {Array}\n */\nXtUtil.arrSingle = function (single) {\n  if (!single.length && single.value !== undefined) {\n    var arr = new Array(1);\n    arr[0] = single;\n    return arr;\n  } else {\n    return single;\n  }\n};\n\n/**\n * Merge defaults with user options\n * @param {Object} defaults Default settings\n * @param {Object} options User options\n * @returns {Object} Merged values of defaults and options\n */\nXtUtil.extend = function (defaults, options) {\n  var extended = {};\n  XtUtil.forEach(defaults, function (value, prop) {\n    extended[prop] = defaults[prop];\n  });\n  XtUtil.forEach(options, function (value, prop) {\n    extended[prop] = options[prop];\n  });\n  return extended;\n};\n\n/**\n * A simple forEach() implementation for Arrays, Objects and NodeLists\n * @param {Array|Object|NodeList} collection Collection of items to iterate\n * @param {Function} callback Callback function for each iteration\n * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)\n */\nXtUtil.forEach = function (collection, callback, scope) {\n  if (Object.prototype.toString.call(collection) === '[object Object]') {\n    for (var prop in collection) {\n      if (Object.prototype.hasOwnProperty.call(collection, prop)) {\n        callback.call(scope, collection[prop], prop, collection);\n      }\n    }\n  } else {\n    for (var i = 0, len = collection.length; i < len; i++) {\n      callback.call(scope, collection[i], i, collection);\n    }\n  }\n};\n\n/**\n * Get element index\n * @param {Element} node Element to check the index of\n * @return {Number} Element's index\n */\nXtUtil.getElementIndex = function (node) {\n  var index = 0;\n  while ((node = node.previousElementSibling)) {\n    index++;\n  }\n  return index;\n};\n\n/**\n * Get the closest matching element up the DOM tree\n * @param {Element} elem Starting element\n * @param {String} selector Selector to match against (class, ID, or data attribute)\n * @return {Boolean|Element} Returns false if not match found\n */\nXtUtil.getClosest = function (elem, selector) {\n  var firstChar = selector.charAt(0);\n  for (; elem && elem !== document; elem = elem.parentNode) {\n    if (firstChar === '.') {\n      if (elem.classList.contains(selector.substr(1))) {\n        return elem;\n      }\n    } else if (firstChar === '#') {\n      if (elem.id === selector.substr(1)) {\n        return elem;\n      }\n    } else if (firstChar === '[') {\n      if (elem.hasAttribute(selector.substr(1, selector.length - 2))) {\n        return elem;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * Create DOM element from html string\n * @param {String} str Html string (only 1 root html tag)\n * @return {Element} DOM element\n */\nXtUtil.createElement = function (str) {\n  var div = document.createElement('div');\n  div.innerHTML = str.trim();\n  return div.firstChild;\n};\n\n/**\n * Query element's parents\n * @param {Element} element Child element\n * @return {Element} Parents elements by query\n */\nXtUtil.parents = function (element, query) {\n  var parents = [];\n  while (element = element.parentElement.closest(query)) {\n    parents.push(element);\n  }\n  return parents;\n};\n\n//////////////////////\n// Public APIs\n//////////////////////\n\nexport default XtUtil;","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport XtUtil from './xtend-utils';\n\n//////////////////////\n// defaults\n//////////////////////\n\nvar defaults = {\n  classes: ['active'],\n  someCustomOption: 'foo'\n};\n\n//////////////////////\n// Constructor\n//////////////////////\n\n/**\n * Plugin Object\n * @param {Object} options User options\n * @constructor\n */\nfunction Xt(element, options) {\n  var self = this;\n  this.element = element;\n  this.options = XtUtil.extend(defaults, options || {}); // js options\n  this.options = XtUtil.extend(this.options, JSON.parse(this.element.getAttribute('data-xt-toggle')) || {}); // markup options\n  // classes\n  if (this.options.class) {\n    this.options.classes.push(this.options.class);\n  }\n  // init\n  this.initSetup();\n  this.initEvents();\n}\n\n//////////////////////\n// Methods\n//////////////////////\n\nXt.prototype = {\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * init\n   */\n  init: function () {\n  },\n\n  /**\n   * setup\n   */\n  initSetup: function () {\n    var self = this;\n    var options = this.options;\n    // group and namespace\n    this.namespace = options.targets.toString() + '-' + options.classes.toString();\n    if (options.targets && options.targets.indexOf('#') !== -1) {\n      this.group = document;\n      /*} else if ($group.attr('id')) {\n        settings.uid = $group.attr('id');\n      */\n    } else {\n      this.group = this.element;\n      this.namespace = XtUtil.getUniqueID('xt', this.namespace);\n    }\n    this.namespace = this.namespace.split('#').join('');\n    // elements\n    if (options.elements) {\n      this.elements = XtUtil.arrSingle(this.group.querySelectorAll(options.elements)); //.filter(':parents(.xt-ignore)');\n    } else {\n      this.elements = XtUtil.arrSingle(this.element);\n      // on next frame set all elements querying the namespace\n      XtUtil.requestAnimationFrame.call(window, function () {\n        self.elements = XtUtil.arrSingle(document.querySelectorAll('[data-xt-namespace=' + self.namespace + ']'));\n      });\n    }\n    // targets\n    if (options.targets) {\n      this.targets = XtUtil.arrSingle(document.querySelectorAll(options.targets));\n    }\n    // set namespace for next frame\n    if (this.elements.length) {\n      XtUtil.forEach(this.elements, function (element, i) {\n        element.setAttribute('data-xt-namespace', self.namespace);\n      });\n    }\n  },\n\n  /**\n   * events\n   */\n  initEvents: function () {\n    var self = this;\n    var options = this.options;\n    var on = options.on || 'click';\n    var off = options.off || null;\n    XtUtil.forEach(this.elements, function (element, i) {\n      if (on) {\n        element.addEventListener(on, function (e) {\n          self.eventOn(this);\n        });\n      }\n      if (off) {\n        element.addEventListener(off, function (e) {\n          self.eventOff(this);\n        });\n      }\n    });\n  },\n\n  //////////////////////\n  // Utils Methods\n  //////////////////////\n\n  /**\n   * getElements\n   */\n  getElements: function (elements, element, group) {\n    return elements;\n    /* @TODO groups\n    var object = this;\n    var settings = this.settings;\n    var group = this.group;\n    var $group = $(this.group);\n    // $elements and $el\n    if ($elements.is($group)) {\n      return $g;\n    } else if ($el.is('[data-group]')) {\n      // with [data-group]\n      var g = $el.attr('data-group');\n      return $g.filter('[data-group=\"' + g + '\"]');\n    } else {\n      if (settings.$targets.has($g)) {\n        var index = object.getIndex($elements.not('[data-group]'), $el);\n        return $g.not('[data-group]').eq(index);\n      } else {\n        return $el;\n      }\n    }\n    */\n  },\n\n  //////////////////////\n  // Event Methods\n  //////////////////////\n\n  /**\n   * on\n   */\n  eventOn: function (element) {\n    var options = this.options;\n    var index = XtUtil.getElementIndex(element);\n    var elements = this.getElements(this.elements, element, this.group);\n    if (!element.classList.contains('active')) {\n      XtUtil.forEach(elements, function (element, i) {\n        element.classList.add(...options.classes);\n      });\n      this.targets[index].classList.add(...options.classes);\n    } else {\n      XtUtil.forEach(elements, function (element, i) {\n        element.classList.remove(...options.classes);\n      });\n      this.targets[index].classList.remove(...options.classes);\n    }\n  },\n\n  /**\n   * off\n   */\n  eventOff: function (element) {\n    var options = this.options;\n    var index = XtUtil.getElementIndex(element);\n    var elements = this.getElements(this.elements, element, this.group);\n    if (element.classList.contains('active')) {\n      XtUtil.forEach(elements, function (element, i) {\n        element.classList.remove(...options.classes);\n      });\n      this.targets[index].classList.remove(...options.classes);\n    }\n  },\n\n};\n\n//////////////////////\n// Public APIs\n//////////////////////\n\nexport default Xt;\n"]}