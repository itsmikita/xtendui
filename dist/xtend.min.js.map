{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/xtend-utils.js","src/scripts/xtend.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_xtend","XtUtil","currents","initAll","document","querySelectorAll","forEach","el","_xtend2","default","elements","targets","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","id","getUniqueID","uid","undefined","merge","arr","final","obj","Object","entries","_ref","_ref2","_slicedToArray","key","value","arrSingle","single","Array","createElement","str","div","innerHTML","trim","firstChild","parents","element","query","parentElement","closest","push","doc","proto","querySelector","err","method","nativ","selectors","test","this","Date","now","replace","result","Element","prototype","_xtendUtils","defaults","classes","on","min","max","Xt","object","jsOptions","options","_xtendUtils2","markupOptions","getAttribute","JSON","parse","class","concat","_toConsumableArray","split","initSetup","initScope","initEvents","indexOf","container","Infinity","namespace","toString","getCurrents","setCurrents","self","from","filter","x","setAttribute","_el$classList","classList","contains","apply","eventOn","todo","addEventListener","off","eventOff","getElements","all","group","groupElements","getTargets","groupTargets","findIndex","addCurrent","removeCurrent","_element$classList","fElements","_el$classList2","add","_el$classList3","_element$classList2","_el$classList4","remove","_el$classList5"],"mappings":"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","file":"xtend.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport Xt from \"./xtend\";\n\n//////////////////////\n// Constructor\n//////////////////////\n\nvar XtUtil = {};\n\n//////////////////////\n// Vars\n//////////////////////\n\n// Xt currents based on namespace (so shared between Xt objects)\n\nXtUtil.currents = {};\n\n//////////////////////\n// Methods\n//////////////////////\n\n/**\n * init all data-xt classes\n */\nXtUtil.initAll = function () {\n  // xt\n  /*\n  document.querySelectorAll('[data-xt]').forEach(function (el, i) {\n    new Xt(el, {});\n  });\n  */\n  // xt-toggle\n  document.querySelectorAll('[data-xt-toggle]').forEach(function (el, i) {\n    new Xt(el, {\n      elements: ':scope > .btn',\n      targets: '[class^=\"toggle-\"], [class*=\" toggle-\"]'\n    });\n  });\n};\n\n/**\n * request animation frame\n * @param {Function} Function for animation frame\n * @returns {Number} AnimationFrame id\n * USAGE: var animationFrame = XtUtil.requestAnimationFrame.call(window, function () {});\n */\nXtUtil.requestAnimationFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\n/**\n * cancel animation frame\n * @param {Number} id AnimationFrame id\n * USAGE: XtUtil.cancelAnimationFrame.call(window, animationFrame);\n */\nXtUtil.cancelAnimationFrame = function () {\n  return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (callback) {\n    window.clearTimeout(id);\n  };\n}();\n\n/**\n * Get unique id\n * @returns {String} Unique id\n */\nXtUtil.getUniqueID = function () {\n  XtUtil.uid = XtUtil.uid !== undefined ? XtUtil.uid : 0;\n  return 'unique-id-' + (XtUtil.uid++);\n};\n\n/**\n * Merge objects\n * @param {Array} arr Array of objects to merge\n * @returns {Object} Merged object\n */\nXtUtil.merge = function (arr) {\n  var final = {};\n  arr.forEach(function (obj, i) {\n    Object.entries(obj).forEach(([key, value]) => final[key] = value);\n  });\n  return final;\n};\n\n/**\n * Make an array when element is only one\n * @param {Object|Array} element\n * @returns {Array}\n */\nXtUtil.arrSingle = function (single) {\n  if (single.length === undefined) {\n    var arr = new Array(1);\n    arr[0] = single;\n    return arr;\n  } else {\n    return single;\n  }\n};\n\n/**\n * Create DOM element from html string\n * @param {String} str Html string (only 1 root html tag)\n * @return {Element} DOM element\n */\nXtUtil.createElement = function (str) {\n  var div = document.createElement('div');\n  div.innerHTML = str.trim();\n  return div.firstChild;\n};\n\n/**\n * Query element's parents\n * @param {Element} element Child element\n * @param {String} query Query parents\n * @return {Element} Parents elements by query\n */\nXtUtil.parents = function (element, query) {\n  var parents = [];\n  while (element = element.parentElement.closest(query)) {\n    parents.push(element);\n  }\n  return parents;\n};\n\n/**\n * Get element index\n * @param {Element} node Element to check the index of\n * @return {Number} Element's index\n */\n/*\nXtUtil.getElementIndex = function (node) {\n  var index = 0;\n  while ((node = node.previousElementSibling)) {\n    index++;\n  }\n  return index;\n};\n*/\n\n/**\n * Get the closest matching element up the DOM tree\n * @param {Element} element Starting element\n * @param {String} selector Selector to match against (class, ID, or data attribute)\n * @return {Boolean|Element} Returns false if not match found\n */\n/*\nXtUtil.getClosest = function (element, selector) {\n  var firstChar = selector.charAt(0);\n  for (; element && element !== document; element = element.parentNode) {\n    if (firstChar === '.') {\n      if (element.classList.contains(selector.substr(1))) {\n        return element;\n      }\n    } else if (firstChar === '#') {\n      if (element.id === selector.substr(1)) {\n        return element;\n      }\n    } else if (firstChar === '[') {\n      if (element.hasAttribute(selector.substr(1, selector.length - 2))) {\n        return element;\n      }\n    }\n  }\n  return false;\n};\n*/\n\n//////////////////////\n// Public APIs\n//////////////////////\n\nexport default XtUtil;\n\n//////////////////////\n// Scope polyfill (https://stackoverflow.com/questions/6481612/queryselector-search-immediate-children)\n// USAGE : querySelectorAll(':scope > .selector');\n//////////////////////\n\n(function (doc, proto) {\n  try { // check if browser supports :scope natively\n    doc.querySelector(':scope body');\n  } catch (err) { // polyfill native methods if it doesn't\n    ['querySelector', 'querySelectorAll'].forEach(function (method) {\n      var nativ = proto[method];\n      proto[method] = function (selectors) {\n        if (/(^|,)\\s*:scope/.test(selectors)) { // only if selectors contains :scope\n          var id = this.id; // remember current element id\n          this.id = 'ID_' + Date.now(); // assign new unique id\n          selectors = selectors.replace(/((^|,)\\s*):scope/g, '$1#' + this.id); // replace :scope with #ID\n          var result = doc[method](selectors);\n          this.id = id; // restore previous id\n          return result;\n        } else {\n          return nativ.call(this, selectors); // use native code for other selectors\n        }\n      }\n    });\n  }\n})(window.document, Element.prototype);\n","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport XtUtil from './xtend-utils';\n\n//////////////////////\n// defaults\n//////////////////////\n\nvar defaults = {\n  classes: ['active'],\n  on: 'click',\n  min: 0,\n  max: 1,\n};\n\n//////////////////////\n// Constructor\n//////////////////////\n\n/**\n * Plugin Object\n * @param {Element} object Base element\n * @param {Object} options User options\n * @constructor\n */\nfunction Xt(object, jsOptions) {\n  this.object = object;\n  // js options\n  this.options = XtUtil.merge([defaults, jsOptions || {}]);\n  // markup options\n  var markupOptions = this.object.getAttribute('data-xt-toggle');\n  this.options = XtUtil.merge([this.options, markupOptions ? JSON.parse(markupOptions) : {}]);\n  // classes\n  if (this.options.class) {\n    this.options.classes = [...this.options.classes, ...this.options.class.split(' ')];\n  }\n  // init\n  this.initSetup();\n  this.initScope();\n  this.initEvents();\n}\n\n//////////////////////\n// Methods\n//////////////////////\n\nXt.prototype = {\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * setup namespace, container and options\n   */\n  initSetup: function () {\n    var options = this.options;\n    // setup (based on xtend mode)\n    if (options.targets && options.targets.indexOf('#') !== -1) {\n      // xtend document mode\n      this.container = document;\n      options.max = Infinity;\n      this.namespace = options.targets.toString() + '-' + options.classes.toString();\n    } else {\n      // xtend unique mode\n      this.container = this.object;\n      this.namespace = XtUtil.getUniqueID();\n    }\n    // final namespace\n    this.namespace = this.namespace.replace(/\\W+/g, '');\n    // currents array based on namespace (so shared between Xt objects)\n    if (!this.getCurrents()) {\n      this.setCurrents([]);\n    }\n  },\n\n  /**\n   * init elements, targets and currents\n   */\n  initScope: function () {\n    var self = this;\n    var options = this.options;\n    // elements\n    if (options.elements) {\n      this.elements = XtUtil.arrSingle(this.container.querySelectorAll(options.elements)); //.filter(':parents(.xt-ignore)');\n    }\n    if (!this.elements.length) {\n      this.elements = XtUtil.arrSingle(this.object);\n      // @FIX on next frame set all elements querying the namespace\n      XtUtil.requestAnimationFrame.call(window, function () {\n        self.elements = XtUtil.arrSingle(document.querySelectorAll('[data-xt-namespace=' + self.namespace + ']'));\n      });\n    }\n    // targets\n    if (options.targets) {\n      var arr = Array.from(this.container.querySelectorAll(options.targets));\n      arr = arr.filter(\n        // filter out nested options.targets\n        x => !XtUtil.parents(x, options.targets).length\n      );\n      this.targets = XtUtil.arrSingle(arr);\n    }\n    // @FIX set namespace for next frame\n    this.elements.forEach(function (el, i) {\n      el.setAttribute('data-xt-namespace', self.namespace);\n    });\n    // currents\n    XtUtil.requestAnimationFrame.call(window, function () {\n      if (self.elements.length) {\n        // activate defaults.class\n        self.elements.forEach(function (el, i) {\n          if (el.classList.contains(...defaults.classes)) {\n            self.eventOn(el);\n          }\n        });\n        // if currents < min\n        var todo = options.min - self.getCurrents().length;\n        if (todo) {\n          for (var i = 0; i < todo; i++) {\n            self.eventOn(self.elements[i]);\n          }\n        }\n      }\n    });\n  },\n\n  /**\n   * init events\n   */\n  initEvents: function () {\n    var self = this;\n    var options = this.options;\n    // on and off\n    this.elements.forEach(function (el, i) {\n      if (options.on) {\n        el.addEventListener(options.on, function (e) {\n          self.eventOn(this);\n        });\n      }\n      if (options.off) {\n        el.addEventListener(options.off, function (e) {\n          self.eventOff(this);\n        });\n      }\n    });\n  },\n\n  //////////////////////\n  // Utils Methods\n  //////////////////////\n\n  /**\n   * choose which elements to activate/deactivate (based on xtend mode and containers)\n   * @param {Element} element Element that triggered interaction\n   * @returns {Object} object.all and object.single\n   */\n  getElements: function (element) {\n    if (!this.elements.length) {\n      return {all: null, single: null};\n    }\n    if (this.container === document) {\n      // when container is document choose all elements\n      return {all: this.elements, single: this.elements};\n    }\n    // choose element by group\n    var group = element.getAttribute('data-group');\n    if (group) {\n      // all group elements if group\n      var groupElements = Array.from(this.elements).filter(\n        x => x.getAttribute('data-group') === group\n      );\n      var final = XtUtil.arrSingle(groupElements);\n      return {all: final, single: final[0]};\n    } else {\n      // element if not group\n      var final = element;\n      return {all: XtUtil.arrSingle(final), single: final};\n    }\n  },\n\n  /**\n   * choose which targets to activate/deactivate (based on xtend mode and containers)\n   * @param {Element} element Element that triggered interaction\n   * @returns {Array}\n   */\n  getTargets: function (element) {\n    if (!this.targets.length) {\n      return null;\n    }\n    if (this.container === document) {\n      // when container is document choose all targets\n      return this.targets;\n    }\n    // choose only target by group\n    var group = element.getAttribute('data-group');\n    var groupElements = Array.from(this.elements).filter(\n      x => x.getAttribute('data-group') === group\n    );\n    var groupTargets = Array.from(this.targets).filter(\n      x => x.getAttribute('data-group') === group\n    );\n    if (group) {\n      // all group targets if group\n      var final = groupTargets;\n      return XtUtil.arrSingle(final);\n    } else {\n      // not group targets by index if not group\n      var index = groupElements.findIndex(x => x === element);\n      var final = groupTargets[index];\n      return XtUtil.arrSingle(final);\n    }\n  },\n\n  /**\n   * get currents based on namespace (so shared between Xt objects)\n   * @returns {Element}\n   */\n  getCurrents: function () {\n    return XtUtil.currents[this.namespace];\n  },\n\n  /**\n   * set currents based on namespace (so shared between Xt objects)\n   * @param {Array} arr\n   */\n  setCurrents: function (arr) {\n    XtUtil.currents[this.namespace] = arr;\n  },\n\n  /**\n   * add current based on namespace (so shared between Xt objects)\n   * @param {Element} element To be added\n   */\n  addCurrent: function (element) {\n    var arr = XtUtil.currents[this.namespace];\n    arr.push(element);\n  },\n\n  /**\n   * remove currents based on namespace (so shared between Xt objects)\n   * @param {Element} element To be removed\n   */\n  removeCurrent: function (element) {\n    XtUtil.currents[this.namespace] = XtUtil.currents[this.namespace].filter(\n      x => x !== element\n    );\n  },\n\n  //////////////////////\n  // Event Methods\n  //////////////////////\n\n  /**\n   * element activation\n   * @param {Element} element To be activated\n   */\n  eventOn: function (element) {\n    var options = this.options;\n    // activate or deactivate\n    if (!element.classList.contains(...defaults.classes)) {\n      var fElements = this.getElements(element);\n      this.addCurrent(fElements.single);\n      fElements.all.forEach(function (el, i) {\n        el.classList.add(...options.classes);\n      });\n      var targets = this.getTargets(element);\n      targets.forEach(function (el, i) {\n        el.classList.add(...options.classes);\n      });\n    } else {\n      this.eventOff(element);\n    }\n    // if currents > max\n    var currents = this.getCurrents();\n    if (currents.length > options.max) {\n      this.eventOff(currents[0]);\n    }\n  },\n\n  /**\n   * element deactivation\n   * @param {Element} element To be deactivated\n   */\n  eventOff: function (element) {\n    var options = this.options;\n    // if currents < min\n    var todo = options.min - this.getCurrents().length;\n    if (!todo) {\n      return;\n    }\n    // deactivate\n    if (element.classList.contains(...defaults.classes)) {\n      var fElements = this.getElements(element);\n      this.removeCurrent(fElements.single);\n      fElements.all.forEach(function (el, i) {\n        el.classList.remove(...options.classes);\n      });\n      var targets = this.getTargets(element);\n      targets.forEach(function (el, i) {\n        el.classList.remove(...options.classes);\n      });\n    }\n  },\n\n};\n\n//////////////////////\n// Public APIs\n//////////////////////\n\nexport default Xt;\n"]}