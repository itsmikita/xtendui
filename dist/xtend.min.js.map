{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/xtend-utils.js","src/scripts/xtend.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_xtend","XtUtil","currents","initAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","document","querySelectorAll","Symbol","iterator","next","done","el","value","XtToggle","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_el","XtScroll","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","id","getUniqueID","uid","merge","arr","final","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","obj","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Object","entries","_step4$value","_slicedToArray","key","arrSingle","single","Array","createElement","str","div","innerHTML","trim","firstChild","parents","element","query","parentElement","closest","push","doc","proto","querySelector","_arr","_loop","method","_i","nativ","selectors","test","_id","this","Date","now","replace","result","Element","prototype","_xtendUtils","Xt","object","jsOptions","attr","_classCallCheck","defaults","constructor","options","_xtendUtils2","default","markupOptions","getAttribute","JSON","parse","class","classes","concat","_toConsumableArray","split","initSetup","initScope","targets","indexOf","mode","container","max","Infinity","namespace","toString","getCurrents","setCurrents","self","elements","from","filter","x","setAttribute","_el$classList","classList","contains","apply","eventOn","todo","min","all","group","groupElements","_final","groupTargets","_final2","findIndex","_element$classList","eventOff","fElements","getElements","addCurrent","activationOn","getTargets","_element$classList2","removeCurrent","activationOff","els","_el$classList2","add","remove","activationOffClear","collapseOn","_el$classList3","activationOffAnimate","collapseOff","timing","transition","parseFloat","getComputedStyle","animation","Math","timeout","style","height","paddingTop","paddingBottom","h","clientHeight","pt","pb","width","paddingLeft","paddingRight","w","pl","pr","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","initEvents","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","on","addEventListener","off","_this2","_get","before","append","cloneNode","eventScroll","scrollTop","documentElement","scrollFrame","_element$classList3","_element$classList4","top","getBoundingClientRect","bottom","isNaN","elTop","elBottom","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_fElements","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7"],"mappings":"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","file":"xtend.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport {XtToggle, XtScroll} from \"./xtend\";\n\n//////////////////////\n// Constructor\n//////////////////////\n\nconst XtUtil = {};\n\n//////////////////////\n// Properties\n//////////////////////\n\n// Xt currents based on namespace (so shared between Xt objects)\n\nXtUtil.currents = {};\n\n//////////////////////\n// Methods\n//////////////////////\n\n/**\n * init all data-xt classes\n */\nXtUtil.initAll = function () {\n  // xt-toggle\n  for (let el of document.querySelectorAll('[data-xt-toggle]')) {\n    new XtToggle(el);\n  }\n  // xt-scroll\n  for (let el of document.querySelectorAll('[data-xt-scroll]')) {\n    new XtScroll(el);\n  }\n};\n\n/**\n * request animation frame\n * @param {Function} Function for animation frame\n * @returns {Number} AnimationFrame id\n * USAGE: let animationFrame = XtUtil.requestAnimationFrame.call(window, function () {});\n */\nXtUtil.requestAnimationFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\n/**\n * cancel animation frame\n * @param {Number} id AnimationFrame id\n * USAGE: XtUtil.cancelAnimationFrame.call(window, animationFrame);\n */\nXtUtil.cancelAnimationFrame = function () {\n  return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (callback) {\n    window.clearTimeout(id);\n  };\n}();\n\n/**\n * Get unique id\n * @returns {String} Unique id\n */\nXtUtil.getUniqueID = function () {\n  XtUtil.uid = XtUtil.uid !== undefined ? XtUtil.uid : 0;\n  return 'unique-id-' + (XtUtil.uid++);\n};\n\n/**\n * Merge objects\n * @param {Array} arr Array of objects to merge\n * @returns {Object} Merged object\n */\nXtUtil.merge = function (arr) {\n  let final = {};\n  for (let obj of arr) {\n    for (let [key, value] of Object.entries(obj)) {\n      final[key] = value;\n    }\n  }\n  return final;\n};\n\n/**\n * Make an array when element is only one\n * @param {Object|Array} element\n * @returns {Array}\n */\nXtUtil.arrSingle = function (single) {\n  if (single.length === undefined) {\n    let arr = new Array(1);\n    arr[0] = single;\n    return arr;\n  } else {\n    return single;\n  }\n};\n\n/**\n * Create DOM element from html string\n * @param {String} str Html string (only 1 root html tag)\n * @return {Element} DOM element\n */\nXtUtil.createElement = function (str) {\n  let div = document.createElement('div');\n  div.innerHTML = str.trim();\n  return div.firstChild;\n};\n\n/**\n * Query element's parents\n * @param {Element} element Child element\n * @param {String} query Query parents\n * @return {Element} Parents elements by query\n */\nXtUtil.parents = function (element, query) {\n  let parents = [];\n  while (element = element.parentElement.closest(query)) {\n    parents.push(element);\n  }\n  return parents;\n};\n\n/**\n * Get element index\n * @param {Element} node Element to check the index of\n * @return {Number} Element's index\n */\n/*\nXtUtil.getElementIndex = function (node) {\n  let index = 0;\n  while ((node = node.previousElementSibling)) {\n    index++;\n  }\n  return index;\n};\n*/\n\n/**\n * Get the closest matching element up the DOM tree\n * @param {Element} element Starting element\n * @param {String} selector Selector to match against (class, ID, or data attribute)\n * @return {Boolean|Element} Returns false if not match found\n */\n/*\nXtUtil.getClosest = function (element, selector) {\n  let firstChar = selector.charAt(0);\n  for (; element && element !== document; element = element.parentNode) {\n    if (firstChar === '.') {\n      if (element.classList.contains(selector.substr(1))) {\n        return element;\n      }\n    } else if (firstChar === '#') {\n      if (element.id === selector.substr(1)) {\n        return element;\n      }\n    } else if (firstChar === '[') {\n      if (element.hasAttribute(selector.substr(1, selector.length - 2))) {\n        return element;\n      }\n    }\n  }\n  return false;\n};\n*/\n\n//////////////////////\n// Public APIs\n//////////////////////\n\nexport default XtUtil;\n\n//////////////////////\n// Scope polyfill (https://stackoverflow.com/questions/6481612/queryselector-search-immediate-children)\n// USAGE : querySelectorAll(':scope > .selector');\n//////////////////////\n\n(function (doc, proto) {\n  try { // check if browser supports :scope natively\n    doc.querySelector(':scope body');\n  } catch (err) { // polyfill native methods if it doesn't\n    for (let method of ['querySelector', 'querySelectorAll']) {\n      let nativ = proto[method];\n      proto[method] = function (selectors) {\n        if (/(^|,)\\s*:scope/.test(selectors)) { // only if selectors contains :scope\n          let id = this.id; // remember current element id\n          this.id = 'ID_' + Date.now(); // assign new unique id\n          selectors = selectors.replace(/((^|,)\\s*):scope/g, '$1#' + this.id); // replace :scope with #ID\n          let result = doc[method](selectors);\n          this.id = id; // restore previous id\n          return result;\n        } else {\n          return nativ.call(this, selectors); // use native code for other selectors\n        }\n      }\n    }\n  }\n})(window.document, Element.prototype);\n","/*! xtend v0.0.14 (https://getxtend.com/)\n@copyright (c) 2017 - 2018 Riccardo Caroli\n@license MIT (https://github.com/minimit/xtend-library/blob/master/LICENSE) */\n\n'use strict';\n\nimport XtUtil from './xtend-utils';\n\n//////////////////////\n// Xt\n//////////////////////\n\nexport class Xt {\n\n  /**\n   * Constructor\n   * @param {Element} object Base element\n   * @param {Object} options User options\n   * @param {String} attr Attribute name with json options\n   * @constructor\n   */\n  constructor(object, jsOptions, attr) {\n    this.object = object;\n    this.defaults = this.constructor.defaults;\n    // js options\n    this.options = XtUtil.merge([this.defaults, jsOptions || {}]);\n    // markup options\n    let markupOptions = this.object.getAttribute(attr);\n    this.options = XtUtil.merge([this.options, markupOptions ? JSON.parse(markupOptions) : {}]);\n    // classes\n    if (this.options.class) {\n      this.options.classes = [...this.options.classes, ...this.options.class.split(' ')];\n    }\n    // init\n    this.initSetup();\n    this.initScope();\n  }\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * setup namespace, container and options\n   */\n  initSetup() {\n    let options = this.options;\n    // setup (based on xtend mode)\n    if (options.targets && options.targets.indexOf('#') !== -1) {\n      // xtend all mode\n      this.mode = 'all';\n      this.container = document;\n      options.max = Infinity;\n      this.namespace = options.targets.toString() + '-' + options.classes.toString();\n    } else {\n      // xtend unique mode\n      this.mode = 'unique';\n      this.container = this.object;\n      this.namespace = XtUtil.getUniqueID();\n    }\n    // final namespace\n    this.namespace = this.namespace.replace(/\\W+/g, '');\n    // currents array based on namespace (so shared between Xt objects)\n    if (!this.getCurrents()) {\n      this.setCurrents([]);\n    }\n  }\n\n  /**\n   * init elements, targets and currents\n   */\n  initScope() {\n    let self = this;\n    let options = this.options;\n    // elements\n    this.elements = [];\n    if (options.elements) {\n      this.elements = XtUtil.arrSingle(this.container.querySelectorAll(options.elements));\n    }\n    if (!this.elements.length) {\n      this.elements = XtUtil.arrSingle(this.object);\n      // @FIX on next frame set all elements querying the namespace\n      XtUtil.requestAnimationFrame.call(window, function () {\n        self.elements = XtUtil.arrSingle(document.querySelectorAll('[data-xt-namespace=' + self.namespace + ']'));\n      });\n    }\n    // targets\n    if (options.targets) {\n      let arr = Array.from(this.container.querySelectorAll(options.targets));\n      arr = arr.filter(x => !XtUtil.parents(x, options.targets).length); // filter out nested options.targets\n      this.targets = XtUtil.arrSingle(arr);\n    }\n    // @FIX set namespace for next frame\n    for (let el of this.elements) {\n      el.setAttribute('data-xt-namespace', self.namespace);\n    }\n    // currents\n    XtUtil.requestAnimationFrame.call(window, function () {\n      if (self.elements.length) {\n        // activate defaults.class\n        for (let el of self.elements) {\n          if (el.classList.contains(...self.defaults.classes)) {\n            self.eventOn(el);\n          }\n        }\n        // if currents < min\n        let todo = options.min - self.getCurrents().length;\n        if (todo) {\n          for (let i = 0; i < todo; i++) {\n            self.eventOn(self.elements[i]);\n          }\n        }\n      }\n    });\n  }\n\n  //////////////////////\n  // Utils Methods\n  //////////////////////\n\n  /**\n   * choose which elements to activate/deactivate (based on xtend mode and containers)\n   * @param {Element} element Element that triggered interaction\n   * @returns {Object} object.all and object.single\n   */\n  getElements(element) {\n    if (!this.elements || !this.elements.length) {\n      return {all: [], single: null};\n    }\n    if (this.mode === 'all') {\n      // choose all elements\n      return {all: this.elements, single: this.elements};\n    } else if (this.mode === 'unique') {\n      // choose element by group\n      let group = element.getAttribute('data-group');\n      if (group) {\n        // all group elements if group\n        let groupElements = Array.from(this.elements).filter(x => x.getAttribute('data-group') === group);\n        let final = XtUtil.arrSingle(groupElements);\n        return {all: final, single: final[0]};\n      } else {\n        // element if not group\n        let final = element;\n        return {all: XtUtil.arrSingle(final), single: final};\n      }\n    }\n  }\n\n  /**\n   * choose which targets to activate/deactivate (based on xtend mode and containers)\n   * @param {Element} element Element that triggered interaction\n   * @returns {Array}\n   */\n  getTargets(element) {\n    if (!this.targets || !this.targets.length) {\n      return [];\n    }\n    if (this.mode === 'all') {\n      // choose all targets\n      return this.targets;\n    } else if (this.mode === 'unique') {\n      // choose only target by group\n      let group = element.getAttribute('data-group');\n      let groupElements = Array.from(this.elements).filter(x => x.getAttribute('data-group') === group);\n      let groupTargets = Array.from(this.targets).filter(x => x.getAttribute('data-group') === group);\n      if (group) {\n        // all group targets if group\n        let final = groupTargets;\n        return XtUtil.arrSingle(final);\n      } else {\n        // not group targets by index if not group\n        let index = groupElements.findIndex(x => x === element);\n        let final = groupTargets[index];\n        return XtUtil.arrSingle(final);\n      }\n    }\n  }\n\n  /**\n   * get currents based on namespace (so shared between Xt objects)\n   * @returns {Element}\n   */\n  getCurrents() {\n    return XtUtil.currents[this.namespace];\n  }\n\n  /**\n   * set currents based on namespace (so shared between Xt objects)\n   * @param {Array} arr\n   */\n  setCurrents(arr) {\n    XtUtil.currents[this.namespace] = arr;\n  }\n\n  /**\n   * add current based on namespace (so shared between Xt objects)\n   * @param {Element} element To be added\n   */\n  addCurrent(element) {\n    let arr = XtUtil.currents[this.namespace];\n    arr.push(element);\n  }\n\n  /**\n   * remove currents based on namespace (so shared between Xt objects)\n   * @param {Element} element To be removed\n   */\n  removeCurrent(element) {\n    XtUtil.currents[this.namespace] = XtUtil.currents[this.namespace].filter(x => x !== element);\n  }\n\n  //////////////////////\n  // Event Methods\n  //////////////////////\n\n  /**\n   * element on\n   * @param {Element} element To be activated\n   */\n  eventOn(element) {\n    let options = this.options;\n    // activate or deactivate\n    if (!element.classList.contains(...this.defaults.classes)) {\n      let fElements = this.getElements(element);\n      this.addCurrent(fElements.single);\n      this.activationOn(fElements.all);\n      let targets = this.getTargets(element);\n      this.activationOn(targets);\n    } else {\n      this.eventOff(element);\n    }\n    // if currents > max\n    let currents = this.getCurrents();\n    if (currents.length > options.max) {\n      this.eventOff(currents[0]);\n    }\n  }\n\n  /**\n   * element off\n   * @param {Element} element To be deactivated\n   */\n  eventOff(element) {\n    let options = this.options;\n    // if currents < min\n    let todo = options.min - this.getCurrents().length;\n    if (!todo) {\n      return;\n    }\n    // deactivate\n    if (element.classList.contains(...this.defaults.classes)) {\n      let fElements = this.getElements(element);\n      this.removeCurrent(fElements.single);\n      this.activationOff(fElements.all);\n      let targets = this.getTargets(element);\n      this.activationOff(targets);\n    }\n  }\n\n  //////////////////////\n  // Activation Methods\n  //////////////////////\n\n  /**\n   * element activation\n   * @param {Element} element To be activated\n   */\n  activationOn(els) {\n    let self = this;\n    let options = this.options;\n    // activate\n    for (let el of els) {\n      el.classList.add(...options.classes);\n      el.classList.remove('out');\n      self.activationOffClear(el);\n      // specials\n      self.collapseOn(el);\n    }\n  }\n\n  /**\n   * element deactivation\n   * @param {Element} element To be deactivated\n   */\n  activationOff(els) {\n    let self = this;\n    let options = this.options;\n    // deactivate\n    for (let el of els) {\n      el.classList.remove(...options.classes);\n      el.classList.add('out');\n      self.activationOffAnimate(el);\n      // specials\n      self.collapseOff(el);\n    }\n  }\n\n  /**\n   * element out animation\n   * @param {Element} element To be animated\n   */\n  activationOffAnimate(el) {\n    this.activationOffClear(el);\n    // timing\n    let timing = options.timing;\n    let transition = parseFloat(getComputedStyle(el)['transitionDuration']);\n    let animation = parseFloat(getComputedStyle(el)['animationDuration']);\n    if (transition || animation) {\n      timing = Math.max(transition, animation);\n    }\n    // delay\n    if (!timing) {\n      el.classList.remove('out');\n    } else {\n      timing = timing * 1000;\n      let timeout = setTimeout(function (el) {\n        el.classList.remove('out');\n      }, timing, el);\n      el.setAttribute('xt-out-timeout', timeout);\n    }\n  }\n\n  /**\n   * clear activationOffAnimate\n   * @param {Element} element\n   */\n  activationOffClear(el) {\n    clearTimeout(parseFloat(el.getAttribute('xt-out-timeout')));\n  }\n\n  //////////////////////\n  // Special Methods\n  //////////////////////\n\n  /**\n   * collapseOn on activation\n   * @param {Element} element\n   */\n  collapseOn(el) {\n    if (el.classList.contains('collapse-height')) {\n      el.classList.add('no-transition');\n      el.style.height = 'auto';\n      el.style.paddingTop = '';\n      el.style.paddingBottom = '';\n      let h = el.clientHeight + 'px';\n      let pt = el.style.paddingTop;\n      let pb = el.style.paddingBottom;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.height = '0';\n        el.style.paddingTop = '0';\n        el.style.paddingBottom = '0';\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.classList.remove('no-transition');\n          el.style.height = h;\n          el.style.paddingTop = pt;\n          el.style.paddingBottom = pb;\n        });\n      });\n    }\n    if (el.classList.contains('collapse-width')) {\n      el.style.width = 'auto';\n      el.style.paddingLeft = '';\n      el.style.paddingRight = '';\n      let w = el.clientHeight + 'px';\n      let pl = el.style.paddingLeft;\n      let pr = el.style.paddingRight;\n      XtUtil.requestAnimationFrame.call(window, function () {\n        el.style.width = '0';\n        el.style.paddingLeft = '0';\n        el.style.paddingRight = '0';\n        XtUtil.requestAnimationFrame.call(window, function () {\n          el.classList.remove('no-transition');\n          el.style.width = w;\n          el.style.paddingLeft = pl;\n          el.style.paddingRight = pr;\n        });\n      });\n    }\n  }\n\n  /**\n   * collapseOff on deactivation\n   * @param {Element} element\n   */\n  collapseOff(el) {\n    if (el.classList.contains('collapse-height')) {\n      el.style.height = '0';\n      el.style.paddingTop = '0';\n      el.style.paddingBottom = '0';\n    }\n    if (el.classList.contains('collapse-width')) {\n      el.style.width = '0';\n      el.style.paddingLeft = '0';\n      el.style.paddingRight = '0';\n    }\n  }\n\n}\n\n// defaults\n\nXt.defaults = {\n  classes: ['active']\n};\n\n\n//////////////////////\n// XtToggle\n//////////////////////\n\nexport class XtToggle extends Xt {\n\n  /**\n   * Constructor\n   * @param {Element} object Base element\n   * @param {Object} options User options\n   * @constructor\n   */\n  constructor(object, jsOptions) {\n    super(object, jsOptions, 'data-xt-toggle');\n    this.initEvents();\n  }\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * init events\n   */\n  initEvents() {\n    let self = this;\n    let options = this.options;\n    // on and off\n    for (let el of this.elements) {\n      if (options.on) {\n        el.addEventListener(options.on, function (e) {\n          self.eventOn(this);\n        });\n      }\n      if (options.off) {\n        el.addEventListener(options.off, function (e) {\n          self.eventOff(this);\n        });\n      }\n    }\n  }\n\n}\n\n// defaults\n\nXtToggle.defaults = {\n  elements: ':scope > .btn',\n  targets: '[class^=\"toggle-\"], [class*=\" toggle-\"]',\n  classes: ['active'],\n  on: 'click',\n  min: 0,\n  max: 1\n};\n\n//////////////////////\n// XtScroll\n//////////////////////\n\nexport class XtScroll extends Xt {\n\n  /**\n   * Constructor\n   * @param {Element} object Base element\n   * @param {Object} options User options\n   * @constructor\n   */\n  constructor(object, jsOptions) {\n    super(object, jsOptions, 'data-xt-scroll');\n    this.initEvents();\n  }\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * init elements, targets and currents\n   */\n  initScope() {\n    super.initScope();\n    // mode\n    this.mode = 'all';\n    // container\n    this.container = XtUtil.parents(this.object, '.xt-container.xt-position');\n    if (!this.container.length) {\n      this.container = XtUtil.createElement('<div class=\"xt-container xt-position\"></div>');\n      this.object.before(this.container);\n      this.container.append(this.object);\n      this.container = XtUtil.parents(this.object, '.xt-container.xt-position');\n    }\n    // targets\n    this.targets = this.container[0].querySelectorAll('.xt-clone.xt-ignore');\n    if (this.targets) {\n      this.targets = this.object.cloneNode(true);\n      this.targets.classList.add('xt-clone', 'xt-ignore');\n      this.container[0].append(this.targets);\n    }\n    this.targets = XtUtil.arrSingle(this.targets);\n  }\n\n  //////////////////////\n  // Init Methods\n  //////////////////////\n\n  /**\n   * init events\n   */\n  initEvents() {\n    let self = this;\n    let options = this.options;\n    // scroll\n    window.addEventListener(options.on, function (e) {\n      self.eventScroll(self.object);\n    });\n  }\n\n  //////////////////////\n  // Event Methods\n  //////////////////////\n\n  /**\n   * window scroll\n   * @param {Element} element To be activated or deactivated\n   */\n  eventScroll(element) {\n    let self = this;\n    let options = this.options;\n    // scroll\n    let scrollTop = document.documentElement.scrollTop;\n    XtUtil.cancelAnimationFrame.call(window, this.scrollFrame);\n    this.scrollFrame = XtUtil.requestAnimationFrame.call(window, function () {\n      let rectContainer = self.container[0].getBoundingClientRect();\n      let top = rectContainer.top;\n      let bottom = Infinity;\n      // top\n      if (!isNaN(parseFloat(options.top))) {\n        top = options.top;\n      } else {\n        let elTop = document.querySelectorAll(options.top);\n        if (elTop.length) {\n          let rectTop = elTop[0].getBoundingClientRect();\n          top = rectTop.top + scrollTop;\n        } else {\n          let rectTop = self.targets[0].getBoundingClientRect();\n          top = rectTop.top + scrollTop;\n        }\n      }\n      // bottom\n      if (options.bottom !== undefined) {\n        if (!isNaN(parseFloat(options.bottom))) {\n          bottom = options.bottom;\n        } else {\n          let elBottom = document.querySelectorAll(options.bottom);\n          if (elBottom.length) {\n            let rectBottom = elBottom[0].getBoundingClientRect();\n            bottom = rectBottom.top + scrollTop;\n          } else {\n            let rectBottom = self.targets[0].getBoundingClientRect();\n            bottom = rectBottom.top + scrollTop;\n          }\n        }\n      }\n      // check\n      if (scrollTop >= top && scrollTop < bottom) {\n        // inside\n        if (!element.classList.contains(...self.defaults.classes)) {\n          self.eventOn(element);\n          // direction\n          let fElements = self.getElements(element);\n          for (let el of fElements.all) {\n            el.classList.remove('scroll-off-top', 'scroll-off-bottom');\n            if (self.scrollTop > scrollTop) {\n              el.classList.remove('scroll-on-top');\n              el.classList.add('scroll-on-bottom');\n            } else {\n              el.classList.add('scroll-on-top');\n              el.classList.remove('scroll-on-bottom');\n            }\n          }\n        }\n      } else {\n        // outside\n        if (element.classList.contains(...self.defaults.classes)) {\n          self.eventOff(element);\n          // direction\n          let fElements = self.getElements(element);\n          for (let el of fElements.all) {\n            el.classList.remove('scroll-on-top', 'scroll-on-bottom');\n            if (self.scrollTop > scrollTop) {\n              el.classList.remove('scroll-off-top');\n              el.classList.add('scroll-off-bottom');\n            } else {\n              el.classList.add('scroll-off-top');\n              el.classList.remove('scroll-off-bottom');\n            }\n          }\n        }\n      }\n      // save for direction\n      self.scrollTop = scrollTop;\n    });\n  }\n\n}\n\n// defaults\n\nXtScroll.defaults = {\n  classes: ['active'],\n  on: 'scroll',\n  min: 0,\n  max: Infinity\n};\n"]}