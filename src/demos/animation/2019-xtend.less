@import (reference) '~xtend-library/src/xtend-core.less';
@import '~xtend-library/src/core/card/card.less';
@import '~xtend-library/src/core/drop/drop.less';
@import '~xtend-library/src/core/overlay/overlay.less';
@import '~xtend-library/src/addons/overlay/position.less';
@import '~xtend-library/src/addons/overlay/screen.less';

.demo--2019-xtend {
  /**
   * button
   */

  // variant

  .btn-default {
    &:hover, &.hover {
      transform: translateY(-.25rem);
      box-shadow: @shadow-light;
    }
    &:active, &.active {
      transform: none;
      box-shadow: @shadow-none;
    }
  }

  .btn-primary {
    &:hover, &.hover {
      transform: translateY(-.25rem);
      box-shadow: @shadow-accent;
    }
    &:active, &.active {
      transform: none;
      box-shadow: @shadow-none;
    }
  }

  // animation

  .btn {
    transition: border @time-small @ease-off, background @time-small @ease-off, color @time-small @ease-off, box-shadow @time-small @ease-off, transform @time-tiny @ease-off;
    &:hover, &.hover {
      transition: border @time-small @ease-on, background @time-small @ease-on, color @time-small @ease-on, box-shadow @time-small @ease-on, transform @time-tiny @ease-on;
    }
    &:active, &.active {
      transition: border @time-small @ease-on, background @time-small @ease-on, color @time-small @ease-on, box-shadow @time-small @ease-on, transform @time-tiny @ease-on;
    }
  }

  /**
   * drop
   */

  // animation

  .drop-container {
    > .drop {
      > .drop-inner {
        > .drop-design {
          opacity: 0;
          transform: scale(.75, .75);
        }
        > .drop-content {
          opacity: 0;
          transform: translateY(-1.5rem);
        }
      }
    }
    &.in {
      animation-duration: @time-small + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
      > .drop {
        > .drop-inner {
          > .drop-design {
            opacity: 1;
            transform: none;
            transition: transform @time-medium @ease-on, opacity @time-medium @ease-on;
          }
          > .drop-content {
            opacity: 1;
            transform: none;
            transition: transform @time-medium @ease-on @time-tiny, opacity @time-medium @ease-on @time-tiny;
          }
        }
      }
    }
    &.out {
      animation-duration: @time-small + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
      > .drop {
        > .drop-inner {
          > .drop-design {
            opacity: 0;
            transform: scale(.75, .75);
            transition: transform @time-small @ease-off @time-tiny, opacity @time-small @ease-off @time-tiny;
          }
          > .drop-content {
            opacity: 0;
            transform: translateY(1.5rem);
            transition: transform @time-small @ease-off, opacity @time-small @ease-off;
          }
        }
      }
    }
  }

  /**
    * overlay
    */

  // animation

  .overlay& {
    .card-overlay {
      > .card-design {
        opacity: 0;
        transform: scale(.75, .75);
      }
      > .card-inner {
        > .card-content {
          opacity: 0;
          transform: translateY(-1.5rem);
        }
        > .btn-close {
          opacity: 0;
        }
      }
    }
    &.in {
      animation-duration: @time-medium + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
      .card-overlay {
        > .card-design {
          opacity: 1;
          transform: scale(1);
          transition: transform @time-medium @ease-on, opacity @time-medium @ease-on;
        }
        > .card-inner {
          > .card-content {
            opacity: 1;
            transform: none;
            transition: transform @time-medium @ease-on @time-tiny, opacity @time-medium @ease-on @time-tiny;
          }
          > .btn-close {
            // use animation to not override .btn transitions
            .anim-zoom.in();
            animation-delay: @time-medium;
          }
        }
      }
    }
    &.out {
      animation-duration: @time-small + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
      .card-overlay {
        > .card-design {
          opacity: 0;
          transform: scale(.75, .75);
          transition: transform @time-small @ease-off @time-tiny, opacity @time-small @ease-off @time-tiny;
        }
        > .card-inner {
          > .card-content {
            opacity: 0;
            transform: translateY(1.5rem);
            transition: transform @time-small @ease-off, opacity @time-small @ease-off;
          }
          > .btn-close {
            // use animation to not override .btn transitions
            .anim-zoom.out();
            animation-delay: initial;
          }
        }
      }
    }
  }

  /**
   * card
   */

  // variant

  .card-default& {
    // interactive
    a&, button& {
      &:hover, &.hover {
        > .card-design {
          box-shadow: @shadow-light;
        }
      }
      &:active, &.active {
        > .card-design {
          box-shadow: none;
        }
      }
    }
  }

  .card-primary& {
    // interactive
    a&, button& {
      &:hover, &.hover {
        > .card-design {
          box-shadow: @shadow-accent;
        }
      }
      &:active, &.active {
        > .card-design {
          box-shadow: none;
        }
      }
    }
  }

  .card-white& {
    // interactive
    a&, button& {
      &:hover, &.hover {
        > .card-design {
          box-shadow: @shadow-light;
        }
      }
      &:active, &.active {
        > .card-design {
          box-shadow: none;
        }
      }
    }
  }

  // animation

  .card& {
    a&, button&, label& {
      transition: all @time-small @ease-off;
      > .card-design {
        transition: all @time-small @ease-off;
      }
      &:hover, &.hover {
        transform: translateY(-.5rem);
        transition: all @time-small @ease-on;
        > .card-design {
          transition: all @time-small @ease-on;
        }
      }
      &:active, &.active, input[type="checkbox"]:not(.unstyled):checked ~ &, input[type="radio"]:not(.unstyled):checked ~ & {
        transform: none;
        transition: all @time-small @ease-on;
        > .card-design {
          transition: all @time-small @ease-on;
        }
      }
    }
  }

}
