@import '~xtend-library/src/addons/overlay/_position.less';

/**
 * overlay-position
 */

.overlay-position {
  .overlay-container {
    .overlay-position-left& {
      width: 88% !important;
      max-width: 500px !important;
    }
    .overlay-position-right& {
      width: 88% !important;
      max-width: 500px !important;
    }
  }
  .card-overlay {
    .card-squared();
    .card-noborder();
  }
}

// animation

.overlay-position {
  &.active {
    animation-duration: @time-medium + @time-small; // needed for animation time and backdrop animation time, put max animation time
    &.overlay-position-left {
      .card-overlay > .card-design,
      .card-overlay > .card-inner > * {
        .anim-x.active();
        animation-delay: initial;
      }
      .card-overlay > .card-inner > .card-content {
        .anim-x.active();
        animation-delay: @time-small;
      }
    }
    &.overlay-position-right {
      .card-overlay > .card-design,
      .card-overlay > .card-inner > * {
        .anim-x-inverse.active();
        animation-delay: initial;
      }
      .card-overlay > .card-inner > .card-content {
        .anim-x-inverse.active();
        animation-delay: @time-small;
      }
    }
  }
  &.out {
    animation-duration: @time-medium + @time-small; // needed for animation time and backdrop animation time, put max animation time
    &.overlay-position-left {
      .card-overlay > .card-design,
      .card-overlay > .card-inner > * {
        .anim-x-inverse.out();
        animation-delay: @time-small;
      }
      .card-overlay > .card-inner > .card-content {
        .anim-x-inverse.out();
        animation-delay: initial;
      }
    }
    &.overlay-position-right {
      .card-overlay > .card-design,
      .card-overlay > .card-inner > * {
        .anim-x.out();
        animation-delay: @time-small;
      }
      .card-overlay > .card-inner > .card-content {
        .anim-x.out();
        animation-delay: initial;
      }
    }
  }
}
