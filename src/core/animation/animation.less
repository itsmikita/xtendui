@import '~xtend-library/src/core/animation/_animation.less';

/**
 * vars
 */

// time

@time-tiny: 100ms;
@time-small: 250ms;
@time-medium: 500ms;
@time-big: 1000ms;
@time-giant: 2000ms;

// ease

@ease-cheetah: ~'cubic-bezier(0.14, 0.63, 0, 1)';
@ease-tiger: ~'cubic-bezier(0.96, 0.1, 0.14, 0.88)';
@ease-cat: ~'cubic-bezier(0.77, 0, 0.17, 1)';
@ease-dog: ~'cubic-bezier(0.36, 0, 0, 1)';
@ease-penguin: ~'cubic-bezier(0.68, 0.13, 0.25, 1)';
@ease-in: @ease-cheetah;
@ease-out: @ease-penguin;

/*
// browsers ease: can be 'In' or 'Out' or 'InOut', see https://easings.net/
linear
easeInOutSine
easeInOutQuad
easeInOutCubic
easeInOutQuart
easeInOutQuint
easeInOutExpo
easeInOutCirc
*/

/**
 * transition
 */

// anim-opacity

.anim-opacity {
  &.active {
    opacity: 0;
    animation-name: anim-opacity-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-opacity-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-opacity-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes anim-opacity-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

// anim-zoom

.anim-zoom {
  &.active {
    opacity: 0;
    animation-name: anim-zoom-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-zoom-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-zoom-in {
  0% {
    opacity: 0;
    transform: scale(.75, .75);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes anim-zoom-out {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(.75, .75);
  }
}

// anim-y

.anim-y {
  &.active {
    opacity: 0;
    animation-name: anim-y-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-y-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-y-in {
  0% {
    opacity: 0;
    transform: translateY(-1.5rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes anim-y-out {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(1.5rem);
  }
}

// anim-y-inverse

.anim-y-inverse {
  &.active {
    opacity: 0;
    animation-name: anim-y-inverse-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-y-inverse-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-y-inverse-in {
  0% {
    opacity: 0;
    transform: translateY(1.5rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes anim-y-inverse-out {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(-1.5rem);
  }
}

// anim-x

.anim-x {
  &.active {
    opacity: 0;
    animation-name: anim-x-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-x-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-x-in {
  0% {
    opacity: 0;
    transform: translateX(-1.5rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes anim-x-out {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(1.5rem);
  }
}

// anim-x-inverse

.anim-x-inverse {
  &.active {
    opacity: 0;
    animation-name: anim-x-inverse-in;
    animation-duration: @time-medium;
    animation-timing-function: @ease-in;
    animation-fill-mode: forwards;
  }
  &.out {
    opacity: 1;
    animation-name: anim-x-inverse-out;
    animation-duration: @time-medium;
    animation-timing-function: @ease-out;
    animation-fill-mode: forwards;
  }
}

@keyframes anim-x-inverse-in {
  0% {
    opacity: 0;
    transform: translateX(1.5rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes anim-x-inverse-out {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-1.5rem);
  }
}

/**
 * custom
 */

// collapse

.collapse-height, .collapse-width {
  &.active {
    transition-property: height, width;
    transition-duration: @time-small;
    transition-delay: initial;
    transition-timing-function: @ease-in;
  }
  &.out {
    transition-property: height, width;
    transition-duration: @time-small;
    transition-delay: initial;
    transition-timing-function: @ease-out;
  }
}

/**
 * prefers-reduced-motion
 */

@media (prefers-reduced-motion: reduce), (update: slow) {
  *, *:before, *:after {
    transition-duration: initial !important;
    transition-delay: initial !important;
    animation-duration: initial !important;
    animation-delay: initial !important;
    animation-iteration-count: 1 !important;
  }
}
