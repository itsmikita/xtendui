/**
 * card
 */

.card {
  .link-none();
  position: relative;
  .flex-full();
  display: flex;
  align-items: center;
  width: 100%;
  height: 100%;
  z-index: @index-base; // fix :before negative z-index
  a&, label& {
    &:hover, &.hover, &:active, &.active {
      z-index: @index-active;
    }
  }
}

.card-inner {
  .full();
  height: 100%;
  // @FIX full height and card-block empty spaces
  display: flex;
  flex-direction: column;
  > .card-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    // @FIX card alignment stretch + no flex-full bugs ie11
    .flex-auto();
  }
  // radius
  &, & > * {
    > *:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }
    > *:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }
  &, & > .card-content {
    border-radius: inherit;
  }
}

.card-block {
}

.card-design {
  .design-setup();
  border-radius: inherit;
}

.card-item {
  display: inline-block;
  position: relative;
}

.card-asset {
  overflow: hidden;
  position: relative;
  .flex-full();
  > * {
    .full();
    height: auto;
  }
}

// selectors

.card-contents(@rules) {
  > .card-inner > .card-content, > .card-inner > .card-content > .card-item-nested {
    @rules();
  }
}

// special

.card-group {
  display: flex;
}

.card-item-nested {
  margin: 0 !important;
  padding: 0 !important;
}

.card-horizontal {
  > .card-inner > .card-content {
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: stretch;
    > *:first-child {
      border-top-left-radius: inherit;
      border-bottom-left-radius: inherit;
      border-top-right-radius: initial;
    }
    > *:last-child {
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
      border-bottom-left-radius: initial;
    }
  }
  .card-asset {
    > * {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

.card-disable {
  .card-nodesign();
  .card-block {
    padding: 0 !important;
  }
}

/**
 * @generate-card-group
 */

// generate

& when not (@generate-card-group = false) {

  // generate-card-horizontal-responsive

  .generate-card-horizontal-responsive();
  .generate-card-horizontal-responsive(@i: length(@generate-card-group)) when (@i > 0) {
    .generate-card-horizontal-responsive(@i - 1);
    @breakpoint: extract(@generate-card-group, @i);
    & when (@breakpoint = none) {
      .card-group {
        .card-group() !important;
      }
    }
    & when not (@breakpoint = none) {
      @query-min: 'min-@{breakpoint}';
      @media @@query-min {
        .card-group-@{breakpoint} {
          .card-group() !important;
        }
      }
    }
  }

}

/**
 * @generate-box-horizontal
 */

// generate

& when not (@generate-box-horizontal = false) {

  // generate-card-horizontal-responsive

  .generate-card-horizontal-responsive();
  .generate-card-horizontal-responsive(@i: length(@generate-box-horizontal)) when (@i > 0) {
    .generate-card-horizontal-responsive(@i - 1);
    @breakpoint: extract(@generate-box-horizontal, @i);
    & when (@breakpoint = none) {
      .card-horizontal {
        .card-horizontal() !important;
      }
    }
    & when not (@breakpoint = none) {
      @query-min: 'min-@{breakpoint}';
      @media @@query-min {
        .card-horizontal-@{breakpoint} {
          .card-horizontal() !important;
        }
      }
    }
  }

}
