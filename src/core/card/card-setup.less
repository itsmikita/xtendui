/**
 * card
 */

.card {
  position: relative;
  a&, button& {
    cursor: pointer;
    &:hover, &.hover, &:active, &.active {
      z-index: @index--active;
    }
  }
}

.card-inner {
  position: relative;
  z-index: @index--base; // fix :before negative z-index
}

.card-content {
  display: flex;
  flex-direction: column;
}

.card-design {
  .design-setup();
}

.card-inner, .card-design {
  border-radius: inherit;
}

.card-item, .card-block, .card-img {
  .block();
  position: relative;
}

// content

.card-img {
  .block();
  .flex-full();
  > img {
    width: 100%;
    height: auto;
  }
}

// addons

.card--horizontal {
  .card-content {
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: stretch;
  }
  .card-img {
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

/**
 * @generate-class--card--horizontal
 */

// generate

& when not (@generate-class--card--horizontal = false) {

  // generate-card--horizontal-responsive

  .generate-card--horizontal-responsive();
  .generate-card--horizontal-responsive(@i: length(@generate-class--card--horizontal)) when (@i > 0) {
    .generate-card--horizontal-responsive(@i - 1);
    @breakpoint: extract(@generate-class--card--horizontal, @i);
    & when (@breakpoint = none) {
      .card--horizontal {
        .card--horizontal() !important;
      }
    }
    & when not (@breakpoint = none) {
      @query-min: 'min-@{breakpoint}';
      @media @@query-min {
        .card--horizontal--@{breakpoint} {
          .card--horizontal() !important;
        }
      }
    }
  }

}
