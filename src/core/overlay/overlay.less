@import 'xtend-library/src/core/overlay/_overlay.less';
@import 'xtend-library/src/core/javascript/javascript.less';
@import 'xtend-library/src/core/card/card.less';

/**
 * overlay
 */

.overlay {
  .overlay-inner {
    border-radius: 6px;
  }
  .overlay-design {
    border-width: 1px;
    border-style: solid;
    border-color: transparent;
  }
  .overlay-container {
    .overlay-space();
  }
  // default options
  .overlay-size-small();
  .overlay-medium();
}

// space

.overlay-space {
  // same as .container-space
  padding: 1.5rem;
  @media @min-xxs {
    padding: 2rem;
  }
  @media @min-xs {
    padding: 3rem;
  }
  @media @min-sm {
    padding: 3rem;
  }
  @media @min-md {
    padding: 4rem;
  }
  @media @min-lg {
    padding: 5rem;
  }
  @media @min-xl {
    padding: 6rem;
  }
}

// variant

.overlay-default {
  .overlay-inner {
    .text-default();
  }
  .overlay-design {
    border-color: @shade-200;
    background: @white;
    box-shadow: @shadow-light;
  }
}

.overlay-primary {
  .overlay-inner {
    .text-inverse();
  }
  .overlay-design {
    border-color: @accent-dark;
    background: @accent;
    box-shadow: @shadow-dark;
  }
}

// size

.overlay-size-tiny {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: 500px;
  }
}

.overlay-size-small {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: 700px;
  }
}

.overlay-size-medium {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: 900px;
  }
}

.overlay-size-large {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: 1200px;
  }
}

.overlay-size-big {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: 1600px;
  }
}

.overlay-size-full {
  .overlay-inner, .card-overlay > .card-inner > .card-content {
    max-width: none;
  }
}

// content size

.overlay-small {
  // card
  .card-overlay {
    .card-small();
    .card-block {
      padding: 2em 2em !important;
    }
  }
}

.overlay-medium {
  // card
  .card-overlay {
    .card-small();
    .card-block {
      padding: 2em 2em !important;
    }
    @media @min-sm {
      .card-medium();
      .card-block {
        padding: 2.5em 2.5em !important;
      }
    }
  }
}

.overlay-large {
  // card
  .card-overlay {
    .card-medium();
    .card-block {
      padding: 2.5em 2.5em !important;
    }
    @media @min-sm {
      .card-large();
      .card-block {
        padding: 3em 3em !important;
      }
    }
  }
}

// special

.overlay-squared {
  .overlay-design {
    border-radius: 0;
  }
}

.overlay-noborder {
  .overlay-design {
    border: 0;
  }
}

.overlay-disable {
  // disable animation
  .card-overlay {
    > .card-inner {
      > .card-block,  > .card-content {
        opacity: 1 !important;
        .transform-none() !important;
        .trans-anim-none() !important;
      }
    }
  }
}

// animation

.overlay {
  .overlay-design {
    opacity: 0;
  }
  .card-overlay {
    > .card-design {
      opacity: 0;
    }
    > .btn-close {
      opacity: 0;
    }
    > .card-inner {
      > .card-block,  > .card-content {
        opacity: 0;
      }
    }
  }
  &.in {
    animation-duration: @time-medium + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
    .overlay-design {
      opacity: 1;
      transition: opacity @time-medium @ease-in;
    }
    .card-overlay {
      > .card-design {
        opacity: 1;
        transition: opacity @time-medium @ease-in;
      }
      > .btn-close {
        // use animation to not override .btn transitions
        .anim-zoom.in();
        animation-delay: @time-medium;
      }
      > .card-inner {
        > .card-block,  > .card-content {
          opacity: 1;
          transition: opacity @time-medium @ease-in @time-tiny;
        }
      }
    }
  }
  &.out {
    animation-duration: @time-small + @time-tiny; // needed for animation time and backdrop animation time, put max animation time
    .overlay-design {
      opacity: 0;
      transition: opacity @time-small @ease-out @time-tiny;
    }
    .card-overlay {
      > .card-design {
        opacity: 0;
        transition: opacity @time-small @ease-out @time-tiny;
      }
      > .btn-close {
        // use animation to not override .btn transitions
        .anim-zoom.out();
        animation-delay: initial;
      }
      > .card-inner {
        > .card-block,  > .card-content {
          opacity: 0;
          transition: opacity @time-small @ease-out;
        }
      }
    }
  }
}
