@import '~xtend-library/components/overlay/overlay-core';

//////////////////////
// variables
//////////////////////

@overlays: tiny, small, medium, big, giant, full; // if you change this change also variables names below
@overlay--tiny: @breakpoint--xs - 60;
@overlay--small: @breakpoint--sm - 60;
@overlay--medium: @breakpoint--md - 60;
@overlay--big: @breakpoint--lg - 60;
@overlay--giant: @breakpoint--xl - 60;
@overlay--full: none;

//////////////////////
// overlay
//////////////////////

.overlay {
  // styles
  .overlay_content {
    padding: 3rem;
    @media @min-sm {
      padding: 4rem;
    }
    & + .overlay_content {
      padding-top: 0 !important;
    }
  }
  .overlay_design, .overlay_content {
    border-radius: 4px;
    border-width: 1px;
    border-style: solid;
    border-color: transparent;
  }
  .btn--close.overlay_dismiss {
    position: absolute;
    top: 0;
    right: 0;
    .btn--giant();
  }
  // option
  .overlay--light();
  .overlay--size(small);
}

// addons

.overlay--screen {
  // option
  .overlay--size(giant);
  .overlay--squared();
  .overlay--noborder();
}

.overlay--pos {
  .overlay {
    .overlay--left& {
      width: 88% !important;
      max-width: 500px !important;
    }
    .overlay--right& {
      width: 88% !important;
      max-width: 500px !important;
    }
  }
  // option
  .overlay--dark();
  .overlay--squared();
  .overlay--noborder();
}

.overlay--disable {
  // disable custom animation
  .overlay {
    .overlay_inner,
    .overlay_content {
      opacity: 1 !important;
      .trans-anim-none() !important;
    }
  }
}

// animation

.overlay_outer {
  animation-duration: @time--medium + @time--small; // needed for .out animation timing, put max animation time
  &.active {
    .overlay_design {
      .anim-zoom.active();
    }
    .overlay_content,
    .btn--close.overlay_dismiss {
      .anim-y.active();
      animation-delay: @time--small;
    }
    > .backdrop {
      .backdrop.active();
    }
    // addons
    &.overlay--screen {
      .anim-opacity.active();
    }
    &.overlay--left {
      .overlay_design {
        .anim-x.active();
      }
      .overlay_content,
      .btn--close.overlay_dismiss {
        .anim-x.active();
        animation-delay: @time--small;
      }
    }
    &.overlay--right {
      .overlay_design {
        .anim-x-inverse.active();
      }
      .overlay_content,
      .btn--close.overlay_dismiss {
        .anim-x-inverse.active();
        animation-delay: @time--small;
      }
    }
  }
  &.out {
    .overlay_design {
      .anim-zoom.out();
      animation-delay: @time--small;
    }
    .overlay_content,
    .btn--close.overlay_dismiss {
      .anim-y.out();
    }
    > .backdrop {
      .backdrop.out();
    }
    // addons
    &.overlay--screen {
      .anim-opacity.out();
      animation-delay: @time--small;
    }
    &.overlay--left {
      .overlay_design {
        .anim-x-inverse.out();
        animation-delay: @time--small;
      }
      .overlay_content,
      .btn--close.overlay_dismiss {
        .anim-x-inverse.out();
      }
    }
    &.overlay--right {
      .overlay_design {
        .anim-x.out();
        animation-delay: @time--small;
      }
      .overlay_content,
      .btn--close.overlay_dismiss {
        .anim-x.out();
      }
    }
  }
}

// variant

.overlay--light {
  .overlay_design {
    border-color: @gray--300;
    background: @white;
    box-shadow: @shadow--light;
  }
  .overlay_content {
    color: @text;
  }
  .btn--close.overlay_dismiss {
    .btn--text();
  }
}

.overlay--dark {
  .overlay_design {
    border-color: @gray--900;
    background: @gray--900;
    box-shadow: @shadow--dark;
  }
  .overlay_content {
    .text--inverse();
  }
  .btn--close.overlay_dismiss {
    .text--inverse();
    .btn--text();
  }
}

// special

.overlay--squared {
  .overlay_design, .overlay_content {
    border-radius: 0;
  }
}

.overlay--noborder {
  .overlay_design {
    border: 0;
  }
}

.overlay--none {
  .overlay_content {
    padding: 0 !important;
  }
}
